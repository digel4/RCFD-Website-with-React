{"ast":null,"code":"import events from '../APIS/events';\nimport { CREATE_EVENT, FETCH_EVENT, FETCH_CURREVENTS, FETCH_PASTEVENTS, EDIT_EVENT, DELETE_EVENT, ADMIN_LOGOUT, ADMIN_LOGIN, MAILCHIMP_EMAIL, MAILCHIMP_FIRST_NAME, MAILCHIMP_SECOND_NAME, SEND_DETAILS_TO_MAILCHIMP_API } from './types'; // ADMIN AUTH ACTIONS\n\nexport const adminLogin = (username, password) => async dispatch => {\n  const response = await events.post('/login', {\n    username,\n    password\n  }, {\n    withCredentials: true\n  });\n  dispatch({\n    type: ADMIN_LOGIN,\n    payload: response.data\n  });\n};\nexport const adminLogout = token => async dispatch => {\n  console.log(\"hit logout\");\n  await events.get('/logout', {\n    withCredentials: true,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  dispatch({\n    type: ADMIN_LOGOUT,\n    payload: {\n      token: null,\n      adminName: null,\n      passowrd: null\n    }\n  });\n};\nexport const verifyUser = () => async dispatch => {\n  const response = await events.post(\"/refreshToken\", {}, {\n    withCredentials: true\n  });\n\n  if (response.statusText === \"OK\") {\n    const data = response.data;\n    dispatch({\n      type: \"VERIFY_USER\",\n      payload: data\n    });\n  } else {\n    console.log(\"something went wrong!\");\n    dispatch({\n      type: \"VERIFY_USER\",\n      payload: {\n        token: null\n      }\n    });\n  } // call refreshToken every 5 minutes to renew the authentication token.\n\n\n  setTimeout(verifyUser, 5 * 60 * 1000);\n}; // ADMIN LOGIN SET STATE ACTIONS\n\nexport const setAdminName = admin => async dispatch => {\n  dispatch({\n    type: \"SET_ADMIN_NAME\",\n    payload: {\n      adminName: admin\n    }\n  });\n};\nexport const setPassword = password => async dispatch => {\n  dispatch({\n    type: \"SET_ADMIN_PASSWORD\",\n    payload: {\n      adminPassword: password\n    }\n  });\n}; // export const error = () => async dispatch => {\n//   const response = await events.get('/events');\n//   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\n// };\n// export const submitting = () => async dispatch => {\n//   const response = await events.get('/events');\n//   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\n// };\n// export const setSubmitting = () => async dispatch => {\n//   const response = await events.get('/events');\n//   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\n// };\n// FETCH EVENT ACTIONS\n\nexport const fetchCurrEvents = () => async (dispatch, getState) => {\n  const response = await events.get('/events');\n  dispatch({\n    type: FETCH_CURREVENTS,\n    payload: response.data\n  });\n};\nexport const fetchPastEvents = () => async dispatch => {\n  const response = await events.get('/pastevents');\n  dispatch({\n    type: FETCH_PASTEVENTS,\n    payload: response.data\n  });\n};\nexport const fetchEvent = id => async dispatch => {\n  const response = await events.get(`/events/${id}`);\n  response.data.longDateAsString = new Date(response.data.longDate).toLocaleString('en-GB', {\n    weekday: \"long\",\n    day: '2-digit',\n    month: 'long',\n    year: \"numeric\"\n  });\n  dispatch({\n    type: FETCH_EVENT,\n    payload: response.data\n  });\n}; // EVENT CRUD ACTIONS\n\nexport const deleteEvent = id => async dispatch => {\n  const response = await events.delete(`/events/${id}`);\n  dispatch({\n    type: DELETE_EVENT,\n    payload: response.data\n  });\n};\nexport const editEvent = (id, formValues) => async dispatch => {\n  const response = await events.put(`/admin/${id}`, { ...formValues\n  });\n  dispatch({\n    type: EDIT_EVENT,\n    payload: response.data\n  });\n};\nexport const createEvent = formValues => async dispatch => {\n  console.log(formValues);\n  const response = await events.post('/admin/createEvent', { ...formValues\n  });\n  dispatch({\n    type: CREATE_EVENT,\n    payload: response.data\n  });\n}; // SET STATE FOR EVENT EDIT AND CREATE ACTIONS\n\nexport const setDescription = description => async dispatch => {\n  dispatch({\n    type: \"SET_DESCRIPTION\",\n    payload: {\n      description\n    }\n  });\n};\nexport const setExcerpt = excerpt => async dispatch => {\n  dispatch({\n    type: \"SET_EXCERPT\",\n    payload: {\n      excerpt\n    }\n  });\n};\nexport const setPostcode = postcode => async dispatch => {\n  dispatch({\n    type: \"SET_POSTCODE\",\n    payload: {\n      postcode\n    }\n  });\n};\nexport const setCity = city => async dispatch => {\n  dispatch({\n    type: \"SET_CITY\",\n    payload: {\n      city\n    }\n  });\n};\nexport const setStreetNumber = streetNumber => async dispatch => {\n  dispatch({\n    type: \"SET_STREET_NUMBER\",\n    payload: {\n      streetNumber\n    }\n  });\n};\nexport const setStreetName = streetName => async dispatch => {\n  dispatch({\n    type: \"SET_STREET_NAME\",\n    payload: {\n      streetName\n    }\n  });\n};\nexport const setBusinessName = businessName => async dispatch => {\n  dispatch({\n    type: \"SET_BUSINESS_NAME\",\n    payload: {\n      businessName\n    }\n  });\n};\nexport const setImage = image => async dispatch => {\n  dispatch({\n    type: \"SET_IMAGE\",\n    payload: {\n      image\n    }\n  });\n};\nexport const setEventURL = eventURL => async dispatch => {\n  dispatch({\n    type: \"SET_EVENT_URL\",\n    payload: {\n      eventURL\n    }\n  });\n};\nexport const setEndTime = endTime => async dispatch => {\n  dispatch({\n    type: \"SET_END_TIME\",\n    payload: {\n      endTime\n    }\n  });\n};\nexport const setStartTime = startTime => async dispatch => {\n  dispatch({\n    type: \"SET_START_TIME\",\n    payload: {\n      startTime\n    }\n  });\n};\nexport const setDate = rawDate => async dispatch => {\n  const date = rawDate.slice(0, 10);\n  dispatch({\n    type: \"SET_DATE\",\n    payload: {\n      date\n    }\n  });\n};\nexport const setName = name => async dispatch => {\n  dispatch({\n    type: \"SET_NAME\",\n    payload: {\n      name\n    }\n  });\n}; // EMAIL SUBSCRIBE ACTIONS\n\nexport const setMailChimpfirstName = firstName => async dispatch => {\n  console.log(firstName);\n  dispatch({\n    type: MAILCHIMP_FIRST_NAME,\n    payload: firstName\n  });\n};\nexport const setMailChimpSecondName = secondName => async dispatch => {\n  console.log(secondName);\n  dispatch({\n    type: MAILCHIMP_SECOND_NAME,\n    payload: secondName\n  });\n};\nexport const setMailChimpEmail = email => async dispatch => {\n  dispatch({\n    type: MAILCHIMP_EMAIL,\n    payload: email\n  });\n};\nexport const sendDetailsToMailChimpAPI = formValues => async dispatch => {\n  console.log(formValues);\n  const response = await events.post('/subscribe', { ...formValues\n  });\n  dispatch({\n    type: SEND_DETAILS_TO_MAILCHIMP_API,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/actions/index.js"],"names":["events","CREATE_EVENT","FETCH_EVENT","FETCH_CURREVENTS","FETCH_PASTEVENTS","EDIT_EVENT","DELETE_EVENT","ADMIN_LOGOUT","ADMIN_LOGIN","MAILCHIMP_EMAIL","MAILCHIMP_FIRST_NAME","MAILCHIMP_SECOND_NAME","SEND_DETAILS_TO_MAILCHIMP_API","adminLogin","username","password","dispatch","response","post","withCredentials","type","payload","data","adminLogout","token","console","log","get","headers","Authorization","adminName","passowrd","verifyUser","statusText","setTimeout","setAdminName","admin","setPassword","adminPassword","fetchCurrEvents","getState","fetchPastEvents","fetchEvent","id","longDateAsString","Date","longDate","toLocaleString","weekday","day","month","year","deleteEvent","delete","editEvent","formValues","put","createEvent","setDescription","description","setExcerpt","excerpt","setPostcode","postcode","setCity","city","setStreetNumber","streetNumber","setStreetName","streetName","setBusinessName","businessName","setImage","image","setEventURL","eventURL","setEndTime","endTime","setStartTime","startTime","setDate","rawDate","date","slice","setName","name","setMailChimpfirstName","firstName","setMailChimpSecondName","secondName","setMailChimpEmail","email","sendDetailsToMailChimpAPI"],"mappings":"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","sourcesContent":["import events from '../APIS/events';\r\nimport { \r\n    CREATE_EVENT,\r\n    FETCH_EVENT,\r\n    FETCH_CURREVENTS,\r\n    FETCH_PASTEVENTS,\r\n    EDIT_EVENT,\r\n    DELETE_EVENT,\r\n    ADMIN_LOGOUT,\r\n    ADMIN_LOGIN,\r\n    MAILCHIMP_EMAIL,\r\n    MAILCHIMP_FIRST_NAME,\r\n    MAILCHIMP_SECOND_NAME,\r\n    SEND_DETAILS_TO_MAILCHIMP_API\r\n  } from './types';\r\n\r\n  // ADMIN AUTH ACTIONS\r\n\r\n  export const adminLogin = (username, password) => async dispatch => {\r\n    const response = await events.post('/login', { username, password }, { withCredentials: true })\r\n    dispatch ({ type: ADMIN_LOGIN, payload: response.data })\r\n  };\r\n\r\n  export const adminLogout = (token) => async dispatch => {\r\n    console.log(\"hit logout\")\r\n    await events.get('/logout', { withCredentials: true, headers: {Authorization: `Bearer ${token}`} })\r\n\r\n    dispatch ({ type: ADMIN_LOGOUT, payload: {\r\n      token: null,\r\n      adminName: null,\r\n      passowrd: null\r\n    } })\r\n    \r\n  };\r\n\r\n  export const verifyUser = () => async dispatch => {\r\n    const response = await events.post(\"/refreshToken\", {}, { withCredentials: true })\r\n    if (response.statusText === \"OK\") {\r\n      const data =  response.data\r\n      dispatch ({ type: \"VERIFY_USER\", payload: data })\r\n    } else {\r\n        console.log(\"something went wrong!\")\r\n        dispatch ({ type: \"VERIFY_USER\", payload: { token: null } })\r\n      }\r\n      // call refreshToken every 5 minutes to renew the authentication token.\r\n      setTimeout(verifyUser, 5 * 60 * 1000)\r\n    };\r\n\r\n  // ADMIN LOGIN SET STATE ACTIONS\r\n\r\n\r\n  export const setAdminName = (admin) => async dispatch => {\r\n    dispatch({ type: \"SET_ADMIN_NAME\", payload: {adminName: admin}   });\r\n  };\r\n\r\n  export const setPassword = (password) => async dispatch => {\r\n    dispatch({ type: \"SET_ADMIN_PASSWORD\", payload: {adminPassword: password} });\r\n  };\r\n\r\n  // export const error = () => async dispatch => {\r\n  //   const response = await events.get('/events');\r\n  //   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  // };\r\n\r\n  // export const submitting = () => async dispatch => {\r\n  //   const response = await events.get('/events');\r\n  //   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  // };\r\n\r\n  // export const setSubmitting = () => async dispatch => {\r\n  //   const response = await events.get('/events');\r\n  //   dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  // };\r\n\r\n  // FETCH EVENT ACTIONS\r\n\r\n  export const fetchCurrEvents = () => async (dispatch, getState) => {\r\n    const response = await events.get('/events');\r\n    dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  };\r\n\r\n  export const fetchPastEvents = () => async dispatch => {\r\n    const response = await events.get('/pastevents');\r\n    dispatch({ type: FETCH_PASTEVENTS, payload: response.data });\r\n  };\r\n\r\n  export const fetchEvent = (id) => async dispatch => {\r\n    const response = await events.get(`/events/${id}`);\r\n    response.data.longDateAsString = new Date(response.data.longDate).toLocaleString('en-GB', {weekday: \"long\", day: '2-digit', month: 'long', year: \"numeric\"});\r\n    dispatch({ type: FETCH_EVENT, payload: response.data });\r\n  };\r\n\r\n// EVENT CRUD ACTIONS\r\nexport const deleteEvent = (id) => async dispatch => {\r\n  const response = await events.delete(`/events/${id}`);\r\n  dispatch({ type: DELETE_EVENT, payload: response.data })\r\n}\r\n\r\nexport const editEvent = (id, formValues) => async dispatch => {\r\n  const response = await events.put(`/admin/${id}`, {...formValues});\r\n  dispatch({ type: EDIT_EVENT, payload: response.data })\r\n}\r\n\r\nexport const createEvent = (formValues) => async dispatch => {\r\n  console.log(formValues)\r\n  const response = await events.post('/admin/createEvent', {...formValues});\r\n  dispatch({ type: CREATE_EVENT, payload: response.data })\r\n}\r\n\r\n// SET STATE FOR EVENT EDIT AND CREATE ACTIONS\r\n\r\n  export const setDescription = (description) => async dispatch => {\r\n    dispatch({ type: \"SET_DESCRIPTION\",  payload: {description} } )\r\n  }\r\n\r\n  export const setExcerpt = (excerpt) => async dispatch => {\r\n    dispatch({ type: \"SET_EXCERPT\" ,  payload: {excerpt} } )\r\n  }\r\n\r\n  export const setPostcode = (postcode) => async dispatch => {\r\n    dispatch({ type: \"SET_POSTCODE\" ,  payload: {postcode} } )\r\n  }\r\n\r\n  export const setCity = (city) => async dispatch => {\r\n    dispatch({ type: \"SET_CITY\",  payload: {city} } )\r\n  }\r\n\r\n  export const setStreetNumber = (streetNumber) => async dispatch => {\r\n    dispatch({ type: \"SET_STREET_NUMBER\",  payload: {streetNumber} } )\r\n  }\r\n\r\n\r\n  export const setStreetName = (streetName) => async dispatch => {\r\n    dispatch({ type: \"SET_STREET_NAME\",  payload: {streetName}} )\r\n  }\r\n\r\n  export const setBusinessName = (businessName) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_BUSINESS_NAME\" ,  payload: {businessName} } )\r\n  }\r\n\r\n  export const setImage = (image) => async dispatch => {\r\n    dispatch({ type: \"SET_IMAGE\" ,  payload: {image} } )\r\n  }\r\n\r\n\r\n  export const setEventURL = (eventURL) => async dispatch => {\r\n    dispatch({ type: \"SET_EVENT_URL\",  payload: {eventURL} } )\r\n  }\r\n\r\n\r\n  export const setEndTime = (endTime) => async dispatch => {\r\n    dispatch({ type: \"SET_END_TIME\",  payload: {endTime} } )\r\n  }\r\n\r\n\r\n  export const setStartTime = (startTime) => async dispatch => {\r\n    dispatch({ type: \"SET_START_TIME\" ,  payload: {startTime} } )\r\n  }\r\n\r\n\r\n  export const setDate = (rawDate) => async dispatch => {\r\n    const date = rawDate.slice(0, 10)\r\n    dispatch({ type: \"SET_DATE\" ,  payload: {date} } )\r\n  }\r\n\r\n  export const setName = (name) => async dispatch => {\r\n    dispatch({ type: \"SET_NAME\",  payload: {name} } )\r\n  }\r\n\r\n\r\n  // EMAIL SUBSCRIBE ACTIONS\r\n\r\n  export const setMailChimpfirstName = (firstName) => async dispatch => {\r\n    console.log(firstName)\r\n    dispatch({ type: MAILCHIMP_FIRST_NAME,  payload: firstName } )\r\n  }\r\n\r\n  export const setMailChimpSecondName = (secondName) => async dispatch => {\r\n    console.log(secondName)\r\n\r\n    dispatch({ type: MAILCHIMP_SECOND_NAME,  payload: secondName } )\r\n  }\r\n\r\n  export const setMailChimpEmail = (email) => async dispatch => {\r\n\r\n    dispatch({ type: MAILCHIMP_EMAIL,  payload: email } )\r\n  }\r\n\r\n  export const sendDetailsToMailChimpAPI = (formValues) => async dispatch => {\r\n    console.log(formValues)\r\n    const response = await events.post('/subscribe', {...formValues});\r\n\r\n    dispatch({ type: SEND_DETAILS_TO_MAILCHIMP_API, payload: response.data })\r\n  }"]},"metadata":{},"sourceType":"module"}