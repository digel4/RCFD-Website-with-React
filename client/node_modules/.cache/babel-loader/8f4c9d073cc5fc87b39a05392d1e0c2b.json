{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\admin\\\\Login.js\";\nimport React, { useReducer } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  const initialState = {\n    userName: {\n      value: \"\",\n      touched: false,\n      hasError: true,\n      error: \"\"\n    },\n    password: {\n      value: \"\",\n      touched: false,\n      hasError: true,\n      error: \"\"\n    }\n  };\n\n  const renderError = _ref => {\n    let {\n      error,\n      touched\n    } = _ref;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderInput = _ref2 => {\n    let {\n      input,\n      label,\n      meta\n    } = _ref2;\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), renderError(meta)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onSubmit = formValues => {\n    props.onSubmit(formValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    initialValues: props.initialValues,\n    onSubmit: onSubmit,\n    validate: formValues => {\n      const errors = {};\n\n      if (!formValues.userName) {\n        errors.userName = \"You must enter a userName\";\n      }\n\n      if (!formValues.password) {\n        errors.password = \"You must enter a valid password\";\n      }\n\n      return errors;\n    },\n    render: _ref3 => {\n      let {\n        handleSubmit\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"userName\",\n          component: renderInput,\n          label: \"Enter User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"passwrod\",\n          component: renderInput,\n          label: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this); // return (\n  //   <div>\n  //     <p>hello from login</p>\n  //     <form className=\"auth-form\">\n  //       <div class=\"form-group\" FormGroup label=\"User\" labelFor=\"userName\">\n  //         <input class=\"form-control\"\n  //           id=\"userName\"\n  //           placeholder=\"User Name\"\n  //           type=\"text\"\n  //           // value={userName}\n  //           // onChange={e => setUserName(e.target.value)}\n  //         >\n  //         </input>\n  //       </div>\n  //       <div class=\"form-group\" label=\"Password\" labelFor=\"password\">\n  //         <input class=\"form-control\"\n  //           id=\"password\"\n  //           placeholder=\"Password\"\n  //           type=\"password\"\n  //           // value={password}\n  //           // onChange={e => setPassword(e.target.value)}\n  //         >\n  //         </input>\n  //       </div>\n  //       <button className=\"btn btn-primary btn-block\" type=\"submit\" >Sign In</button>\n  //     </form>\n  //   </div>\n  // )\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/admin/Login.js"],"names":["React","useReducer","Form","Field","Login","props","initialState","userName","value","touched","hasError","error","password","renderError","renderInput","input","label","meta","className","onSubmit","formValues","initialValues","errors","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\n\r\nconst Login = (props) => {\r\n\r\n  const initialState = {\r\n    userName: { value: \"\", touched: false, hasError: true, error:\"\"},\r\n    password: { value: \"\", touched: false, hasError: true, error:\"\"}\r\n  }\r\n\r\n  const renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div>error</div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\" />\r\n        {renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (formValues) => {\r\n    props.onSubmit(formValues);\r\n  };\r\n\r\n  return (\r\n    <Form \r\n      initialValues={props.initialValues}\r\n      onSubmit={onSubmit}\r\n      validate={(formValues) => {\r\n        const errors = {};\r\n\r\n        if (!formValues.userName) {\r\n          errors.userName = \"You must enter a userName\";\r\n        }\r\n\r\n        if (!formValues.password) {\r\n          errors.password = \"You must enter a valid password\";\r\n        }\r\n\r\n        return errors;\r\n      }}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"ui form error\">\r\n          <Field name=\"userName\" component={renderInput} label=\"Enter User Name\" />\r\n          <Field\r\n            name=\"passwrod\"\r\n            component={renderInput}\r\n            label=\"Enter password\"\r\n          />\r\n          <button className=\"ui button primary\">Submit</button>\r\n        </form>\r\n      )}\r\n    \r\n    />\r\n  )\r\n  // return (\r\n  //   <div>\r\n  //     <p>hello from login</p>\r\n  //     <form className=\"auth-form\">\r\n  //       <div class=\"form-group\" FormGroup label=\"User\" labelFor=\"userName\">\r\n  //         <input class=\"form-control\"\r\n  //           id=\"userName\"\r\n  //           placeholder=\"User Name\"\r\n  //           type=\"text\"\r\n  //           // value={userName}\r\n  //           // onChange={e => setUserName(e.target.value)}\r\n  //         >\r\n  //         </input>\r\n  //       </div>\r\n  //       <div class=\"form-group\" label=\"Password\" labelFor=\"password\">\r\n  //         <input class=\"form-control\"\r\n  //           id=\"password\"\r\n  //           placeholder=\"Password\"\r\n  //           type=\"password\"\r\n  //           // value={password}\r\n  //           // onChange={e => setPassword(e.target.value)}\r\n  //         >\r\n  //         </input>\r\n  //       </div>\r\n  //       <button className=\"btn btn-primary btn-block\" type=\"submit\" >Sign In</button>\r\n  //     </form>\r\n  //   </div>\r\n  // )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}