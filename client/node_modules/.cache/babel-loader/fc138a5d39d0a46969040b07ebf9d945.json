{"ast":null,"code":"import _ from 'lodash';\nimport { FETCH_EVENT, FETCH_CURREVENTS, FETCH_PASTEVENTS, CREATE_EVENT, EDIT_EVENT, DELETE_EVENT } from '../actions/types';\n\nconst eventReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_CURREVENTS:\n      // mpayKeys creates a new object from an array of object using the second param as the new key\n      return { ...state,\n        currEvents: action.payload\n      };\n    // case FETCH_PASTEVENTS:\n    // // mpayKeys creates a new object from an array of object using the second param as the new key\n    //   return { ...state, ..._.mapKeys(action.payload, '_id') };\n\n    case FETCH_PASTEVENTS:\n      // mpayKeys creates a new object from an array of object using the second param as the new key\n      return { ...state,\n        pastEvents: action.payload\n      };\n\n    case FETCH_EVENT:\n      console.log(\"payload for FETCH_EVENT is:\" + action.payload);\n      console.log(action.payload);\n      return { ...state,\n        selectedEvent: action.payload\n      };\n\n    case CREATE_EVENT:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_EVENT:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_EVENT:\n      // omit doesn't change original state object  so dont need to create new object through spread syntax\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/reducers/eventReducer.js"],"names":["_","FETCH_EVENT","FETCH_CURREVENTS","FETCH_PASTEVENTS","CREATE_EVENT","EDIT_EVENT","DELETE_EVENT","eventReducer","state","action","type","currEvents","payload","pastEvents","console","log","selectedEvent","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACIC,WADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,YANJ,QAOO,kBAPP;;AASA,MAAMC,YAAY,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,gBAAL;AACE;AACA,aAAO,EAAE,GAAGM,KAAL;AAAYG,QAAAA,UAAU,EAAEF,MAAM,CAACG;AAA/B,OAAP;AACF;AACA;AACA;;AACA,SAAKT,gBAAL;AACE;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYK,QAAAA,UAAU,EAAEJ,MAAM,CAACG;AAA/B,OAAP;;AACJ,SAAKX,WAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCN,MAAM,CAACG,OAAnD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,OAAnB;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYQ,QAAAA,aAAa,EAAEP,MAAM,CAACG;AAAlC,OAAP;;AACF,SAAKR,YAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeK,EAAhB,GAAqBR,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKP,UAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeK,EAAhB,GAAqBR,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKN,YAAL;AACE;AACA,aAAON,CAAC,CAACkB,IAAF,CAAOV,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACF;AACI,aAAOJ,KAAP;AAtBJ;AAwBD,CAzBH;;AA2BA,eAAeD,YAAf","sourcesContent":["import _ from 'lodash';\r\nimport {\r\n    FETCH_EVENT,\r\n    FETCH_CURREVENTS,\r\n    FETCH_PASTEVENTS,\r\n    CREATE_EVENT,\r\n    EDIT_EVENT,\r\n    DELETE_EVENT\r\n} from '../actions/types';\r\n\r\nconst eventReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n    case FETCH_CURREVENTS:\r\n      // mpayKeys creates a new object from an array of object using the second param as the new key\r\n      return { ...state, currEvents: action.payload };\r\n    // case FETCH_PASTEVENTS:\r\n    // // mpayKeys creates a new object from an array of object using the second param as the new key\r\n    //   return { ...state, ..._.mapKeys(action.payload, '_id') };\r\n    case FETCH_PASTEVENTS:\r\n      // mpayKeys creates a new object from an array of object using the second param as the new key\r\n        return { ...state, pastEvents: action.payload };\r\n    case FETCH_EVENT:\r\n      console.log(\"payload for FETCH_EVENT is:\" + action.payload)\r\n      console.log(action.payload)\r\n      return { ...state, selectedEvent: action.payload  };\r\n    case CREATE_EVENT:\r\n      return { ...state, [action.payload.id]: action.payload  };\r\n    case EDIT_EVENT:\r\n      return { ...state, [action.payload.id]: action.payload  };\r\n    case DELETE_EVENT:\r\n      // omit doesn't change original state object  so dont need to create new object through spread syntax\r\n      return _.omit(state, action.payload)\r\n    default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default eventReducer;"]},"metadata":{},"sourceType":"module"}