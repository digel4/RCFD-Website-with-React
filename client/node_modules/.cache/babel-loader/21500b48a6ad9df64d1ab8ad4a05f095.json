{"ast":null,"code":"import events from '../APIS/events';\nimport axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, CREATE_EVENT, FETCH_EVENT, FETCH_CURREVENTS, FETCH_PASTEVENTS, EDIT_EVENT, DELETE_EVENT, ADMIN_LOGOUT, ADMIN_LOGIN } from './types'; // export const signIn = (userId) => {\n//   return {\n//     type: SIGN_IN,\n//     payload: userId\n//   };\n// };\n\nexport const signIn = (username, password) => async dispatch => {\n  console.log(\"signIn triggered\");\n  console.log(password);\n  console.log(username); // events.post('/login', { userName: \"userName\", password: \"password\" })\n  // axios.post('http://localhost:3001/login', { userName: \"hello\"})\n  // axios.post('/http://localhost:3001/login', {\n  //   firstName: 'Fred',\n  //   lastName: 'Flintstone'\n  // })\n  // .then(function (response) {\n  //   console.log(response);\n  // })\n  // .catch(function (error) {\n  //   console.log(error);\n  // });\n\n  const response = await events.post('/login', {\n    username,\n    password\n  }, {\n    withCredentials: true\n  });\n  dispatch({\n    type: ADMIN_LOGIN,\n    payload: response.data\n  });\n};\nexport const verifyUser = () => async dispatch => {\n  console.log(\"verifyUser triggered\");\n  const response = await events.post(\"/refreshToken\", {}, {\n    withCredentials: true\n  });\n  console.log(response.data);\n\n  if (response.statusText === \"OK\") {\n    const data = response.data;\n    console.log(\"data is:\");\n    console.log(response.data);\n    dispatch({\n      type: \"VERIFY_USER\",\n      payload: data\n    });\n  } else {\n    console.log(\"something went wrong!\");\n    dispatch({\n      type: \"VERIFY_USER\",\n      payload: {\n        token: null\n      }\n    });\n  } // call refreshToken every 5 minutes to renew the authentication token.\n\n\n  setTimeout(verifyUser, 5 * 60 * 1000);\n}; // const logoutHandler = () => {\n//   fetch(process.env.REACT_APP_API_ENDPOINT + \"users/logout\", {\n//     credentials: \"include\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${userContext.token}`,\n//     },\n//   }).then(async response => {\n//     setUserContext(oldValues => {\n//       return { ...oldValues, details: undefined, token: null }\n//     })\n//     window.localStorage.setItem(\"logout\", Date.now())\n//   })\n// }\n\nexport const signOut = token => async dispatch => {\n  console.log(\"hit Logout\");\n  console.log(\"token is:\");\n  console.log(token);\n  await events.get('/logout', {\n    withCredentials: true,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  dispatch({\n    type: ADMIN_LOGOUT,\n    payload: {\n      token: null,\n      adminName: null,\n      passowrd: null\n    }\n  });\n}; // export const adminName = () => async dispatch => {\n//   const response = await events.get('/events');\n//   dispatch({ type: ADMIN_NAME, payload: response.data });\n// };\n\nexport const setAdminName = admin => async dispatch => {\n  dispatch({\n    type: \"SET_ADMIN_NAME\",\n    payload: {\n      adminName: admin\n    }\n  });\n};\nexport const setPassword = password => async dispatch => {\n  dispatch({\n    type: \"SET_ADMIN_PASSWORD\",\n    payload: {\n      adminPassword: password\n    }\n  });\n};\nexport const error = () => async dispatch => {\n  const response = await events.get('/events');\n  dispatch({\n    type: FETCH_CURREVENTS,\n    payload: response.data\n  });\n};\nexport const submitting = () => async dispatch => {\n  const response = await events.get('/events');\n  dispatch({\n    type: FETCH_CURREVENTS,\n    payload: response.data\n  });\n};\nexport const setSubmitting = () => async dispatch => {\n  const response = await events.get('/events');\n  dispatch({\n    type: FETCH_CURREVENTS,\n    payload: response.data\n  });\n};\nexport const fetchCurrEvents = () => async (dispatch, getState) => {\n  const response = await events.get('/events');\n  dispatch({\n    type: FETCH_CURREVENTS,\n    payload: response.data\n  });\n};\nexport const fetchPastEvents = () => async dispatch => {\n  const response = await events.get('/pastevents');\n  dispatch({\n    type: FETCH_PASTEVENTS,\n    payload: response.data\n  });\n};\nexport const fetchEvent = id => async dispatch => {\n  const response = await events.get(`/events/${id}`);\n  dispatch({\n    type: FETCH_EVENT,\n    payload: response.data\n  });\n};\nexport const deleteEvent = id => async dispatch => {\n  const response = await events.delete(`/events/${id}`);\n  dispatch({\n    type: DELETE_EVENT,\n    payload: response.data\n  });\n};\nexport const editEvent = (id, formValues) => async dispatch => {\n  const response = await events.patch(`/events/${id}`, { ...formValues\n  });\n  dispatch({\n    type: EDIT_EVENT,\n    payload: response.data\n  });\n};\nexport const createEvent = formValues => async dispatch => {\n  console.log(\"triggered createEvent\");\n  console.log(formValues);\n  const response = await events.post('/admin/createEvent', { ...formValues\n  });\n  dispatch({\n    type: CREATE_EVENT,\n    payload: response.data\n  });\n};\nexport const setDescription = desc => async dispatch => {\n  dispatch({\n    type: \"SET_DESCRIPTION\",\n    payload: {\n      desc\n    }\n  });\n};\nexport const setExcerpt = excerpt => async dispatch => {\n  dispatch({\n    type: \"SET_EXCERPT\",\n    payload: {\n      excerpt\n    }\n  });\n};\nexport const setPostcode = postcode => async dispatch => {\n  dispatch({\n    type: \"SET_POSTCODE\",\n    payload: {\n      postcode\n    }\n  });\n};\nexport const setCity = city => async dispatch => {\n  dispatch({\n    type: \"SET_CITY\",\n    payload: {\n      city\n    }\n  });\n};\nexport const setStreetNumber = streetNumber => async dispatch => {\n  dispatch({\n    type: \"SET_STREET_NUMBER\",\n    payload: {\n      streetNumber\n    }\n  });\n};\nexport const setStreetName = streetName => async dispatch => {\n  dispatch({\n    type: \"SET_STREET_NAME\",\n    payload: {\n      streetName\n    }\n  });\n};\nexport const setBusinessName = businessName => async dispatch => {\n  dispatch({\n    type: \"SET_BUSINESS_NAME\",\n    payload: {\n      businessName\n    }\n  });\n};\nexport const setImage = image => async dispatch => {\n  dispatch({\n    type: \"SET_IMAGE\",\n    payload: {\n      image\n    }\n  });\n};\nexport const setEventURL = eventURL => async dispatch => {\n  dispatch({\n    type: \"SET_EVENT_URL\",\n    payload: {\n      eventURL\n    }\n  });\n};\nexport const setEndTime = endTime => async dispatch => {\n  dispatch({\n    type: \"SET_END_TIME\",\n    payload: {\n      endTime\n    }\n  });\n};\nexport const setStartTime = startTime => async dispatch => {\n  dispatch({\n    type: \"SET_START_TIME\",\n    payload: {\n      startTime\n    }\n  });\n};\nexport const setDate = date => async dispatch => {\n  dispatch({\n    type: \"SET_DATE\",\n    payload: {\n      date\n    }\n  });\n};\nexport const setName = name => async dispatch => {\n  dispatch({\n    type: \"SET_NAME\",\n    payload: {\n      name\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/actions/index.js"],"names":["events","axios","SIGN_IN","SIGN_OUT","CREATE_EVENT","FETCH_EVENT","FETCH_CURREVENTS","FETCH_PASTEVENTS","EDIT_EVENT","DELETE_EVENT","ADMIN_LOGOUT","ADMIN_LOGIN","signIn","username","password","dispatch","console","log","response","post","withCredentials","type","payload","data","verifyUser","statusText","token","setTimeout","signOut","get","headers","Authorization","adminName","passowrd","setAdminName","admin","setPassword","adminPassword","error","submitting","setSubmitting","fetchCurrEvents","getState","fetchPastEvents","fetchEvent","id","deleteEvent","delete","editEvent","formValues","patch","createEvent","setDescription","desc","setExcerpt","excerpt","setPostcode","postcode","setCity","city","setStreetNumber","streetNumber","setStreetName","streetName","setBusinessName","businessName","setImage","image","setEventURL","eventURL","setEndTime","endTime","setStartTime","startTime","setDate","date","setName","name"],"mappings":"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","sourcesContent":["import events from '../APIS/events';\r\nimport axios from 'axios';\r\nimport { \r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_EVENT,\r\n    FETCH_EVENT,\r\n    FETCH_CURREVENTS,\r\n    FETCH_PASTEVENTS,\r\n    EDIT_EVENT,\r\n    DELETE_EVENT,\r\n    ADMIN_LOGOUT,\r\n    ADMIN_LOGIN\r\n  } from './types';\r\n\r\n  // export const signIn = (userId) => {\r\n  //   return {\r\n  //     type: SIGN_IN,\r\n  //     payload: userId\r\n  //   };\r\n  // };\r\n\r\n  export const signIn = (username, password) => async dispatch => {\r\n    console.log(\"signIn triggered\")\r\n    console.log(password)\r\n    console.log(username)\r\n    // events.post('/login', { userName: \"userName\", password: \"password\" })\r\n    // axios.post('http://localhost:3001/login', { userName: \"hello\"})\r\n    // axios.post('/http://localhost:3001/login', {\r\n    //   firstName: 'Fred',\r\n    //   lastName: 'Flintstone'\r\n    // })\r\n    // .then(function (response) {\r\n    //   console.log(response);\r\n    // })\r\n    // .catch(function (error) {\r\n    //   console.log(error);\r\n    // });\r\n    const response = await events.post('/login', { username, password }, { withCredentials: true })\r\n\r\n    dispatch ({ type: ADMIN_LOGIN, payload: response.data })\r\n    \r\n  };\r\n\r\n  export const verifyUser = () => async dispatch => {\r\n    console.log(\"verifyUser triggered\")\r\n      const response = await events.post(\"/refreshToken\", {}, { withCredentials: true })\r\n      console.log(response.data)\r\n      if (response.statusText === \"OK\") {\r\n        const data =  response.data\r\n        console.log(\"data is:\")\r\n        console.log(response.data)\r\n        dispatch ({ type: \"VERIFY_USER\", payload: data })\r\n      } else {\r\n          console.log(\"something went wrong!\")\r\n          dispatch ({ type: \"VERIFY_USER\", payload: { token: null } })\r\n        }\r\n        // call refreshToken every 5 minutes to renew the authentication token.\r\n        setTimeout(verifyUser, 5 * 60 * 1000)\r\n      };\r\n\r\n  // const logoutHandler = () => {\r\n  //   fetch(process.env.REACT_APP_API_ENDPOINT + \"users/logout\", {\r\n  //     credentials: \"include\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Authorization: `Bearer ${userContext.token}`,\r\n  //     },\r\n  //   }).then(async response => {\r\n  //     setUserContext(oldValues => {\r\n  //       return { ...oldValues, details: undefined, token: null }\r\n  //     })\r\n  //     window.localStorage.setItem(\"logout\", Date.now())\r\n  //   })\r\n  // }\r\n\r\n  \r\n  export const signOut = (token) => async dispatch => {\r\n    console.log(\"hit Logout\")\r\n    console.log(\"token is:\")\r\n    console.log(token)\r\n    await events.get('/logout', { withCredentials: true, headers: {Authorization: `Bearer ${token}`} })\r\n\r\n    dispatch ({ type: ADMIN_LOGOUT, payload: {\r\n      token: null,\r\n      adminName: null,\r\n      passowrd: null\r\n    } })\r\n    \r\n  };\r\n\r\n  // export const adminName = () => async dispatch => {\r\n  //   const response = await events.get('/events');\r\n    \r\n  //   dispatch({ type: ADMIN_NAME, payload: response.data });\r\n  // };\r\n\r\n  export const setAdminName = (admin) => async dispatch => {\r\n    \r\n    dispatch({ type: \"SET_ADMIN_NAME\", payload: {adminName: admin}   });\r\n  };\r\n\r\n  export const setPassword = (password) => async dispatch => {\r\n    \r\n    dispatch({ type: \"SET_ADMIN_PASSWORD\", payload: {adminPassword: password} });\r\n  };\r\n\r\n  export const error = () => async dispatch => {\r\n    const response = await events.get('/events');\r\n    \r\n    dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  };\r\n\r\n  export const submitting = () => async dispatch => {\r\n    const response = await events.get('/events');\r\n    \r\n    dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  };\r\n\r\n  export const setSubmitting = () => async dispatch => {\r\n    const response = await events.get('/events');\r\n    \r\n    dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  };\r\n\r\n  export const fetchCurrEvents = () => async (dispatch, getState) => {\r\n    const response = await events.get('/events');\r\n    \r\n    dispatch({ type: FETCH_CURREVENTS, payload: response.data });\r\n  };\r\n\r\n  export const fetchPastEvents = () => async dispatch => {\r\n    const response = await events.get('/pastevents');\r\n\r\n    dispatch({ type: FETCH_PASTEVENTS, payload: response.data });\r\n  };\r\n\r\n  export const fetchEvent = (id) => async dispatch => {\r\n    const response = await events.get(`/events/${id}`);\r\n\r\n    dispatch({ type: FETCH_EVENT, payload: response.data });\r\n  };\r\n\r\n  export const deleteEvent = (id) => async dispatch => {\r\n    const response = await events.delete(`/events/${id}`);\r\n\r\n    dispatch({ type: DELETE_EVENT, payload: response.data })\r\n  }\r\n\r\n  export const editEvent = (id, formValues) => async dispatch => {\r\n    const response = await events.patch(`/events/${id}`, {...formValues});\r\n\r\n    dispatch({ type: EDIT_EVENT, payload: response.data })\r\n  }\r\n\r\n  export const createEvent = (formValues) => async dispatch => {\r\n    console.log(\"triggered createEvent\")\r\n    console.log(formValues)\r\n\r\n    const response = await events.post('/admin/createEvent', {...formValues});\r\n\r\n    dispatch({ type: CREATE_EVENT, payload: response.data })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  export const setDescription = (desc) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_DESCRIPTION\",  payload: {desc} } )\r\n  }\r\n\r\n\r\n  export const setExcerpt = (excerpt) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_EXCERPT\" ,  payload: {excerpt} } )\r\n  }\r\n\r\n\r\n  export const setPostcode = (postcode) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_POSTCODE\" ,  payload: {postcode} } )\r\n  }\r\n\r\n\r\n  export const setCity = (city) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_CITY\",  payload: {city} } )\r\n  }\r\n\r\n\r\n  export const setStreetNumber = (streetNumber) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_STREET_NUMBER\",  payload: {streetNumber} } )\r\n  }\r\n\r\n\r\n  export const setStreetName = (streetName) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_STREET_NAME\",  payload: {streetName}} )\r\n\r\n\r\n  }\r\n\r\n\r\n  export const setBusinessName = (businessName) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_BUSINESS_NAME\" ,  payload: {businessName} } )\r\n  }\r\n\r\n\r\n\r\n\r\n  export const setImage = (image) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_IMAGE\" ,  payload: {image} } )\r\n  }\r\n\r\n\r\n  export const setEventURL = (eventURL) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_EVENT_URL\",  payload: {eventURL} } )\r\n  }\r\n\r\n\r\n  export const setEndTime = (endTime) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_END_TIME\",  payload: {endTime} } )\r\n  }\r\n\r\n\r\n  export const setStartTime = (startTime) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_START_TIME\" ,  payload: {startTime} } )\r\n  }\r\n\r\n\r\n  export const setDate = (date) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_DATE\" ,  payload: {date} } )\r\n  }\r\n\r\n\r\n  export const setName = (name) => async dispatch => {\r\n\r\n    dispatch({ type: \"SET_NAME\",  payload: {name} } )\r\n  }"]},"metadata":{},"sourceType":"module"}