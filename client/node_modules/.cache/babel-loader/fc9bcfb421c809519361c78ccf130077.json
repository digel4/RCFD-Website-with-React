{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\events\\\\eventCards\\\\ShowAllEventCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport AllEventCards from './AllEventCards';\nimport { fetchCurrEvents, fetchPastEvents, adminLogout } from '../../../actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowAllEventCards = props => {\n  _s();\n\n  const {\n    fetchCurrEvents,\n    fetchPastEvents,\n    token,\n    currEvents,\n    pastEvents,\n    adminLogout\n  } = props;\n  useEffect(() => {\n    fetchCurrEvents();\n    fetchPastEvents();\n  }, [fetchCurrEvents, fetchPastEvents]);\n  const {\n    pathname\n  } = useLocation();\n\n  const adminControlPanel = () => {\n    if (token) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"admin-control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Control Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin/createEvent\",\n          className: \"btn btn-primary\",\n          children: \"Create Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: () => adminLogout(token),\n          children: \"Sign-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"admin-control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Control Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const currEventsLoader = () => {\n    if (!currEvents) {\n      return 'loading';\n    } else {\n      return /*#__PURE__*/_jsxDEV(AllEventCards, {\n        token: token,\n        eventsList: currEvents,\n        previousEvents: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const pastEventsLoader = () => {\n    if (!pastEvents) {\n      return 'loading';\n    } else {\n      return /*#__PURE__*/_jsxDEV(AllEventCards, {\n        token: token,\n        eventsList: pastEvents,\n        previousEvents: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const eventsSelector = () => {\n    if (pathname === '/events') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currEventsLoader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    } else if (pathname === '/pastevents') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pastEventsLoader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"events-selector\",\n    children: [adminControlPanel(), eventsSelector()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowAllEventCards, \"phQmLxtOqIUVIYJLzR0dXkT9ZwI=\", false, function () {\n  return [useLocation];\n});\n\n_c = ShowAllEventCards;\n\nconst mapStateToProps = state => {\n  return {\n    currEvents: state.events.currEvents,\n    pastEvents: state.events.pastEvents,\n    token: state.admin.token //adminStatus: { ...state.admin }\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCurrEvents,\n  fetchPastEvents,\n  adminLogout\n})(ShowAllEventCards);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAllEventCards\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/events/eventCards/ShowAllEventCards.js"],"names":["React","useEffect","useLocation","Link","AllEventCards","fetchCurrEvents","fetchPastEvents","adminLogout","connect","ShowAllEventCards","props","token","currEvents","pastEvents","pathname","adminControlPanel","currEventsLoader","pastEventsLoader","eventsSelector","mapStateToProps","state","events","admin"],"mappings":"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","sourcesContent":["import React,  { useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport AllEventCards from './AllEventCards';\r\nimport { fetchCurrEvents, fetchPastEvents, adminLogout } from '../../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShowAllEventCards = (props) => {\r\n    const { fetchCurrEvents, fetchPastEvents, token, currEvents, pastEvents, adminLogout } = props\r\n    useEffect( () => {\r\n        fetchCurrEvents();\r\n        fetchPastEvents();\r\n     }, [fetchCurrEvents, fetchPastEvents]);\r\n     \r\n\r\n    const { pathname } = useLocation();\r\n\r\n    const adminControlPanel = () => {\r\n        if(token) {\r\n            return (\r\n                <div id=\"admin-control-panel\">\r\n                    <h3>Admin Control Panel</h3>\r\n                    <Link to=\"/admin/createEvent\" className=\"btn btn-primary\">Create Event</Link>\r\n                    <button className=\"btn btn-primary btn-block\" onClick={() => adminLogout(token)}>Sign-out</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div id=\"admin-control-panel\">\r\n                    <h3>Admin Control Panel</h3>\r\n                    <Link to=\"/login\" className=\"btn btn-primary\">Login</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    const currEventsLoader = () => {\r\n        if (!currEvents) {\r\n            return 'loading'\r\n        } else {\r\n            return <AllEventCards token={token} eventsList={currEvents} previousEvents={false}/>\r\n        }\r\n    }\r\n\r\n    const pastEventsLoader = () => {\r\n        if (!pastEvents) {\r\n            return 'loading'\r\n        } else {\r\n            return <AllEventCards token={token} eventsList={pastEvents} previousEvents={true} />\r\n        }\r\n    }\r\n\r\n    const eventsSelector = () => {\r\n        if(pathname === '/events') {\r\n            return (\r\n                <div>\r\n                    {currEventsLoader()}\r\n                </div>\r\n            )\r\n        } else if(pathname === '/pastevents') {\r\n            return (\r\n                <div>\r\n                    {pastEventsLoader()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"events-selector\">\r\n            {adminControlPanel()}\r\n            {eventsSelector()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currEvents: state.events.currEvents,\r\n        pastEvents: state.events.pastEvents,\r\n        token: state.admin.token,\r\n        //adminStatus: { ...state.admin }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { \r\n        fetchCurrEvents, \r\n        fetchPastEvents,\r\n        adminLogout\r\n    }\r\n)(ShowAllEventCards);\r\n"]},"metadata":{},"sourceType":"module"}