{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nimport _Constructor from './constructor';\nimport _Context from './context';\nimport _history from './history';\nimport _util from './util';\nimport _notice from '../plugins/modules/_notice';\n/**\r\n * @description SunEditor constuctor function.\r\n * create core object and event registration.\r\n * core, event, functions\r\n * @param {Object} context\r\n * @param {Object} pluginCallButtons\r\n * @param {Object} plugins \r\n * @param {Object} lang\r\n * @param {Object} options\r\n * @param {Object} _responsiveButtons\r\n * @returns {Object} functions Object\r\n */\n\nexport default function (context, pluginCallButtons, plugins, lang, options, _responsiveButtons) {\n  const _d = context.element.originElement.ownerDocument || document;\n\n  const _w = _d.defaultView || window;\n\n  const util = _util;\n  const icons = options.icons;\n  /**\r\n   * @description editor core object\r\n   * should always bind this object when registering an event in the plug-in.\r\n   */\n\n  const core = {\n    _d: _d,\n    _w: _w,\n    _parser: new _w.DOMParser(),\n    _prevRtl: options.rtl,\n\n    /**\r\n     * @description Document object of the iframe if created as an iframe || _d\r\n     * @private\r\n     */\n    _wd: null,\n\n    /**\r\n     * @description Window object of the iframe if created as an iframe || _w\r\n     * @private\r\n     */\n    _ww: null,\n\n    /**\r\n     * @description Closest ShadowRoot to editor if found\r\n     * @private\r\n     */\n    _shadowRoot: null,\n\n    /**\r\n     * @description Block controller mousedown events in \"shadowRoot\" environment\r\n     * @private\r\n     */\n    _shadowRootControllerEventTarget: null,\n\n    /**\r\n     * @description Util object\r\n     */\n    util: util,\n\n    /**\r\n     * @description Functions object\r\n     */\n    functions: null,\n\n    /**\r\n     * @description Editor options\r\n     */\n    options: null,\n\n    /**\r\n     * @description Computed style of the wysiwyg area (window.getComputedStyle(context.element.wysiwyg))\r\n     */\n    wwComputedStyle: null,\n\n    /**\r\n     * @description Notice object\r\n     */\n    notice: _notice,\n\n    /**\r\n     * @description Default icons object\r\n     */\n    icons: icons,\n\n    /**\r\n     * @description History object for undo, redo\r\n     */\n    history: null,\n\n    /**\r\n     * @description Elements and user options parameters of the suneditor\r\n     */\n    context: context,\n\n    /**\r\n     * @description Plugin buttons\r\n     */\n    pluginCallButtons: pluginCallButtons,\n\n    /**\r\n     * @description Loaded plugins\r\n     */\n    plugins: plugins || {},\n\n    /**\r\n     * @description Whether the plugin is initialized\r\n     */\n    initPlugins: {},\n\n    /**\r\n     * @description Object for managing submenu elements\r\n     * @private\r\n     */\n    _targetPlugins: {},\n\n    /**\r\n     * @description Save rendered submenus and containers\r\n     * @private\r\n     */\n    _menuTray: {},\n\n    /**\r\n     * @description loaded language\r\n     */\n    lang: lang,\n\n    /**\r\n     * @description The selection node (core.getSelectionNode()) to which the effect was last applied\r\n     */\n    effectNode: null,\n\n    /**\r\n     * @description submenu element\r\n     */\n    submenu: null,\n\n    /**\r\n     * @description container element\r\n     */\n    container: null,\n\n    /**\r\n     * @description current subment name\r\n     * @private\r\n     */\n    _submenuName: '',\n\n    /**\r\n     * @description binded submenuOff method\r\n     * @private\r\n     */\n    _bindedSubmenuOff: null,\n\n    /**\r\n     * @description binded containerOff method\r\n     * @private\r\n     */\n    _bindedContainerOff: null,\n\n    /**\r\n     * @description active button element in submenu\r\n     */\n    submenuActiveButton: null,\n\n    /**\r\n     * @description active button element in container\r\n     */\n    containerActiveButton: null,\n\n    /**\r\n     * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n     */\n    controllerArray: [],\n\n    /**\r\n     * @description The name of the plugin that called the currently active controller\r\n     */\n    currentControllerName: '',\n\n    /**\r\n     * @description The target element of current controller\r\n     */\n    currentControllerTarget: null,\n\n    /**\r\n     * @description The file component object of current selected file tag (getFileComponent)\r\n     */\n    currentFileComponentInfo: null,\n\n    /**\r\n     * @description An array of buttons whose class name is not \"se-code-view-enabled\"\r\n     */\n    codeViewDisabledButtons: [],\n\n    /**\r\n     * @description An array of buttons whose class name is not \"se-resizing-enabled\"\r\n     */\n    resizingDisabledButtons: [],\n\n    /**\r\n     * @description active more layer element in submenu\r\n     * @private\r\n     */\n    _moreLayerActiveButton: null,\n\n    /**\r\n     * @description Tag whitelist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n     * ^(options._editorTagsWhitelist)$\r\n     * @private\r\n     */\n    _htmlCheckWhitelistRegExp: null,\n\n    /**\r\n     * @description Tag blacklist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n     * @private\r\n     */\n    _htmlCheckBlacklistRegExp: null,\n\n    /**\r\n     * @description RegExp when using check disallowd tags. (b, i, ins, strike, s)\r\n     * @private\r\n     */\n    _disallowedTextTagsRegExp: null,\n\n    /**\r\n     * @description Editor tags whitelist (RegExp object)\r\n     * util.createTagsWhitelist(options._editorTagsWhitelist)\r\n     */\n    editorTagsWhitelistRegExp: null,\n\n    /**\r\n     * @description Editor tags blacklist (RegExp object)\r\n     * util.createTagsBlacklist(options.tagsBlacklist)\r\n     */\n    editorTagsBlacklistRegExp: null,\n\n    /**\r\n     * @description Tag whitelist when pasting (RegExp object)\r\n     * util.createTagsWhitelist(options.pasteTagsWhitelist)\r\n     */\n    pasteTagsWhitelistRegExp: null,\n\n    /**\r\n     * @description Tag blacklist when pasting (RegExp object)\r\n     * util.createTagsBlacklist(options.pasteTagsBlacklist)\r\n     */\n    pasteTagsBlacklistRegExp: null,\n\n    /**\r\n     * @description Boolean value of whether the editor has focus\r\n     */\n    hasFocus: false,\n\n    /**\r\n     * @description Boolean value of whether the editor is disabled\r\n     */\n    isDisabled: false,\n\n    /**\r\n     * @description Boolean value of whether the editor is readOnly\r\n     */\n    isReadOnly: false,\n\n    /**\r\n     * @description Attributes whitelist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesWhitelistRegExp: null,\n\n    /**\r\n     * @description Attributes blacklist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesBlacklistRegExp: null,\n\n    /**\r\n     * @description Attributes of tags whitelist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesTagsWhitelist: null,\n\n    /**\r\n     * @description Attributes of tags blacklist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesTagsBlacklist: null,\n\n    /**\r\n     * @description binded controllersOff method\r\n     * @private\r\n     */\n    _bindControllersOff: null,\n\n    /**\r\n     * @description Is inline mode?\r\n     * @private\r\n     */\n    _isInline: null,\n\n    /**\r\n     * @description Is balloon|balloon-always mode?\r\n     * @private\r\n     */\n    _isBalloon: null,\n\n    /**\r\n     * @description Is balloon-always mode?\r\n     * @private\r\n     */\n    _isBalloonAlways: null,\n\n    /**\r\n     * @description Required value when using inline mode to sticky toolbar\r\n     * @private\r\n     */\n    _inlineToolbarAttr: {\n      top: '',\n      width: '',\n      isShow: false\n    },\n\n    /**\r\n     * @description Variable that controls the \"blur\" event in the editor of inline or balloon mode when the focus is moved to submenu\r\n     * @private\r\n     */\n    _notHideToolbar: false,\n\n    /**\r\n     * @description Variable value that sticky toolbar mode\r\n     * @private\r\n     */\n    _sticky: false,\n\n    /**\r\n     * @description Variables for controlling focus and blur events\r\n     * @private\r\n     */\n    _antiBlur: false,\n\n    /**\r\n     * @description Component line breaker element\r\n     * @private\r\n     */\n    _lineBreaker: null,\n    _lineBreakerButton: null,\n\n    /**\r\n     * @description If true, (initialize, reset) all indexes of image, video information\r\n     * @private\r\n     */\n    _componentsInfoInit: true,\n    _componentsInfoReset: false,\n\n    /**\r\n     * @description Plugins array with \"active\" method.\r\n     * \"activePlugins\" runs the \"add\" method when creating the editor.\r\n     */\n    activePlugins: null,\n\n    /**\r\n     * @description Information of tags that should maintain HTML structure, style, class name, etc. (In use by \"math\" plugin)\r\n     * When inserting \"html\" such as paste, it is executed on the \"html\" to be inserted. (core.cleanHTML)\r\n     * Basic Editor Actions:\r\n     * 1. All classes not starting with \"__se__\" or \"se-\" in the editor are removed.\r\n     * 2. The style of all tags except the \"span\" tag is removed from the editor.\r\n     * \"managedTagsInfo\" structure ex:\r\n     * managedTagsInfo: {\r\n     *   query: '.__se__xxx, se-xxx'\r\n     *   map: {\r\n     *     '__se__xxx': method.bind(core),\r\n     *     'se-xxx': method.bind(core),\r\n     *   }\r\n     * }\r\n     * @example\r\n     * Define in the following return format in the \"managedTagInfo\" function of the plugin.\r\n     * managedTagInfo() => {\r\n     *  return {\r\n     *    className: 'string', // Class name to identify the tag. (\"__se__xxx\", \"se-xxx\")\r\n     *    // Change the html of the \"element\". (\"element\" is the element found with \"className\".)\r\n     *    // \"method\" is executed by binding \"core\".\r\n     *    method: function (element) {\r\n     *      // this === core\r\n     *      element.innerHTML = // (rendered html);\r\n     *    }\r\n     *  }\r\n     * }\r\n     */\n    managedTagsInfo: null,\n\n    /**\r\n     * @description cashing: options.charCounterType === 'byte-html'\r\n     * @private\r\n     */\n    _charTypeHTML: false,\n\n    /**\r\n     * @description Array of \"checkFileInfo\" functions with the core bound\r\n     * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n     * \"fileInfoPlugins\" runs the \"add\" method when creating the editor.\r\n     * \"checkFileInfo\" method is always call just before the \"change\" event.\r\n     * @private\r\n     */\n    _fileInfoPluginsCheck: null,\n\n    /**\r\n     * @description Array of \"resetFileInfo\" functions with the core bound\r\n     * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n     * \"checkFileInfo\" method is always call just before the \"functions.setOptions\" method.\r\n     * @private\r\n     */\n    _fileInfoPluginsReset: null,\n\n    /**\r\n     * @description Variables for file component management\r\n     * @private\r\n     */\n    _fileManager: {\n      tags: null,\n      regExp: null,\n      queryString: null,\n      pluginRegExp: null,\n      pluginMap: null\n    },\n\n    /**\r\n     * @description Elements that need to change text or className for each selection change\r\n     * After creating the editor, \"activePlugins\" are added.\r\n     * @property {Element} STRONG bold button\r\n     * @property {Element} U underline button\r\n     * @property {Element} EM italic button\r\n     * @property {Element} DEL strike button\r\n     * @property {Element} SUB subscript button\r\n     * @property {Element} SUP superscript button\r\n     * @property {Element} OUTDENT outdent button\r\n     * @property {Element} INDENT indent button\r\n     */\n    commandMap: null,\n\n    /**\r\n     * @description CSS properties related to style tags \r\n     * @private\r\n     */\n    _commandMapStyles: {\n      STRONG: ['font-weight'],\n      U: ['text-decoration'],\n      EM: ['font-style'],\n      DEL: ['text-decoration']\n    },\n\n    /**\r\n     * @description Contains pairs of all \"data-commands\" and \"elements\" setted in toolbar over time\r\n     * Used primarily to save and recover button states after the toolbar re-creation\r\n     * Updates each \"_cachingButtons()\" invocation  \r\n     */\n    allCommandButtons: null,\n\n    /**\r\n     * @description Style button related to edit area\r\n     * @property {Element} fullScreen fullScreen button element\r\n     * @property {Element} showBlocks showBlocks button element\r\n     * @property {Element} codeView codeView button element\r\n     * @private\r\n     */\n    _styleCommandMap: null,\n\n    /**\r\n     * @description Map of default command\r\n     * @private\r\n     */\n    _defaultCommand: {\n      bold: options.textTags.bold,\n      underline: options.textTags.underline,\n      italic: options.textTags.italic,\n      strike: options.textTags.strike,\n      subscript: options.textTags.sub,\n      superscript: options.textTags.sup\n    },\n\n    /**\r\n     * @description Variables used internally in editor operation\r\n     * @property {Boolean} isCodeView State of code view\r\n     * @property {Boolean} isFullScreen State of full screen\r\n     * @property {Number} innerHeight_fullScreen InnerHeight in editor when in full screen\r\n     * @property {Number} resizeClientY Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n     * @property {Number} tabSize Indent size of tab (4)\r\n     * @property {Number} codeIndent Indent size of Code view mode (2)\r\n     * @property {Number} minResizingSize Minimum size of editing area when resized {Number} (.se-wrapper-inner {min-height: 65px;} || 65)\r\n     * @property {Array} currentNodes  An array of the current cursor's node structure\r\n     * @private\r\n     */\n    _variable: {\n      isChanged: false,\n      isCodeView: false,\n      isFullScreen: false,\n      innerHeight_fullScreen: 0,\n      resizeClientY: 0,\n      tabSize: 4,\n      codeIndent: 2,\n      minResizingSize: util.getNumber(context.element.wysiwygFrame.style.minHeight || '65', 0),\n      currentNodes: [],\n      currentNodesMap: [],\n      _range: null,\n      _selectionNode: null,\n      _originCssText: context.element.topArea.style.cssText,\n      _bodyOverflow: '',\n      _editorAreaOriginCssText: '',\n      _wysiwygOriginCssText: '',\n      _codeOriginCssText: '',\n      _fullScreenAttrs: {\n        sticky: false,\n        balloon: false,\n        inline: false\n      },\n      _lineBreakComp: null,\n      _lineBreakDir: ''\n    },\n\n    /**\r\n     * @description Save the current buttons states to \"allCommandButtons\" object\r\n     */\n    saveButtonStates: function () {\n      if (!this.allCommandButtons) this.allCommandButtons = {};\n\n      const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\n\n      for (let i = 0, element, command; i < currentButtons.length; i++) {\n        element = currentButtons[i];\n        command = element.getAttribute('data-command');\n        this.allCommandButtons[command] = element;\n      }\n    },\n\n    /**\r\n     * @description Recover the current buttons states from \"allCommandButtons\" object\r\n     */\n    recoverButtonStates: function () {\n      if (this.allCommandButtons) {\n        const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\n\n        for (let i = 0, button, command, oldButton; i < currentButtons.length; i++) {\n          button = currentButtons[i];\n          command = button.getAttribute('data-command');\n          oldButton = this.allCommandButtons[command];\n\n          if (oldButton) {\n            button.parentElement.replaceChild(oldButton, button);\n            if (this.context.tool[command]) this.context.tool[command] = oldButton;\n          }\n        }\n      }\n    },\n\n    /**\r\n     * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n     * If the plugin is added call callBack function.\r\n     * @param {String} pluginName The name of the plugin to call\r\n     * @param {function} callBackFunction Function to be executed immediately after module call\r\n     * @param {Element|null} _target Plugin target button (This is not necessary if you have a button list when creating the editor)\r\n     */\n    callPlugin: function (pluginName, callBackFunction, _target) {\n      _target = _target || pluginCallButtons[pluginName];\n\n      if (!this.plugins[pluginName]) {\n        throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\n      } else if (!this.initPlugins[pluginName]) {\n        this.plugins[pluginName].add(this, _target);\n        this.initPlugins[pluginName] = true;\n      } else if (typeof this._targetPlugins[pluginName] === 'object' && !!_target) {\n        this.initMenuTarget(pluginName, _target, this._targetPlugins[pluginName]);\n      }\n\n      if (this.plugins[pluginName].active && !this.commandMap[pluginName] && !!_target) {\n        this.commandMap[pluginName] = _target;\n        this.activePlugins.push(pluginName);\n      }\n\n      if (typeof callBackFunction === 'function') callBackFunction();\n    },\n\n    /**\r\n     * @description If the module is not added, add the module and call the 'add' function\r\n     * @param {Array} moduleArray module object's Array [dialog, resizing]\r\n     */\n    addModule: function (moduleArray) {\n      for (let i = 0, len = moduleArray.length, moduleName; i < len; i++) {\n        moduleName = moduleArray[i].name;\n\n        if (!this.plugins[moduleName]) {\n          this.plugins[moduleName] = moduleArray[i];\n        }\n\n        if (!this.initPlugins[moduleName]) {\n          this.initPlugins[moduleName] = true;\n          if (typeof this.plugins[moduleName].add === 'function') this.plugins[moduleName].add(this);\n        }\n      }\n    },\n\n    /**\r\n     * @description Gets the current editor-relative scroll offset.\r\n     * @returns {Object} {top, left}\r\n     */\n    getGlobalScrollOffset: function () {\n      let t = 0,\n          l = 0;\n      let el = context.element.topArea;\n\n      while (el) {\n        t += el.scrollTop;\n        l += el.scrollLeft;\n        el = el.parentElement;\n      }\n\n      el = this._shadowRoot ? this._shadowRoot.host : null;\n\n      while (el) {\n        t += el.scrollTop;\n        l += el.scrollLeft;\n        el = el.parentElement;\n      }\n\n      return {\n        top: t,\n        left: l\n      };\n    },\n\n    /**\r\n     * @description Method for managing submenu element.\r\n     * You must add the \"submenu\" element using the this method at custom plugin.\r\n     * @param {String} pluginName Plugin name\r\n     * @param {Element|null} target Target button\r\n     * @param {Element} menu Submenu element\r\n     */\n    initMenuTarget: function (pluginName, target, menu) {\n      if (!target) {\n        this._targetPlugins[pluginName] = menu;\n      } else {\n        context.element._menuTray.appendChild(menu);\n\n        this._targetPlugins[pluginName] = true;\n        this._menuTray[target.getAttribute('data-command')] = menu;\n      }\n    },\n\n    /**\r\n     * @description Enable submenu\r\n     * @param {Element} element Submenu's button element to call\r\n     */\n    submenuOn: function (element) {\n      if (this._bindedSubmenuOff) this._bindedSubmenuOff();\n      if (this._bindControllersOff) this.controllersOff();\n      const submenuName = this._submenuName = element.getAttribute('data-command');\n      const menu = this.submenu = this._menuTray[submenuName];\n      this.submenuActiveButton = element;\n\n      this._setMenuPosition(element, menu);\n\n      this._bindedSubmenuOff = this.submenuOff.bind(this);\n      this.addDocEvent('mousedown', this._bindedSubmenuOff, false);\n      if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\n      this._antiBlur = true;\n    },\n\n    /**\r\n     * @description Disable submenu\r\n     */\n    submenuOff: function () {\n      this.removeDocEvent('mousedown', this._bindedSubmenuOff);\n      this._bindedSubmenuOff = null;\n\n      if (this.submenu) {\n        this._submenuName = '';\n        this.submenu.style.display = 'none';\n        this.submenu = null;\n        util.removeClass(this.submenuActiveButton, 'on');\n        this.submenuActiveButton = null;\n        this._notHideToolbar = false;\n      }\n\n      this._antiBlur = false;\n    },\n\n    /**\r\n     * @description Disable more layer\r\n     */\n    moreLayerOff: function () {\n      if (this._moreLayerActiveButton) {\n        const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\n        layer.style.display = 'none';\n        util.removeClass(this._moreLayerActiveButton, 'on');\n        this._moreLayerActiveButton = null;\n      }\n    },\n\n    /**\r\n     * @description Enable container\r\n     * @param {Element} element Container's button element to call\r\n     */\n    containerOn: function (element) {\n      if (this._bindedContainerOff) this._bindedContainerOff();\n      const containerName = this._containerName = element.getAttribute('data-command');\n      const menu = this.container = this._menuTray[containerName];\n      this.containerActiveButton = element;\n\n      this._setMenuPosition(element, menu);\n\n      this._bindedContainerOff = this.containerOff.bind(this);\n      this.addDocEvent('mousedown', this._bindedContainerOff, false);\n      if (this.plugins[containerName].on) this.plugins[containerName].on.call(this);\n      this._antiBlur = true;\n    },\n\n    /**\r\n     * @description Disable container\r\n     */\n    containerOff: function () {\n      this.removeDocEvent('mousedown', this._bindedContainerOff);\n      this._bindedContainerOff = null;\n\n      if (this.container) {\n        this._containerName = '';\n        this.container.style.display = 'none';\n        this.container = null;\n        util.removeClass(this.containerActiveButton, 'on');\n        this.containerActiveButton = null;\n        this._notHideToolbar = false;\n      }\n\n      this._antiBlur = false;\n    },\n\n    /**\r\n     * @description Set the menu position. (submenu, container)\r\n     * @param {*} element Button element\r\n     * @param {*} menu Menu element\r\n     * @private\r\n     */\n    _setMenuPosition: function (element, menu) {\n      menu.style.visibility = 'hidden';\n      menu.style.display = 'block';\n      menu.style.height = '';\n      util.addClass(element, 'on');\n      const toolbar = this.context.element.toolbar;\n      const toolbarW = toolbar.offsetWidth;\n\n      const toolbarOffset = event._getEditorOffsets(context.element.toolbar);\n\n      const menuW = menu.offsetWidth;\n      const l = element.parentElement.offsetLeft + 3; // rtl\n\n      if (options.rtl) {\n        const elementW = element.offsetWidth;\n        const rtlW = menuW > elementW ? menuW - elementW : 0;\n        const rtlL = rtlW > 0 ? 0 : elementW - menuW;\n        menu.style.left = l - rtlW + rtlL + 'px';\n\n        if (toolbarOffset.left > event._getEditorOffsets(menu).left) {\n          menu.style.left = '0px';\n        }\n      } else {\n        const overLeft = toolbarW <= menuW ? 0 : toolbarW - (l + menuW);\n        if (overLeft < 0) menu.style.left = l + overLeft + 'px';else menu.style.left = l + 'px';\n      } // get element top\n\n\n      let t = 0;\n      let offsetEl = element;\n\n      while (offsetEl && offsetEl !== toolbar) {\n        t += offsetEl.offsetTop;\n        offsetEl = offsetEl.offsetParent;\n      }\n\n      const bt = t;\n\n      if (this._isBalloon) {\n        t += toolbar.offsetTop + element.offsetHeight;\n      } else {\n        t -= element.offsetHeight;\n      } // set menu position\n\n\n      const toolbarTop = toolbarOffset.top;\n      const menuHeight = menu.offsetHeight;\n      const scrollTop = this.getGlobalScrollOffset().top;\n      const menuHeight_bottom = _w.innerHeight - (toolbarTop - scrollTop + bt + element.parentElement.offsetHeight);\n\n      if (menuHeight_bottom < menuHeight) {\n        let menuTop = -1 * (menuHeight - bt + 3);\n        const insTop = toolbarTop - scrollTop + menuTop;\n        const menuHeight_top = menuHeight + (insTop < 0 ? insTop : 0);\n\n        if (menuHeight_top > menuHeight_bottom) {\n          menu.style.height = menuHeight_top + 'px';\n          menuTop = -1 * (menuHeight_top - bt + 3);\n        } else {\n          menu.style.height = menuHeight_bottom + 'px';\n          menuTop = bt + element.parentElement.offsetHeight;\n        }\n\n        menu.style.top = menuTop + 'px';\n      } else {\n        menu.style.top = bt + element.parentElement.offsetHeight + 'px';\n      }\n\n      menu.style.visibility = '';\n    },\n\n    /**\r\n     * @description Show controller at editor area (controller elements, function, \"controller target element(@Required)\", \"controller name(@Required)\", etc..)\r\n     * @param {*} arguments controller elements, functions..\r\n     */\n    controllersOn: function () {\n      if (this._bindControllersOff) this._bindControllersOff();\n      this.controllerArray = [];\n\n      for (let i = 0, arg; i < arguments.length; i++) {\n        arg = arguments[i];\n        if (!arg) continue;\n\n        if (typeof arg === 'string') {\n          this.currentControllerName = arg;\n          continue;\n        }\n\n        if (typeof arg === 'function') {\n          this.controllerArray.push(arg);\n          continue;\n        }\n\n        if (!util.hasClass(arg, 'se-controller')) {\n          this.currentControllerTarget = arg;\n          this.currentFileComponentInfo = this.getFileComponent(arg);\n          continue;\n        }\n\n        if (arg.style) {\n          arg.style.display = 'block';\n\n          if (this._shadowRoot && this._shadowRootControllerEventTarget.indexOf(arg) === -1) {\n            arg.addEventListener('mousedown', function (e) {\n              e.preventDefault();\n              e.stopPropagation();\n            });\n\n            this._shadowRootControllerEventTarget.push(arg);\n          }\n        }\n\n        this.controllerArray.push(arg);\n      }\n\n      this._bindControllersOff = this.controllersOff.bind(this);\n      this.addDocEvent('mousedown', this._bindControllersOff, false);\n      this.addDocEvent('keydown', this._bindControllersOff, false);\n      this._antiBlur = true;\n      if (typeof functions.showController === 'function') functions.showController(this.currentControllerName, this.controllerArray, this);\n    },\n\n    /**\r\n     * @description Hide controller at editor area (link button, image resize button..)\r\n     * @param {KeyboardEvent|MouseEvent|null} e Event object when called from mousedown and keydown events registered in \"core.controllersOn\"\r\n     */\n    controllersOff: function (e) {\n      this._lineBreaker.style.display = 'none';\n      const len = this.controllerArray.length;\n\n      if (e && e.target && len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (typeof this.controllerArray[i].contains === 'function' && this.controllerArray[i].contains(e.target)) return;\n        }\n      }\n\n      if (this._fileManager.pluginRegExp.test(this.currentControllerName) && e && e.type === 'keydown' && e.keyCode !== 27) return;\n      context.element.lineBreaker_t.style.display = context.element.lineBreaker_b.style.display = 'none';\n      this._variable._lineBreakComp = null;\n      this.currentControllerName = '';\n      this.currentControllerTarget = null;\n      this.currentFileComponentInfo = null;\n      this.effectNode = null;\n      if (!this._bindControllersOff) return;\n      this.removeDocEvent('mousedown', this._bindControllersOff);\n      this.removeDocEvent('keydown', this._bindControllersOff);\n      this._bindControllersOff = null;\n\n      if (len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (typeof this.controllerArray[i] === 'function') this.controllerArray[i]();else this.controllerArray[i].style.display = 'none';\n        }\n\n        this.controllerArray = [];\n      }\n\n      this._antiBlur = false;\n    },\n\n    /**\r\n     * @description Specify the position of the controller.\r\n     * @param {Element} controller Controller element.\r\n     * @param {Element} referEl Element that is the basis of the controller's position.\r\n     * @param {String} position Type of position (\"top\" | \"bottom\")\r\n     * When using the \"top\" position, there should not be an arrow on the controller.\r\n     * When using the \"bottom\" position there should be an arrow on the controller.\r\n     * @param {Object} addOffset These are the left and top values that need to be added specially. \r\n     * This argument is required. - {left: 0, top: 0}\r\n     * Please enter the value based on ltr mode.\r\n     * Calculated automatically in rtl mode.\r\n     */\n    setControllerPosition: function (controller, referEl, position, addOffset) {\n      if (options.rtl) addOffset.left *= -1;\n      const offset = util.getOffset(referEl, context.element.wysiwygFrame);\n      controller.style.visibility = 'hidden';\n      controller.style.display = 'block'; // Height value of the arrow element is 11px\n\n      const topMargin = position === 'top' ? -(controller.offsetHeight + 2) : referEl.offsetHeight + 12;\n      controller.style.top = offset.top + topMargin + addOffset.top + 'px';\n      const l = offset.left - context.element.wysiwygFrame.scrollLeft + addOffset.left;\n      const controllerW = controller.offsetWidth;\n      const referElW = referEl.offsetWidth;\n      const allow = util.hasClass(controller.firstElementChild, 'se-arrow') ? controller.firstElementChild : null; // rtl (Width value of the arrow element is 22px)\n\n      if (options.rtl) {\n        const rtlW = controllerW > referElW ? controllerW - referElW : 0;\n        const rtlL = rtlW > 0 ? 0 : referElW - controllerW;\n        controller.style.left = l - rtlW + rtlL + 'px';\n\n        if (rtlW > 0) {\n          if (allow) allow.style.left = (controllerW - 14 < 10 + rtlW ? controllerW - 14 : 10 + rtlW) + 'px';\n        }\n\n        const overSize = context.element.wysiwygFrame.offsetLeft - controller.offsetLeft;\n\n        if (overSize > 0) {\n          controller.style.left = '0px';\n          if (allow) allow.style.left = overSize + 'px';\n        }\n      } else {\n        controller.style.left = l + 'px';\n        const overSize = context.element.wysiwygFrame.offsetWidth - (controller.offsetLeft + controllerW);\n\n        if (overSize < 0) {\n          controller.style.left = controller.offsetLeft + overSize + 'px';\n          if (allow) allow.style.left = 20 - overSize + 'px';\n        } else {\n          if (allow) allow.style.left = '20px';\n        }\n      }\n\n      controller.style.visibility = '';\n    },\n\n    /**\r\n     * @description javascript execCommand\r\n     * @param {String} command javascript execCommand function property\r\n     * @param {Boolean|undefined} showDefaultUI javascript execCommand function property\r\n     * @param {String|undefined} value javascript execCommand function property\r\n     */\n    execCommand: function (command, showDefaultUI, value) {\n      this._wd.execCommand(command, showDefaultUI, command === 'formatBlock' ? '<' + value + '>' : value); // history stack\n\n\n      this.history.push(true);\n    },\n\n    /**\r\n     * @description Focus to wysiwyg area using \"native focus function\"\r\n     */\n    nativeFocus: function () {\n      this.__focus();\n\n      this._editorRange();\n    },\n\n    /**\r\n     * @description Focus method\r\n     * @private\r\n     */\n    __focus: function () {\n      const caption = util.getParentElement(this.getSelectionNode(), 'figcaption');\n\n      if (caption) {\n        caption.focus();\n      } else {\n        context.element.wysiwyg.focus();\n      }\n    },\n\n    /**\r\n     * @description Focus to wysiwyg area\r\n     */\n    focus: function () {\n      if (context.element.wysiwygFrame.style.display === 'none') return;\n\n      if (options.iframe) {\n        this.nativeFocus();\n      } else {\n        try {\n          const range = this.getRange();\n\n          if (range.startContainer === range.endContainer && util.isWysiwygDiv(range.startContainer)) {\n            const currentNode = range.commonAncestorContainer.children[range.startOffset];\n\n            if (!util.isFormatElement(currentNode) && !util.isComponent(currentNode)) {\n              const format = util.createElement(options.defaultTag);\n              const br = util.createElement('BR');\n              format.appendChild(br);\n              context.element.wysiwyg.insertBefore(format, currentNode);\n              this.setRange(br, 0, br, 0);\n              return;\n            }\n          }\n\n          this.setRange(range.startContainer, range.startOffset, range.endContainer, range.endOffset);\n        } catch (e) {\n          this.nativeFocus();\n        }\n      }\n\n      event._applyTagEffects();\n\n      if (this._isBalloon) event._toggleToolbarBalloon();\n    },\n\n    /**\r\n     * @description If \"focusEl\" is a component, then that component is selected; if it is a format element, the last text is selected\r\n     * If \"focusEdge\" is null, then selected last element\r\n     * @param {Element|null} focusEl Focus element\r\n     */\n    focusEdge: function (focusEl) {\n      if (!focusEl) focusEl = context.element.wysiwyg.lastElementChild;\n      const fileComponentInfo = this.getFileComponent(focusEl);\n\n      if (fileComponentInfo) {\n        this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n      } else if (focusEl) {\n        focusEl = util.getChildElement(focusEl, function (current) {\n          return current.childNodes.length === 0 || current.nodeType === 3;\n        }, true);\n        if (!focusEl) this.nativeFocus();else this.setRange(focusEl, focusEl.textContent.length, focusEl, focusEl.textContent.length);\n      } else {\n        this.focus();\n      }\n    },\n\n    /**\r\n     * @description Focusout to wysiwyg area (.blur())\r\n     */\n    blur: function () {\n      if (options.iframe) {\n        context.element.wysiwygFrame.blur();\n      } else {\n        context.element.wysiwyg.blur();\n      }\n    },\n\n    /**\r\n     * @description Set current editor's range object and return.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @returns {Object} Range object.\r\n     */\n    setRange: function (startCon, startOff, endCon, endOff) {\n      if (!startCon || !endCon) return;\n      if (startOff > startCon.textContent.length) startOff = startCon.textContent.length;\n      if (endOff > endCon.textContent.length) endOff = endCon.textContent.length;\n\n      if (util.isFormatElement(startCon)) {\n        startCon = startCon.childNodes[startOff] || startCon;\n        startOff = 0;\n      }\n\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon;\n        endOff = startOff > 1 ? startOff : 0;\n      }\n\n      const range = this._wd.createRange();\n\n      try {\n        range.setStart(startCon, startOff);\n        range.setEnd(endCon, endOff);\n      } catch (error) {\n        console.warn('[SUNEDITOR.core.focus.error] ' + error);\n        this.nativeFocus();\n        return;\n      }\n\n      const selection = this.getSelection();\n\n      if (selection.removeAllRanges) {\n        selection.removeAllRanges();\n      }\n\n      selection.addRange(range);\n\n      this._rangeInfo(range, this.getSelection());\n\n      if (options.iframe) this.__focus();\n      return range;\n    },\n\n    /**\r\n     * @description Remove range object and button effect\r\n     */\n    removeRange: function () {\n      this._variable._range = null;\n      this._variable._selectionNode = null;\n      if (this.hasFocus) this.getSelection().removeAllRanges();\n\n      this._setKeyEffect([]);\n    },\n\n    /**\r\n     * @description Get current editor's range object\r\n     * @returns {Object}\r\n     */\n    getRange: function () {\n      const range = this._variable._range || this._createDefaultRange();\n\n      const selection = this.getSelection();\n      if (range.collapsed === selection.isCollapsed || !context.element.wysiwyg.contains(selection.focusNode)) return range;\n\n      if (selection.rangeCount > 0) {\n        this._variable._range = selection.getRangeAt(0);\n        return this._variable._range;\n      } else {\n        const sc = selection.anchorNode,\n              ec = selection.focusNode,\n              so = selection.anchorOffset,\n              eo = selection.focusOffset;\n        const compareValue = util.compareElements(sc, ec);\n        const rightDir = compareValue.ancestor && (compareValue.result === 0 ? so <= eo : compareValue.result > 1 ? true : false);\n        return this.setRange(rightDir ? sc : ec, rightDir ? so : eo, rightDir ? ec : sc, rightDir ? eo : so);\n      }\n    },\n\n    /**\r\n     * @description If the \"range\" object is a non-editable area, add a line at the top of the editor and update the \"range\" object.\r\n     * Returns a new \"range\" or argument \"range\".\r\n     * @param {Object} range core.getRange()\r\n     * @param {Element|null} container If there is \"container\" argument, it creates a line in front of the container.\r\n     * @returns {Object} range\r\n     */\n    getRange_addLine: function (range, container) {\n      if (this._selectionVoid(range)) {\n        const wysiwyg = context.element.wysiwyg;\n        const op = util.createElement(options.defaultTag);\n        op.innerHTML = '<br>';\n        wysiwyg.insertBefore(op, container && container !== wysiwyg ? container.nextElementSibling : wysiwyg.firstElementChild);\n        this.setRange(op.firstElementChild, 0, op.firstElementChild, 1);\n        range = this._variable._range;\n      }\n\n      return range;\n    },\n\n    /**\r\n     * @description Get window selection obejct\r\n     * @returns {Object}\r\n     */\n    getSelection: function () {\n      return this._shadowRoot && this._shadowRoot.getSelection ? this._shadowRoot.getSelection() : this._ww.getSelection();\n    },\n\n    /**\r\n     * @description Get current select node\r\n     * @returns {Node}\r\n     */\n    getSelectionNode: function () {\n      if (!context.element.wysiwyg.contains(this._variable._selectionNode)) this._editorRange();\n\n      if (!this._variable._selectionNode) {\n        const selectionNode = util.getChildElement(context.element.wysiwyg.firstChild, function (current) {\n          return current.childNodes.length === 0 || current.nodeType === 3;\n        }, false);\n\n        if (!selectionNode) {\n          this._editorRange();\n        } else {\n          this._variable._selectionNode = selectionNode;\n          return selectionNode;\n        }\n      }\n\n      return this._variable._selectionNode;\n    },\n\n    /**\r\n     * @description Saving the range object and the currently selected node of editor\r\n     * @private\r\n     */\n    _editorRange: function () {\n      const selection = this.getSelection();\n      if (!selection) return null;\n      let range = null;\n\n      if (selection.rangeCount > 0) {\n        range = selection.getRangeAt(0);\n      } else {\n        range = this._createDefaultRange();\n      }\n\n      if (util.isFormatElement(range.endContainer) && range.endOffset === 0) {\n        range = this.setRange(range.startContainer, range.startOffset, range.startContainer, range.startContainer.length);\n      }\n\n      this._rangeInfo(range, selection);\n    },\n\n    /**\r\n     * @description Set \"range\" and \"selection\" info.\r\n     * @param {Object} range range object.\r\n     * @param {Object} selection selection object.\r\n     */\n    _rangeInfo: function (range, selection) {\n      let selectionNode = null;\n      this._variable._range = range;\n\n      if (range.collapsed) {\n        if (util.isWysiwygDiv(range.commonAncestorContainer)) selectionNode = range.commonAncestorContainer.children[range.startOffset] || range.commonAncestorContainer;else selectionNode = range.commonAncestorContainer;\n      } else {\n        selectionNode = selection.extentNode || selection.anchorNode;\n      }\n\n      this._variable._selectionNode = selectionNode;\n    },\n\n    /**\r\n     * @description Return the range object of editor's first child node\r\n     * @returns {Object}\r\n     * @private\r\n     */\n    _createDefaultRange: function () {\n      const wysiwyg = context.element.wysiwyg;\n      wysiwyg.focus();\n\n      const range = this._wd.createRange();\n\n      let focusEl = wysiwyg.firstElementChild;\n\n      if (!focusEl) {\n        focusEl = util.createElement(options.defaultTag);\n        focusEl.innerHTML = '<br>';\n        wysiwyg.appendChild(focusEl);\n      }\n\n      range.setStart(focusEl, 0);\n      range.setEnd(focusEl, 0);\n      return range;\n    },\n\n    /**\r\n     * @description Returns true if there is no valid \"selection\".\r\n     * @param {Object} range core.getRange()\r\n     * @returns {Object} range\r\n     * @private\r\n     */\n    _selectionVoid: function (range) {\n      const comm = range.commonAncestorContainer;\n      return util.isWysiwygDiv(range.startContainer) && util.isWysiwygDiv(range.endContainer) || /FIGURE/i.test(comm.nodeName) || this._fileManager.regExp.test(comm.nodeName) || util.isMediaComponent(comm);\n    },\n\n    /**\r\n     * @description Reset range object to text node selected status.\r\n     * @returns {Boolean} Returns false if there is no valid selection.\r\n     * @private\r\n     */\n    _resetRangeToTextNode: function () {\n      const range = this.getRange();\n      if (this._selectionVoid(range)) return false;\n      let startCon = range.startContainer;\n      let startOff = range.startOffset;\n      let endCon = range.endContainer;\n      let endOff = range.endOffset;\n      let tempCon, tempOffset, tempChild;\n\n      if (util.isFormatElement(startCon)) {\n        if (!startCon.childNodes[startOff]) {\n          startCon = startCon.lastChild || startCon;\n          startOff = startCon.textContent.length;\n        } else {\n          startCon = startCon.childNodes[startOff] || startCon;\n          startOff = 0;\n        }\n\n        while (startCon && startCon.nodeType === 1 && startCon.firstChild) {\n          startCon = startCon.firstChild || startCon;\n          startOff = 0;\n        }\n      }\n\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon.lastChild || endCon;\n\n        while (endCon && endCon.nodeType === 1 && endCon.lastChild) {\n          endCon = endCon.lastChild;\n        }\n\n        endOff = endCon.textContent.length;\n      } // startContainer\n\n\n      tempCon = util.isWysiwygDiv(startCon) ? context.element.wysiwyg.firstChild : startCon;\n      tempOffset = startOff;\n\n      if (util.isBreak(tempCon) || tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        const onlyBreak = util.isBreak(tempCon);\n\n        if (!onlyBreak) {\n          while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\n            tempCon = tempCon.childNodes[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\n            tempOffset = 0;\n          }\n\n          let format = util.getFormatElement(tempCon, null);\n\n          if (format === util.getRangeFormatElement(format, null)) {\n            format = util.createElement(util.getParentElement(tempCon, util.isCell) ? 'DIV' : options.defaultTag);\n            tempCon.parentNode.insertBefore(format, tempCon);\n            format.appendChild(tempCon);\n          }\n        }\n\n        if (util.isBreak(tempCon)) {\n          const emptyText = util.createTextNode(util.zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n\n          if (onlyBreak) {\n            if (startCon === endCon) {\n              endCon = tempCon;\n              endOff = 1;\n            }\n          }\n        }\n      } // set startContainer\n\n\n      startCon = tempCon;\n      startOff = tempOffset; // endContainer\n\n      tempCon = util.isWysiwygDiv(endCon) ? context.element.wysiwyg.lastChild : endCon;\n      tempOffset = endOff;\n\n      if (util.isBreak(tempCon) || tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        const onlyBreak = util.isBreak(tempCon);\n\n        if (!onlyBreak) {\n          while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\n            tempChild = tempCon.childNodes;\n            if (tempChild.length === 0) break;\n            tempCon = tempChild[tempOffset > 0 ? tempOffset - 1 : tempOffset] || !/FIGURE/i.test(tempChild[0].nodeName) ? tempChild[0] : tempCon.previousElementSibling || tempCon.previousSibling || startCon;\n            tempOffset = tempOffset > 0 ? tempCon.textContent.length : tempOffset;\n          }\n\n          let format = util.getFormatElement(tempCon, null);\n\n          if (format === util.getRangeFormatElement(format, null)) {\n            format = util.createElement(util.isCell(format) ? 'DIV' : options.defaultTag);\n            tempCon.parentNode.insertBefore(format, tempCon);\n            format.appendChild(tempCon);\n          }\n        }\n\n        if (util.isBreak(tempCon)) {\n          const emptyText = util.createTextNode(util.zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n          tempOffset = 1;\n\n          if (onlyBreak && !tempCon.previousSibling) {\n            util.removeItem(endCon);\n          }\n        }\n      } // set endContainer\n\n\n      endCon = tempCon;\n      endOff = tempOffset; // set Range\n\n      this.setRange(startCon, startOff, endCon, endOff);\n      return true;\n    },\n\n    /**\r\n     * @description Returns a \"formatElement\"(util.isFormatElement) array from the currently selected range.\r\n     * @param {Function|null} validation The validation function. (Replaces the default validation function-util.isFormatElement(current))\r\n     * @returns {Array}\r\n     */\n    getSelectedElements: function (validation) {\n      if (!this._resetRangeToTextNode()) return [];\n      let range = this.getRange();\n\n      if (util.isWysiwygDiv(range.startContainer)) {\n        const children = context.element.wysiwyg.children;\n        if (children.length === 0) return [];\n        this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.trim().length);\n        range = this.getRange();\n      }\n\n      const startCon = range.startContainer;\n      const endCon = range.endContainer;\n      const commonCon = range.commonAncestorContainer; // get line nodes\n\n      const lineNodes = util.getListChildren(commonCon, function (current) {\n        return validation ? validation(current) : util.isFormatElement(current);\n      });\n      if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) lineNodes.unshift(util.getFormatElement(commonCon, null));\n      if (startCon === endCon || lineNodes.length === 1) return lineNodes;\n      let startLine = util.getFormatElement(startCon, null);\n      let endLine = util.getFormatElement(endCon, null);\n      let startIdx = null;\n      let endIdx = null;\n\n      const onlyTable = function (current) {\n        return util.isTable(current) ? /^TABLE$/i.test(current.nodeName) : true;\n      };\n\n      let startRangeEl = util.getRangeFormatElement(startLine, onlyTable);\n      let endRangeEl = util.getRangeFormatElement(endLine, onlyTable);\n      if (util.isTable(startRangeEl) && util.isListCell(startRangeEl.parentNode)) startRangeEl = startRangeEl.parentNode;\n      if (util.isTable(endRangeEl) && util.isListCell(endRangeEl.parentNode)) endRangeEl = endRangeEl.parentNode;\n      const sameRange = startRangeEl === endRangeEl;\n\n      for (let i = 0, len = lineNodes.length, line; i < len; i++) {\n        line = lineNodes[i];\n\n        if (startLine === line || !sameRange && line === startRangeEl) {\n          startIdx = i;\n          continue;\n        }\n\n        if (endLine === line || !sameRange && line === endRangeEl) {\n          endIdx = i;\n          break;\n        }\n      }\n\n      if (startIdx === null) startIdx = 0;\n      if (endIdx === null) endIdx = lineNodes.length - 1;\n      return lineNodes.slice(startIdx, endIdx + 1);\n    },\n\n    /**\r\n     * @description Get format elements and components from the selected area. (P, DIV, H[1-6], OL, UL, TABLE..)\r\n     * If some of the component are included in the selection, get the entire that component.\r\n     * @param {Boolean} removeDuplicate If true, if there is a parent and child tag among the selected elements, the child tag is excluded.\r\n     * @returns {Array}\r\n     */\n    getSelectedElementsAndComponents: function (removeDuplicate) {\n      const commonCon = this.getRange().commonAncestorContainer;\n      const myComponent = util.getParentElement(commonCon, util.isComponent);\n      const selectedLines = util.isTable(commonCon) ? this.getSelectedElements(null) : this.getSelectedElements(function (current) {\n        const component = this.getParentElement(current, this.isComponent);\n        return this.isFormatElement(current) && (!component || component === myComponent) || this.isComponent(current) && !this.getFormatElement(current);\n      }.bind(util));\n\n      if (removeDuplicate) {\n        for (let i = 0, len = selectedLines.length; i < len; i++) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (selectedLines[j].contains(selectedLines[i])) {\n              selectedLines.splice(i, 1);\n              i--;\n              len--;\n              break;\n            }\n          }\n        }\n      }\n\n      return selectedLines;\n    },\n\n    /**\r\n     * @description Determine if this offset is the edge offset of container\r\n     * @param {Node} container The node of the selection object. (range.startContainer..)\r\n     * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n     * @param {String|undefined} dir Select check point - Both edge, Front edge or End edge. (\"front\": Front edge, \"end\": End edge, undefined: Both edge)\r\n     * @returns {Boolean}\r\n     */\n    isEdgePoint: function (container, offset, dir) {\n      return dir !== 'end' && offset === 0 || (!dir || dir !== 'front') && !container.nodeValue && offset === 1 || (!dir || dir === 'end') && !!container.nodeValue && offset === container.nodeValue.length;\n    },\n\n    /**\r\n     * @description Check if the container and offset values are the edges of the format tag\r\n     * @param {Node} container The node of the selection object. (range.startContainer..)\r\n     * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n     * @param {String} dir Select check point - \"front\": Front edge, \"end\": End edge, undefined: Both edge.\r\n     * @returns {Array|null}\r\n     * @private\r\n     */\n    _isEdgeFormat: function (node, offset, dir) {\n      if (!this.isEdgePoint(node, offset, dir)) return false;\n      const result = [];\n      dir = dir === 'front' ? 'previousSibling' : 'nextSibling';\n\n      while (node && !util.isFormatElement(node) && !util.isWysiwygDiv(node)) {\n        if (!node[dir] || util.isBreak(node[dir]) && !node[dir][dir]) {\n          if (node.nodeType === 1) result.push(node.cloneNode(false));\n          node = node.parentNode;\n        } else {\n          return null;\n        }\n      }\n\n      return result;\n    },\n\n    /**\r\n     * @description Show loading box\r\n     */\n    showLoading: function () {\n      context.element.loading.style.display = 'block';\n    },\n\n    /**\r\n     * @description Close loading box\r\n     */\n    closeLoading: function () {\n      context.element.loading.style.display = 'none';\n    },\n\n    /**\r\n     * @description Append format element to sibling node of argument element.\r\n     * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n     * If not, the currently selected format tag is inserted.\r\n     * @param {Element} element Insert as siblings of that element\r\n     * @param {String|Element|null} formatNode Node name or node obejct to be inserted\r\n     * @returns {Element}\r\n     */\n    appendFormatTag: function (element, formatNode) {\n      if (!element || !element.parentNode) return null;\n      const currentFormatEl = util.getFormatElement(this.getSelectionNode(), null);\n      let oFormat = null;\n\n      if (util.isFreeFormatElement(currentFormatEl || element.parentNode)) {\n        oFormat = util.createElement('BR');\n      } else {\n        const oFormatName = formatNode ? typeof formatNode === 'string' ? formatNode : formatNode.nodeName : util.isFormatElement(currentFormatEl) && !util.isRangeFormatElement(currentFormatEl) && !util.isFreeFormatElement(currentFormatEl) ? currentFormatEl.nodeName : options.defaultTag;\n        oFormat = util.createElement(oFormatName);\n        oFormat.innerHTML = '<br>';\n\n        if (formatNode && typeof formatNode !== 'string' || !formatNode && util.isFormatElement(currentFormatEl)) {\n          util.copyTagAttributes(oFormat, formatNode || currentFormatEl);\n        }\n      }\n\n      if (util.isCell(element)) element.insertBefore(oFormat, element.nextElementSibling);else element.parentNode.insertBefore(oFormat, element.nextElementSibling);\n      return oFormat;\n    },\n\n    /**\r\n     * @description The method to insert a element and return. (used elements : table, hr, image, video)\r\n     * If \"element\" is \"HR\", insert and return the new line.\r\n     * @param {Element} element Element to be inserted\r\n     * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @param {Boolean} notSelect If true, Do not automatically select the inserted component.\r\n     * @returns {Element}\r\n     */\n    insertComponent: function (element, notHistoryPush, checkCharCount, notSelect) {\n      if (this.isReadOnly || checkCharCount && !this.checkCharCount(element, null)) {\n        return null;\n      }\n\n      const r = this.removeNode();\n      this.getRange_addLine(this.getRange(), r.container);\n      let oNode = null;\n      let selectionNode = this.getSelectionNode();\n      let formatEl = util.getFormatElement(selectionNode, null);\n\n      if (util.isListCell(formatEl)) {\n        this.insertNode(element, selectionNode === formatEl ? null : r.container.nextSibling, false);\n        if (!element.nextSibling) element.parentNode.appendChild(util.createElement('BR'));\n      } else {\n        if (this.getRange().collapsed && (r.container.nodeType === 3 || util.isBreak(r.container))) {\n          const depthFormat = util.getParentElement(r.container, function (current) {\n            return this.isRangeFormatElement(current);\n          }.bind(util));\n          oNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n          if (oNode) formatEl = oNode.previousSibling;\n        }\n\n        this.insertNode(element, util.isRangeFormatElement(formatEl) ? null : formatEl, false);\n        if (formatEl && util.onlyZeroWidthSpace(formatEl)) util.removeItem(formatEl);\n      }\n\n      if (!notSelect) {\n        this.setRange(element, 0, element, 0);\n        const fileComponentInfo = this.getFileComponent(element);\n\n        if (fileComponentInfo) {\n          this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n        } else if (oNode) {\n          oNode = util.getEdgeChildNodes(oNode, null).sc || oNode;\n          this.setRange(oNode, 0, oNode, 0);\n        }\n      } // history stack\n\n\n      if (!notHistoryPush) this.history.push(1);\n      return oNode || element;\n    },\n\n    /**\r\n     * @description Gets the file component and that plugin name\r\n     * return: {target, component, pluginName} | null\r\n     * @param {Element} element Target element (figure tag, component div, file tag)\r\n     * @returns {Object|null}\r\n     */\n    getFileComponent: function (element) {\n      if (!this._fileManager.queryString || !element) return null;\n      let target, pluginName;\n\n      if (/^FIGURE$/i.test(element.nodeName) || /se-component/.test(element.className)) {\n        target = element.querySelector(this._fileManager.queryString);\n      }\n\n      if (!target && element.nodeName && this._fileManager.regExp.test(element.nodeName)) {\n        target = element;\n      }\n\n      if (target) {\n        pluginName = this._fileManager.pluginMap[target.nodeName.toLowerCase()];\n\n        if (pluginName) {\n          return {\n            target: target,\n            component: util.getParentElement(target, util.isComponent),\n            pluginName: pluginName\n          };\n        }\n      }\n\n      return null;\n    },\n\n    /**\r\n     * @description The component(image, video) is selected and the resizing module is called.\r\n     * @param {Element} element Element tag (img, iframe, video)\r\n     * @param {String} pluginName Plugin name (image, video)\r\n     */\n    selectComponent: function (element, pluginName) {\n      if (util.isUneditableComponent(util.getParentElement(element, util.isComponent)) || util.isUneditableComponent(element)) return false;\n      if (!this.hasFocus) this.focus();\n      const plugin = this.plugins[pluginName];\n      if (!plugin) return;\n\n      _w.setTimeout(function () {\n        if (typeof plugin.select === 'function') this.callPlugin(pluginName, plugin.select.bind(this, element), null);\n\n        this._setComponentLineBreaker(element);\n      }.bind(this));\n    },\n\n    /**\r\n     * @description Set line breaker of component\r\n     * @param {Element} element Element tag (img, iframe, video)\r\n     * @private\r\n     */\n    _setComponentLineBreaker: function (element) {\n      // line breaker\n      this._lineBreaker.style.display = 'none';\n      const container = util.getParentElement(element, util.isComponent);\n      const t_style = context.element.lineBreaker_t.style;\n      const b_style = context.element.lineBreaker_b.style;\n      const target = this.context.resizing.resizeContainer.style.display === 'block' ? this.context.resizing.resizeContainer : element;\n      const isList = util.isListCell(container.parentNode);\n      let componentTop, wScroll, w; // top\n\n      if (isList ? !container.previousSibling : !util.isFormatElement(container.previousElementSibling)) {\n        this._variable._lineBreakComp = container;\n        wScroll = context.element.wysiwyg.scrollTop;\n        componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\n        w = target.offsetWidth / 2 / 2;\n        t_style.top = componentTop - wScroll - 12 + 'px';\n        t_style.left = util.getOffset(target).left + w + 'px';\n        t_style.display = 'block';\n      } else {\n        t_style.display = 'none';\n      } // bottom\n\n\n      if (isList ? !container.nextSibling : !util.isFormatElement(container.nextElementSibling)) {\n        if (!componentTop) {\n          this._variable._lineBreakComp = container;\n          wScroll = context.element.wysiwyg.scrollTop;\n          componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\n          w = target.offsetWidth / 2 / 2;\n        }\n\n        b_style.top = componentTop + target.offsetHeight - wScroll - 12 + 'px';\n        b_style.left = util.getOffset(target).left + target.offsetWidth - w - 24 + 'px';\n        b_style.display = 'block';\n      } else {\n        b_style.display = 'none';\n      }\n    },\n\n    /**\r\n     * @description Delete selected node and insert argument value node and return.\r\n     * If the \"afterNode\" exists, it is inserted after the \"afterNode\"\r\n     * Inserting a text node merges with both text nodes on both sides and returns a new \"{ container, startOffset, endOffset }\".\r\n     * @param {Node} oNode Element to be inserted\r\n     * @param {Node|null} afterNode If the node exists, it is inserted after the node\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @returns {Object|Node|null}\r\n     */\n    insertNode: function (oNode, afterNode, checkCharCount) {\n      if (this.isReadOnly || checkCharCount && !this.checkCharCount(oNode, null)) {\n        return null;\n      }\n\n      const freeFormat = util.getFreeFormatElement(this.getSelectionNode(), null);\n      const isFormats = !freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) || util.isComponent(oNode);\n\n      if (!afterNode && (isFormats || util.isComponent(oNode) || util.isMedia(oNode))) {\n        const r = this.removeNode();\n\n        if (r.container.nodeType === 3 || util.isBreak(r.container)) {\n          const depthFormat = util.getParentElement(r.container, function (current) {\n            return this.isRangeFormatElement(current) || this.isListCell(current);\n          }.bind(util));\n          afterNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n          if (afterNode) afterNode = afterNode.previousSibling;\n        }\n      }\n\n      const range = !afterNode && !isFormats ? this.getRange_addLine(this.getRange(), null) : this.getRange();\n      const commonCon = range.commonAncestorContainer;\n      const startOff = range.startOffset;\n      const endOff = range.endOffset;\n      const formatRange = range.startContainer === commonCon && util.isFormatElement(commonCon);\n      const startCon = formatRange ? commonCon.childNodes[startOff] || commonCon.childNodes[0] || range.startContainer : range.startContainer;\n      const endCon = formatRange ? commonCon.childNodes[endOff] || commonCon.childNodes[commonCon.childNodes.length - 1] || range.endContainer : range.endContainer;\n      let parentNode,\n          originAfter = null;\n\n      if (!afterNode) {\n        parentNode = startCon;\n\n        if (startCon.nodeType === 3) {\n          parentNode = startCon.parentNode;\n        }\n        /** No Select range node */\n\n\n        if (range.collapsed) {\n          if (commonCon.nodeType === 3) {\n            if (commonCon.textContent.length > endOff) afterNode = commonCon.splitText(endOff);else afterNode = commonCon.nextSibling;\n          } else {\n            if (!util.isBreak(parentNode)) {\n              let c = parentNode.childNodes[startOff];\n              const focusNode = c && c.nodeType === 3 && util.onlyZeroWidthSpace(c) && util.isBreak(c.nextSibling) ? c.nextSibling : c;\n\n              if (focusNode) {\n                if (!focusNode.nextSibling) {\n                  parentNode.removeChild(focusNode);\n                  afterNode = null;\n                } else {\n                  afterNode = util.isBreak(focusNode) && !util.isBreak(oNode) ? focusNode : focusNode.nextSibling;\n                }\n              } else {\n                afterNode = null;\n              }\n            } else {\n              afterNode = parentNode;\n              parentNode = parentNode.parentNode;\n            }\n          }\n        } else {\n          /** Select range nodes */\n          const isSameContainer = startCon === endCon;\n\n          if (isSameContainer) {\n            if (this.isEdgePoint(endCon, endOff)) afterNode = endCon.nextSibling;else afterNode = endCon.splitText(endOff);\n            let removeNode = startCon;\n            if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\n            parentNode.removeChild(removeNode);\n\n            if (parentNode.childNodes.length === 0 && isFormats) {\n              parentNode.innerHTML = '<br>';\n            }\n          } else {\n            const removedTag = this.removeNode();\n            const container = removedTag.container;\n            const prevContainer = removedTag.prevContainer;\n\n            if (container && container.childNodes.length === 0 && isFormats) {\n              if (util.isFormatElement(container)) {\n                container.innerHTML = '<br>';\n              } else if (util.isRangeFormatElement(container)) {\n                container.innerHTML = '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n              }\n            }\n\n            if (!isFormats && prevContainer) {\n              parentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\n\n              if (parentNode.contains(container)) {\n                let sameParent = true;\n                afterNode = container;\n\n                while (afterNode.parentNode !== parentNode) {\n                  afterNode = afterNode.parentNode;\n                  sameParent = false;\n                }\n\n                if (sameParent && container === prevContainer) afterNode = afterNode.nextSibling;\n              } else {\n                afterNode = null;\n              }\n            } else {\n              afterNode = isFormats ? endCon : container === prevContainer ? container.nextSibling : container;\n              parentNode = !afterNode || !afterNode.parentNode ? commonCon : afterNode.parentNode;\n            }\n\n            while (afterNode && !util.isFormatElement(afterNode) && afterNode.parentNode !== commonCon) {\n              afterNode = afterNode.parentNode;\n            }\n          }\n        }\n      } // has afterNode\n      else {\n        parentNode = afterNode.parentNode;\n        afterNode = afterNode.nextSibling;\n        originAfter = true;\n      } // --- insert node ---\n\n\n      try {\n        if (util.isWysiwygDiv(afterNode) || parentNode === context.element.wysiwyg.parentNode) {\n          parentNode = context.element.wysiwyg;\n          afterNode = null;\n        }\n\n        if (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode) || !util.isListCell(parentNode) && util.isComponent(oNode)) {\n          const oldParent = parentNode;\n\n          if (util.isList(afterNode)) {\n            parentNode = afterNode;\n            afterNode = null;\n          } else if (util.isListCell(afterNode)) {\n            parentNode = afterNode.previousElementSibling || afterNode;\n          } else if (!originAfter && !afterNode) {\n            const r = this.removeNode();\n            const container = r.container.nodeType === 3 ? util.isListCell(util.getFormatElement(r.container, null)) ? r.container : util.getFormatElement(r.container, null) || r.container.parentNode : r.container;\n            const rangeCon = util.isWysiwygDiv(container) || util.isRangeFormatElement(container);\n            parentNode = rangeCon ? container : container.parentNode;\n            afterNode = rangeCon ? null : container.nextSibling;\n          }\n\n          if (oldParent.childNodes.length === 0 && parentNode !== oldParent) util.removeItem(oldParent);\n        }\n\n        if (isFormats && !freeFormat && !util.isRangeFormatElement(parentNode) && !util.isListCell(parentNode) && !util.isWysiwygDiv(parentNode)) {\n          afterNode = parentNode.nextElementSibling;\n          parentNode = parentNode.parentNode;\n        }\n\n        if (util.isWysiwygDiv(parentNode) && (oNode.nodeType === 3 || util.isBreak(oNode))) {\n          const fNode = util.createElement(options.defaultTag);\n          fNode.appendChild(oNode);\n          oNode = fNode;\n        }\n\n        parentNode.insertBefore(oNode, parentNode === afterNode ? parentNode.lastChild : afterNode);\n      } catch (e) {\n        parentNode.appendChild(oNode);\n      } finally {\n        if ((util.isFormatElement(oNode) || util.isComponent(oNode)) && startCon === endCon) {\n          const cItem = util.getFormatElement(commonCon, null);\n\n          if (cItem && cItem.nodeType === 1 && util.isEmptyLine(cItem)) {\n            util.removeItem(cItem);\n          }\n        }\n\n        if (freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) {\n          oNode = this._setIntoFreeFormat(oNode);\n        }\n\n        if (!util.isComponent(oNode)) {\n          let offset = 1;\n\n          if (oNode.nodeType === 3) {\n            const previous = oNode.previousSibling;\n            const next = oNode.nextSibling;\n            const previousText = !previous || previous.nodeType === 1 || util.onlyZeroWidthSpace(previous) ? '' : previous.textContent;\n            const nextText = !next || next.nodeType === 1 || util.onlyZeroWidthSpace(next) ? '' : next.textContent;\n\n            if (previous && previousText.length > 0) {\n              oNode.textContent = previousText + oNode.textContent;\n              util.removeItem(previous);\n            }\n\n            if (next && next.length > 0) {\n              oNode.textContent += nextText;\n              util.removeItem(next);\n            }\n\n            const newRange = {\n              container: oNode,\n              startOffset: previousText.length,\n              endOffset: oNode.textContent.length - nextText.length\n            };\n            this.setRange(oNode, newRange.startOffset, oNode, newRange.endOffset);\n            return newRange;\n          } else if (!util.isBreak(oNode) && util.isFormatElement(parentNode)) {\n            let zeroWidth = null;\n\n            if (!oNode.previousSibling || util.isBreak(oNode.previousSibling)) {\n              zeroWidth = util.createTextNode(util.zeroWidthSpace);\n              oNode.parentNode.insertBefore(zeroWidth, oNode);\n            }\n\n            if (!oNode.nextSibling || util.isBreak(oNode.nextSibling)) {\n              zeroWidth = util.createTextNode(util.zeroWidthSpace);\n              oNode.parentNode.insertBefore(zeroWidth, oNode.nextSibling);\n            }\n\n            if (util._isIgnoreNodeChange(oNode)) {\n              oNode = oNode.nextSibling;\n              offset = 0;\n            }\n          }\n\n          this.setRange(oNode, offset, oNode, offset);\n        } // history stack\n\n\n        this.history.push(true);\n        return oNode;\n      }\n    },\n    _setIntoFreeFormat: function (oNode) {\n      const parentNode = oNode.parentNode;\n      let oNodeChildren, lastONode;\n\n      while (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) {\n        oNodeChildren = oNode.childNodes;\n        lastONode = null;\n\n        while (oNodeChildren[0]) {\n          lastONode = oNodeChildren[0];\n\n          if (util.isFormatElement(lastONode) || util.isRangeFormatElement(lastONode)) {\n            this._setIntoFreeFormat(lastONode);\n\n            if (!oNode.parentNode) break;\n            oNodeChildren = oNode.childNodes;\n            continue;\n          }\n\n          parentNode.insertBefore(lastONode, oNode);\n        }\n\n        if (oNode.childNodes.length === 0) util.removeItem(oNode);\n        oNode = util.createElement('BR');\n        parentNode.insertBefore(oNode, lastONode.nextSibling);\n      }\n\n      return oNode;\n    },\n\n    /**\r\n     * @description Delete the currently selected nodes and reset selection range\r\n     * Returns {container: \"the last element after deletion\", offset: \"offset\", prevContainer: \"previousElementSibling Of the deleted area\"}\r\n     * @returns {Object}\r\n     */\n    removeNode: function () {\n      this._resetRangeToTextNode();\n\n      const range = this.getRange();\n      let container,\n          offset = 0;\n      let startCon = range.startContainer;\n      let endCon = range.endContainer;\n      let startOff = range.startOffset;\n      let endOff = range.endOffset;\n      const commonCon = range.commonAncestorContainer.nodeType === 3 && range.commonAncestorContainer.parentNode === startCon.parentNode ? startCon.parentNode : range.commonAncestorContainer;\n\n      if (commonCon === startCon && commonCon === endCon) {\n        startCon = commonCon.children[startOff];\n        endCon = commonCon.children[endOff];\n        startOff = endOff = 0;\n      }\n\n      let beforeNode = null;\n      let afterNode = null;\n      const childNodes = util.getListChildNodes(commonCon, null);\n      let startIndex = util.getArrayIndex(childNodes, startCon);\n      let endIndex = util.getArrayIndex(childNodes, endCon);\n\n      if (childNodes.length > 0 && startIndex > -1 && endIndex > -1) {\n        for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\n          if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\n            startIndex = i;\n            startNode = startNode.parentNode;\n          }\n        }\n\n        for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\n          if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\n            childNodes.splice(i, 1);\n            endNode = endNode.parentNode;\n            --endIndex;\n          }\n        }\n      } else {\n        if (childNodes.length === 0) {\n          if (util.isFormatElement(commonCon) || util.isRangeFormatElement(commonCon) || util.isWysiwygDiv(commonCon) || util.isBreak(commonCon) || util.isMedia(commonCon)) {\n            return {\n              container: commonCon,\n              offset: 0\n            };\n          } else if (commonCon.nodeType === 3) {\n            return {\n              container: commonCon,\n              offset: endOff\n            };\n          }\n\n          childNodes.push(commonCon);\n          startCon = endCon = commonCon;\n        } else {\n          startCon = endCon = childNodes[0];\n\n          if (util.isBreak(startCon) || util.onlyZeroWidthSpace(startCon)) {\n            return {\n              container: util.isMedia(commonCon) ? commonCon : startCon,\n              offset: 0\n            };\n          }\n        }\n\n        startIndex = endIndex = 0;\n      }\n\n      function remove(item) {\n        const format = util.getFormatElement(item, null);\n        util.removeItem(item);\n\n        if (util.isListCell(format)) {\n          const list = util.getArrayItem(format.children, util.isList, false);\n\n          if (list) {\n            const child = list.firstElementChild;\n            const children = child.childNodes;\n\n            while (children[0]) {\n              format.insertBefore(children[0], list);\n            }\n\n            util.removeItemAllParents(child, null, null);\n          }\n        }\n      }\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        const item = childNodes[i];\n\n        if (item.length === 0 || item.nodeType === 3 && item.data === undefined) {\n          remove(item);\n          continue;\n        }\n\n        if (item === startCon) {\n          if (startCon.nodeType === 1) {\n            if (util.isComponent(startCon)) continue;else beforeNode = util.createTextNode(startCon.textContent);\n          } else {\n            if (item === endCon) {\n              beforeNode = util.createTextNode(startCon.substringData(0, startOff) + endCon.substringData(endOff, endCon.length - endOff));\n              offset = startOff;\n            } else {\n              beforeNode = util.createTextNode(startCon.substringData(0, startOff));\n            }\n          }\n\n          if (beforeNode.length > 0) {\n            startCon.data = beforeNode.data;\n          } else {\n            remove(startCon);\n          }\n\n          if (item === endCon) break;\n          continue;\n        }\n\n        if (item === endCon) {\n          if (endCon.nodeType === 1) {\n            if (util.isComponent(endCon)) continue;else afterNode = util.createTextNode(endCon.textContent);\n          } else {\n            afterNode = util.createTextNode(endCon.substringData(endOff, endCon.length - endOff));\n          }\n\n          if (afterNode.length > 0) {\n            endCon.data = afterNode.data;\n          } else {\n            remove(endCon);\n          }\n\n          continue;\n        }\n\n        remove(item);\n      }\n\n      container = endCon && endCon.parentNode ? endCon : startCon && startCon.parentNode ? startCon : range.endContainer || range.startContainer;\n\n      if (!util.isWysiwygDiv(container) && container.childNodes.length === 0) {\n        const rc = util.removeItemAllParents(container, function (current) {\n          if (this.isComponent(current)) return false;\n          const text = current.textContent;\n          return text.length === 0 || /^(\\n|\\u200B)+$/.test(text);\n        }.bind(util), null);\n        if (rc) container = rc.sc || rc.ec || context.element.wysiwyg;\n      } // set range\n\n\n      this.setRange(container, offset, container, offset); // history stack\n\n      this.history.push(true);\n      return {\n        container: container,\n        offset: offset,\n        prevContainer: startCon && startCon.parentNode ? startCon : null\n      };\n    },\n\n    /**\r\n     * @description Appended all selected format Element to the argument element and insert\r\n     * @param {Element} rangeElement Element of wrap the arguments (BLOCKQUOTE...)\r\n     */\n    applyRangeFormatElement: function (rangeElement) {\n      this.getRange_addLine(this.getRange(), null);\n      const rangeLines = this.getSelectedElementsAndComponents(false);\n      if (!rangeLines || rangeLines.length === 0) return;\n\n      linesLoop: for (let i = 0, len = rangeLines.length, line, nested, fEl, lEl, f, l; i < len; i++) {\n        line = rangeLines[i];\n        if (!util.isListCell(line)) continue;\n        nested = line.lastElementChild;\n\n        if (nested && util.isListCell(line.nextElementSibling) && rangeLines.indexOf(line.nextElementSibling) > -1) {\n          lEl = nested.lastElementChild;\n\n          if (rangeLines.indexOf(lEl) > -1) {\n            let list = null;\n\n            while (list = lEl.lastElementChild) {\n              if (util.isList(list)) {\n                if (rangeLines.indexOf(list.lastElementChild) > -1) {\n                  lEl = list.lastElementChild;\n                } else {\n                  continue linesLoop;\n                }\n              }\n            }\n\n            fEl = nested.firstElementChild;\n            f = rangeLines.indexOf(fEl);\n            l = rangeLines.indexOf(lEl);\n            rangeLines.splice(f, l - f + 1);\n            len = rangeLines.length;\n            continue;\n          }\n        }\n      }\n\n      let last = rangeLines[rangeLines.length - 1];\n      let standTag, beforeTag, pElement;\n\n      if (util.isRangeFormatElement(last) || util.isFormatElement(last)) {\n        standTag = last;\n      } else {\n        standTag = util.getRangeFormatElement(last, null) || util.getFormatElement(last, null);\n      }\n\n      if (util.isCell(standTag)) {\n        beforeTag = null;\n        pElement = standTag;\n      } else {\n        beforeTag = standTag.nextSibling;\n        pElement = standTag.parentNode;\n      }\n\n      let parentDepth = util.getElementDepth(standTag);\n      let listParent = null;\n      const lineArr = [];\n\n      const removeItems = function (parent, origin, before) {\n        let cc = null;\n\n        if (parent !== origin && !util.isTable(origin)) {\n          if (origin && util.getElementDepth(parent) === util.getElementDepth(origin)) return before;\n          cc = util.removeItemAllParents(origin, null, parent);\n        }\n\n        return cc ? cc.ec : before;\n      };\n\n      for (let i = 0, len = rangeLines.length, line, originParent, depth, before, nextLine, nextList, nested; i < len; i++) {\n        line = rangeLines[i];\n        originParent = line.parentNode;\n        if (!originParent || rangeElement.contains(originParent)) continue;\n        depth = util.getElementDepth(line);\n\n        if (util.isList(originParent)) {\n          if (listParent === null) {\n            if (nextList) {\n              listParent = nextList;\n              nested = true;\n              nextList = null;\n            } else {\n              listParent = originParent.cloneNode(false);\n            }\n          }\n\n          lineArr.push(line);\n          nextLine = rangeLines[i + 1];\n\n          if (i === len - 1 || nextLine && nextLine.parentNode !== originParent) {\n            // nested list\n            if (nextLine && line.contains(nextLine.parentNode)) {\n              nextList = nextLine.parentNode.cloneNode(false);\n            }\n\n            let list = originParent.parentNode,\n                p;\n\n            while (util.isList(list)) {\n              p = util.createElement(list.nodeName);\n              p.appendChild(listParent);\n              listParent = p;\n              list = list.parentNode;\n            }\n\n            const edge = this.detachRangeFormatElement(originParent, lineArr, null, true, true);\n\n            if (parentDepth >= depth) {\n              parentDepth = depth;\n              pElement = edge.cc;\n              beforeTag = removeItems(pElement, originParent, edge.ec);\n              if (beforeTag) pElement = beforeTag.parentNode;\n            } else if (pElement === edge.cc) {\n              beforeTag = edge.ec;\n            }\n\n            if (pElement !== edge.cc) {\n              before = removeItems(pElement, edge.cc, before);\n              if (before !== undefined) beforeTag = before;else beforeTag = edge.cc;\n            }\n\n            for (let c = 0, cLen = edge.removeArray.length; c < cLen; c++) {\n              listParent.appendChild(edge.removeArray[c]);\n            }\n\n            if (!nested) rangeElement.appendChild(listParent);\n            if (nextList) edge.removeArray[edge.removeArray.length - 1].appendChild(nextList);\n            listParent = null;\n            nested = false;\n          }\n        } else {\n          if (parentDepth >= depth) {\n            parentDepth = depth;\n            pElement = originParent;\n            beforeTag = line.nextSibling;\n          }\n\n          rangeElement.appendChild(line);\n\n          if (pElement !== originParent) {\n            before = removeItems(pElement, originParent);\n            if (before !== undefined) beforeTag = before;\n          }\n        }\n      }\n\n      this.effectNode = null;\n      util.mergeSameTags(rangeElement, null, false);\n      util.mergeNestedTags(rangeElement, function (current) {\n        return this.isList(current);\n      }.bind(util)); // Nested list\n\n      if (beforeTag && util.getElementDepth(beforeTag) > 0 && (util.isList(beforeTag.parentNode) || util.isList(beforeTag.parentNode.parentNode))) {\n        const depthFormat = util.getParentElement(beforeTag, function (current) {\n          return this.isRangeFormatElement(current) && !this.isList(current);\n        }.bind(util));\n        const splitRange = util.splitElement(beforeTag, null, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n        splitRange.parentNode.insertBefore(rangeElement, splitRange);\n      } else {\n        // basic\n        pElement.insertBefore(rangeElement, beforeTag);\n        removeItems(rangeElement, beforeTag);\n      }\n\n      const edge = util.getEdgeChildNodes(rangeElement.firstElementChild, rangeElement.lastElementChild);\n\n      if (rangeLines.length > 1) {\n        this.setRange(edge.sc, 0, edge.ec, edge.ec.textContent.length);\n      } else {\n        this.setRange(edge.ec, edge.ec.textContent.length, edge.ec, edge.ec.textContent.length);\n      } // history stack\n\n\n      this.history.push(false);\n    },\n\n    /**\r\n     * @description The elements of the \"selectedFormats\" array are detached from the \"rangeElement\" element. (\"LI\" tags are converted to \"P\" tags)\r\n     * When \"selectedFormats\" is null, all elements are detached and return {cc: parentNode, sc: nextSibling, ec: previousSibling, removeArray: [Array of removed elements]}.\r\n     * @param {Element} rangeElement Range format element (PRE, BLOCKQUOTE, OL, UL...)\r\n     * @param {Array|null} selectedFormats Array of format elements (P, DIV, LI...) to remove.\r\n     * If null, Applies to all elements and return {cc: parentNode, sc: nextSibling, ec: previousSibling}\r\n     * @param {Element|null} newRangeElement The node(rangeElement) to replace the currently wrapped node.\r\n     * @param {Boolean} remove If true, deleted without detached.\r\n     * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n     * @returns {Object}\r\n     */\n    detachRangeFormatElement: function (rangeElement, selectedFormats, newRangeElement, remove, notHistoryPush) {\n      const range = this.getRange();\n      const so = range.startOffset;\n      const eo = range.endOffset;\n      let children = util.getListChildNodes(rangeElement, function (current) {\n        return current.parentNode === rangeElement;\n      });\n      let parent = rangeElement.parentNode;\n      let firstNode = null;\n      let lastNode = null;\n      let rangeEl = rangeElement.cloneNode(false);\n      const removeArray = [];\n      const newList = util.isList(newRangeElement);\n      let insertedNew = false;\n      let reset = false;\n      let moveComplete = false;\n\n      function appendNode(parent, insNode, sibling, originNode) {\n        if (util.onlyZeroWidthSpace(insNode)) insNode.innerHTML = util.zeroWidthSpace;\n\n        if (insNode.nodeType === 3) {\n          parent.insertBefore(insNode, sibling);\n          return insNode;\n        }\n\n        const insChildren = (moveComplete ? insNode : originNode).childNodes;\n        let format = insNode.cloneNode(false);\n        let first = null;\n        let c = null;\n\n        while (insChildren[0]) {\n          c = insChildren[0];\n\n          if (util._notTextNode(c) && !util.isBreak(c) && !util.isListCell(format)) {\n            if (format.childNodes.length > 0) {\n              if (!first) first = format;\n              parent.insertBefore(format, sibling);\n              format = insNode.cloneNode(false);\n            }\n\n            parent.insertBefore(c, sibling);\n            if (!first) first = c;\n          } else {\n            format.appendChild(c);\n          }\n        }\n\n        if (format.childNodes.length > 0) {\n          if (util.isListCell(parent) && util.isListCell(format) && util.isList(sibling)) {\n            if (newList) {\n              first = sibling;\n\n              while (sibling) {\n                format.appendChild(sibling);\n                sibling = sibling.nextSibling;\n              }\n\n              parent.parentNode.insertBefore(format, parent.nextElementSibling);\n            } else {\n              const originNext = originNode.nextElementSibling;\n              const detachRange = util.detachNestedList(originNode, false);\n\n              if (rangeElement !== detachRange || originNext !== originNode.nextElementSibling) {\n                const fChildren = format.childNodes;\n\n                while (fChildren[0]) {\n                  originNode.appendChild(fChildren[0]);\n                }\n\n                rangeElement = detachRange;\n                reset = true;\n              }\n            }\n          } else {\n            parent.insertBefore(format, sibling);\n          }\n\n          if (!first) first = format;\n        }\n\n        return first;\n      } // detach loop\n\n\n      for (let i = 0, len = children.length, insNode, lineIndex, next; i < len; i++) {\n        insNode = children[i];\n        if (insNode.nodeType === 3 && util.isList(rangeEl)) continue;\n        moveComplete = false;\n\n        if (remove && i === 0) {\n          if (!selectedFormats || selectedFormats.length === len || selectedFormats[0] === insNode) {\n            firstNode = rangeElement.previousSibling;\n          } else {\n            firstNode = rangeEl;\n          }\n        }\n\n        if (selectedFormats) lineIndex = selectedFormats.indexOf(insNode);\n\n        if (selectedFormats && lineIndex === -1) {\n          if (!rangeEl) rangeEl = rangeElement.cloneNode(false);\n          rangeEl.appendChild(insNode);\n        } else {\n          if (selectedFormats) next = selectedFormats[lineIndex + 1];\n\n          if (rangeEl && rangeEl.children.length > 0) {\n            parent.insertBefore(rangeEl, rangeElement);\n            rangeEl = null;\n          }\n\n          if (!newList && util.isListCell(insNode)) {\n            if (next && util.getElementDepth(insNode) !== util.getElementDepth(next) && (util.isListCell(parent) || util.getArrayItem(insNode.children, util.isList, false))) {\n              const insNext = insNode.nextElementSibling;\n              const detachRange = util.detachNestedList(insNode, false);\n\n              if (rangeElement !== detachRange || insNext !== insNode.nextElementSibling) {\n                rangeElement = detachRange;\n                reset = true;\n              }\n            } else {\n              const inner = insNode;\n              insNode = util.createElement(remove ? inner.nodeName : util.isList(rangeElement.parentNode) || util.isListCell(rangeElement.parentNode) ? 'LI' : util.isCell(rangeElement.parentNode) ? 'DIV' : options.defaultTag);\n              const isCell = util.isListCell(insNode);\n              const innerChildren = inner.childNodes;\n\n              while (innerChildren[0]) {\n                if (util.isList(innerChildren[0]) && !isCell) break;\n                insNode.appendChild(innerChildren[0]);\n              }\n\n              util.copyFormatAttributes(insNode, inner);\n              moveComplete = true;\n            }\n          } else {\n            insNode = insNode.cloneNode(false);\n          }\n\n          if (!reset) {\n            if (!remove) {\n              if (newRangeElement) {\n                if (!insertedNew) {\n                  parent.insertBefore(newRangeElement, rangeElement);\n                  insertedNew = true;\n                }\n\n                insNode = appendNode(newRangeElement, insNode, null, children[i]);\n              } else {\n                insNode = appendNode(parent, insNode, rangeElement, children[i]);\n              }\n\n              if (!reset) {\n                if (selectedFormats) {\n                  lastNode = insNode;\n\n                  if (!firstNode) {\n                    firstNode = insNode;\n                  }\n                } else if (!firstNode) {\n                  firstNode = lastNode = insNode;\n                }\n              }\n            } else {\n              removeArray.push(insNode);\n              util.removeItem(children[i]);\n            }\n\n            if (reset) {\n              reset = moveComplete = false;\n              children = util.getListChildNodes(rangeElement, function (current) {\n                return current.parentNode === rangeElement;\n              });\n              rangeEl = rangeElement.cloneNode(false);\n              parent = rangeElement.parentNode;\n              i = -1;\n              len = children.length;\n              continue;\n            }\n          }\n        }\n      }\n\n      const rangeParent = rangeElement.parentNode;\n      let rangeRight = rangeElement.nextSibling;\n\n      if (rangeEl && rangeEl.children.length > 0) {\n        rangeParent.insertBefore(rangeEl, rangeRight);\n      }\n\n      if (newRangeElement) firstNode = newRangeElement.previousSibling;else if (!firstNode) firstNode = rangeElement.previousSibling;\n      rangeRight = rangeElement.nextSibling !== rangeEl ? rangeElement.nextSibling : rangeEl ? rangeEl.nextSibling : null;\n\n      if (rangeElement.children.length === 0 || rangeElement.textContent.length === 0) {\n        util.removeItem(rangeElement);\n      } else {\n        util.removeEmptyNode(rangeElement, null);\n      }\n\n      let edge = null;\n\n      if (remove) {\n        edge = {\n          cc: rangeParent,\n          sc: firstNode,\n          ec: rangeRight,\n          removeArray: removeArray\n        };\n      } else {\n        if (!firstNode) firstNode = lastNode;\n        if (!lastNode) lastNode = firstNode;\n        const childEdge = util.getEdgeChildNodes(firstNode, lastNode.parentNode ? firstNode : lastNode);\n        edge = {\n          cc: (childEdge.sc || childEdge.ec).parentNode,\n          sc: childEdge.sc,\n          ec: childEdge.ec\n        };\n      }\n\n      this.effectNode = null;\n      if (notHistoryPush) return edge;\n\n      if (!remove && edge) {\n        if (!selectedFormats) {\n          this.setRange(edge.sc, 0, edge.sc, 0);\n        } else {\n          this.setRange(edge.sc, so, edge.ec, eo);\n        }\n      } // history stack\n\n\n      this.history.push(false);\n    },\n\n    /**\r\n     * @description \"selectedFormats\" array are detached from the list element.\r\n     * The return value is applied when the first and last lines of \"selectedFormats\" are \"LI\" respectively.\r\n     * @param {Array} selectedFormats Array of format elements (LI, P...) to remove.\r\n     * @param {Boolean} remove If true, deleted without detached.\r\n     * @returns {Object} {sc: <LI>, ec: <LI>}.\r\n     */\n    detachList: function (selectedFormats, remove) {\n      let rangeArr = {};\n      let listFirst = false;\n      let listLast = false;\n      let first = null;\n      let last = null;\n\n      const passComponent = function (current) {\n        return !this.isComponent(current);\n      }.bind(util);\n\n      for (let i = 0, len = selectedFormats.length, r, o, lastIndex, isList; i < len; i++) {\n        lastIndex = i === len - 1;\n        o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n        isList = util.isList(o);\n\n        if (!r && isList) {\n          r = o;\n          rangeArr = {\n            r: r,\n            f: [util.getParentElement(selectedFormats[i], 'LI')]\n          };\n          if (i === 0) listFirst = true;\n        } else if (r && isList) {\n          if (r !== o) {\n            const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\n            o = selectedFormats[i].parentNode;\n\n            if (listFirst) {\n              first = edge.sc;\n              listFirst = false;\n            }\n\n            if (lastIndex) last = edge.ec;\n\n            if (isList) {\n              r = o;\n              rangeArr = {\n                r: r,\n                f: [util.getParentElement(selectedFormats[i], 'LI')]\n              };\n              if (lastIndex) listLast = true;\n            } else {\n              r = null;\n            }\n          } else {\n            rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n            if (lastIndex) listLast = true;\n          }\n        }\n\n        if (lastIndex && util.isList(r)) {\n          const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\n          if (listLast || len === 1) last = edge.ec;\n          if (listFirst) first = edge.sc || last;\n        }\n      }\n\n      return {\n        sc: first,\n        ec: last\n      };\n    },\n\n    /**\r\n     * @description Add, update, and delete nodes from selected text.\r\n     * 1. If there is a node in the \"appendNode\" argument, a node with the same tags and attributes as \"appendNode\" is added to the selection text.\r\n     * 2. If it is in the same tag, only the tag's attributes are changed without adding a tag.\r\n     * 3. If the \"appendNode\" argument is null, the node of the selection is update or remove without adding a new node.\r\n     * 4. The same style as the style attribute of the \"styleArray\" argument is deleted.\r\n     *    (Styles should be put with attribute names from css. [\"background-color\"])\r\n     * 5. The same class name as the class attribute of the \"styleArray\" argument is deleted.\r\n     *    (The class name is preceded by \".\" [\".className\"])\r\n     * 6. Use a list of styles and classes of \"appendNode\" in \"styleArray\" to avoid duplicate property values.\r\n     * 7. If a node with all styles and classes removed has the same tag name as \"appendNode\" or \"removeNodeArray\", or \"appendNode\" is null, that node is deleted.\r\n     * 8. Regardless of the style and class of the node, the tag with the same name as the \"removeNodeArray\" argument value is deleted.\r\n     * 9. If the \"strictRemove\" argument is true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n     *10. It won't work if the parent node has the same class and same value style.\r\n     *    However, if there is a value in \"removeNodeArray\", it works and the text node is separated even if there is no node to replace.\r\n     * @param {Element|null} appendNode The element to be added to the selection. If it is null, only delete the node.\r\n     * @param {Array|null} styleArray The style or className attribute name Array to check (['font-size'], ['.className'], ['font-family', 'color', '.className']...])\r\n     * @param {Array|null} removeNodeArray An array of node names to remove types from, remove all formats when \"appendNode\" is null and there is an empty array or null value. (['span'], ['strong', 'em'] ...])\r\n     * @param {Boolean|null} strictRemove If true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n     */\n    nodeChange: function (appendNode, styleArray, removeNodeArray, strictRemove) {\n      this._resetRangeToTextNode();\n\n      let range = this.getRange_addLine(this.getRange(), null);\n      styleArray = styleArray && styleArray.length > 0 ? styleArray : false;\n      removeNodeArray = removeNodeArray && removeNodeArray.length > 0 ? removeNodeArray : false;\n      const isRemoveNode = !appendNode;\n      const isRemoveFormat = isRemoveNode && !removeNodeArray && !styleArray;\n      let startCon = range.startContainer;\n      let startOff = range.startOffset;\n      let endCon = range.endContainer;\n      let endOff = range.endOffset;\n\n      if (isRemoveFormat && range.collapsed && util.isFormatElement(startCon.parentNode) && util.isFormatElement(endCon.parentNode) || startCon === endCon && startCon.nodeType === 1 && util.isNonEditable(startCon)) {\n        return;\n      }\n\n      if (range.collapsed && !isRemoveFormat) {\n        if (startCon.nodeType === 1 && !util.isBreak(startCon) && !util.isComponent(startCon)) {\n          let afterNode = null;\n          const focusNode = startCon.childNodes[startOff];\n\n          if (focusNode) {\n            if (!focusNode.nextSibling) {\n              afterNode = null;\n            } else {\n              afterNode = util.isBreak(focusNode) ? focusNode : focusNode.nextSibling;\n            }\n          }\n\n          const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n          startCon.insertBefore(zeroWidth, afterNode);\n          this.setRange(zeroWidth, 1, zeroWidth, 1);\n          range = this.getRange();\n          startCon = range.startContainer;\n          startOff = range.startOffset;\n          endCon = range.endContainer;\n          endOff = range.endOffset;\n        }\n      }\n\n      if (util.isFormatElement(startCon)) {\n        startCon = startCon.childNodes[startOff] || startCon.firstChild;\n        startOff = 0;\n      }\n\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon.lastChild;\n        endOff = endCon.textContent.length;\n      }\n\n      if (isRemoveNode) {\n        appendNode = util.createElement('DIV');\n      }\n\n      const wRegExp = _w.RegExp;\n      const newNodeName = appendNode.nodeName;\n      /* checked same style property */\n\n      if (!isRemoveFormat && startCon === endCon && !removeNodeArray && appendNode) {\n        let sNode = startCon;\n        let checkCnt = 0;\n        const checkAttrs = [];\n        const checkStyles = appendNode.style;\n\n        for (let i = 0, len = checkStyles.length; i < len; i++) {\n          checkAttrs.push(checkStyles[i]);\n        }\n\n        const ckeckClasses = appendNode.classList;\n\n        for (let i = 0, len = ckeckClasses.length; i < len; i++) {\n          checkAttrs.push('.' + ckeckClasses[i]);\n        }\n\n        if (checkAttrs.length > 0) {\n          while (!util.isFormatElement(sNode) && !util.isWysiwygDiv(sNode)) {\n            for (let i = 0; i < checkAttrs.length; i++) {\n              if (sNode.nodeType === 1) {\n                const s = checkAttrs[i];\n                const classReg = /^\\./.test(s) ? new wRegExp('\\\\s*' + s.replace(/^\\./, '') + '(\\\\s+|$)', 'ig') : false;\n                const styleCheck = isRemoveNode ? !!sNode.style[s] : !!sNode.style[s] && !!appendNode.style[s] && sNode.style[s] === appendNode.style[s];\n                const classCheck = classReg === false ? false : isRemoveNode ? !!sNode.className.match(classReg) : !!sNode.className.match(classReg) && !!appendNode.className.match(classReg);\n\n                if (styleCheck || classCheck) {\n                  checkCnt++;\n                }\n              }\n            }\n\n            sNode = sNode.parentNode;\n          }\n\n          if (checkCnt >= checkAttrs.length) return;\n        }\n      }\n\n      let start = {},\n          end = {};\n      let newNode,\n          styleRegExp = '',\n          classRegExp = '',\n          removeNodeRegExp = '';\n\n      if (styleArray) {\n        for (let i = 0, len = styleArray.length, s; i < len; i++) {\n          s = styleArray[i];\n\n          if (/^\\./.test(s)) {\n            classRegExp += (classRegExp ? '|' : '\\\\s*(?:') + s.replace(/^\\./, '');\n          } else {\n            styleRegExp += (styleRegExp ? '|' : '(?:;|^|\\\\s)(?:') + s;\n          }\n        }\n\n        if (styleRegExp) {\n          styleRegExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\n          styleRegExp = new wRegExp(styleRegExp, 'ig');\n        }\n\n        if (classRegExp) {\n          classRegExp += ')(?=\\\\s+|$)';\n          classRegExp = new wRegExp(classRegExp, 'ig');\n        }\n      }\n\n      if (removeNodeArray) {\n        removeNodeRegExp = '^(?:' + removeNodeArray[0];\n\n        for (let i = 1; i < removeNodeArray.length; i++) {\n          removeNodeRegExp += '|' + removeNodeArray[i];\n        }\n\n        removeNodeRegExp += ')$';\n        removeNodeRegExp = new wRegExp(removeNodeRegExp, 'i');\n      }\n      /** validation check function*/\n\n\n      const wBoolean = _w.Boolean;\n      const _removeCheck = {\n        v: false\n      };\n\n      const validation = function (checkNode) {\n        const vNode = checkNode.cloneNode(false); // all path\n\n        if (vNode.nodeType === 3 || util.isBreak(vNode)) return vNode; // all remove\n\n        if (isRemoveFormat) return null; // remove node check\n\n        const tagRemove = !removeNodeRegExp && isRemoveNode || removeNodeRegExp && removeNodeRegExp.test(vNode.nodeName); // tag remove\n\n        if (tagRemove && !strictRemove) {\n          _removeCheck.v = true;\n          return null;\n        } // style regexp\n\n\n        const originStyle = vNode.style.cssText;\n        let style = '';\n\n        if (styleRegExp && originStyle.length > 0) {\n          style = originStyle.replace(styleRegExp, '').trim();\n          if (style !== originStyle) _removeCheck.v = true;\n        } // class check\n\n\n        const originClasses = vNode.className;\n        let classes = '';\n\n        if (classRegExp && originClasses.length > 0) {\n          classes = originClasses.replace(classRegExp, '').trim();\n          if (classes !== originClasses) _removeCheck.v = true;\n        } // remove only\n\n\n        if (isRemoveNode) {\n          if ((classRegExp || !originClasses) && (styleRegExp || !originStyle) && !style && !classes && tagRemove) {\n            _removeCheck.v = true;\n            return null;\n          }\n        } // change\n\n\n        if (style || classes || vNode.nodeName !== newNodeName || wBoolean(styleRegExp) !== wBoolean(originStyle) || wBoolean(classRegExp) !== wBoolean(originClasses)) {\n          if (styleRegExp && originStyle.length > 0) vNode.style.cssText = style;\n\n          if (!vNode.style.cssText) {\n            vNode.removeAttribute('style');\n          }\n\n          if (classRegExp && originClasses.length > 0) vNode.className = classes.trim();\n\n          if (!vNode.className.trim()) {\n            vNode.removeAttribute('class');\n          }\n\n          if (!vNode.style.cssText && !vNode.className && (vNode.nodeName === newNodeName || tagRemove)) {\n            _removeCheck.v = true;\n            return null;\n          }\n\n          return vNode;\n        }\n\n        _removeCheck.v = true;\n        return null;\n      }; // get line nodes\n\n\n      const lineNodes = this.getSelectedElements(null);\n      range = this.getRange();\n      startCon = range.startContainer;\n      startOff = range.startOffset;\n      endCon = range.endContainer;\n      endOff = range.endOffset;\n\n      if (!util.getFormatElement(startCon, null)) {\n        startCon = util.getChildElement(lineNodes[0], function (current) {\n          return current.nodeType === 3;\n        }, false);\n        startOff = 0;\n      }\n\n      if (!util.getFormatElement(endCon, null)) {\n        endCon = util.getChildElement(lineNodes[lineNodes.length - 1], function (current) {\n          return current.nodeType === 3;\n        }, false);\n        endOff = endCon.textContent.length;\n      }\n\n      const oneLine = util.getFormatElement(startCon, null) === util.getFormatElement(endCon, null);\n      const endLength = lineNodes.length - (oneLine ? 0 : 1); // node Changes\n\n      newNode = appendNode.cloneNode(false);\n\n      const isRemoveAnchor = isRemoveFormat || isRemoveNode && function (arr) {\n        for (let n = 0, len = arr.length; n < len; n++) {\n          if (util._isMaintainedNode(arr[n]) || util._isSizeNode(arr[n])) return true;\n        }\n\n        return false;\n      }(removeNodeArray);\n\n      const isSizeNode = isRemoveNode || util._isSizeNode(newNode);\n\n      const _getMaintainedNode = this._util_getMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\n\n      const _isMaintainedNode = this._util_isMaintainedNode.bind(util, isRemoveAnchor, isSizeNode); // one line\n\n\n      if (oneLine) {\n        const newRange = this._nodeChange_oneLine(lineNodes[0], newNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, range.collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode);\n\n        start.container = newRange.startContainer;\n        start.offset = newRange.startOffset;\n        end.container = newRange.endContainer;\n        end.offset = newRange.endOffset;\n\n        if (start.container === end.container && util.onlyZeroWidthSpace(start.container)) {\n          start.offset = end.offset = 1;\n        }\n\n        this._setCommonListStyle(newRange.ancestor, null);\n      } else {\n        // multi line \n        // end\n        if (endLength > 0) {\n          newNode = appendNode.cloneNode(false);\n          end = this._nodeChange_endLine(lineNodes[endLength], newNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode);\n        } // mid\n\n\n        for (let i = endLength - 1, newRange; i > 0; i--) {\n          newNode = appendNode.cloneNode(false);\n          newRange = this._nodeChange_middleLine(lineNodes[i], newNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, end.container);\n\n          if (newRange.endContainer && newRange.ancestor.contains(newRange.endContainer)) {\n            end.ancestor = null;\n            end.container = newRange.endContainer;\n          }\n\n          this._setCommonListStyle(newRange.ancestor, null);\n        } // start\n\n\n        newNode = appendNode.cloneNode(false);\n        start = this._nodeChange_startLine(lineNodes[0], newNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, end.container);\n\n        if (start.endContainer) {\n          end.ancestor = null;\n          end.container = start.endContainer;\n        }\n\n        if (endLength <= 0) {\n          end = start;\n        } else if (!end.container) {\n          end.ancestor = null;\n          end.container = start.container;\n          end.offset = start.container.textContent.length;\n        }\n\n        this._setCommonListStyle(start.ancestor, null);\n\n        this._setCommonListStyle(end.ancestor || util.getFormatElement(end.container), null);\n      } // set range\n\n\n      this.controllersOff();\n      this.setRange(start.container, start.offset, end.container, end.offset); // history stack\n\n      this.history.push(false);\n    },\n\n    /**\r\n     * @description If certain styles are applied to all child nodes of the list cell, the style of the list cell is also changed. (bold, color, size)\r\n     * @param {Element} el List cell element. <li>\r\n     * @param {Element|null} child Variable for recursive call. (\"null\" on the first call)\r\n     * @private\r\n     */\n    _setCommonListStyle: function (el, child) {\n      if (!util.isListCell(el)) return;\n      if (!child) el.removeAttribute('style');\n      const children = util.getArrayItem((child || el).childNodes, function (current) {\n        return !util.isBreak(current);\n      }, true);\n\n      if (children[0] && children.length === 1) {\n        child = children[0];\n        if (!child || child.nodeType !== 1) return;\n        const childStyle = child.style;\n        const elStyle = el.style; // bold, italic\n\n        if (options._textTagsMap[child.nodeName.toLowerCase()] === this._defaultCommand.bold.toLowerCase()) elStyle.fontWeight = 'bold'; // bold\n        else if (childStyle.fontWeight) elStyle.fontWeight = childStyle.fontWeight;\n        if (options._textTagsMap[child.nodeName.toLowerCase()] === this._defaultCommand.italic.toLowerCase()) elStyle.fontStyle = 'italic'; // italic\n        else if (childStyle.fontStyle) elStyle.fontStyle = childStyle.fontStyle; // styles\n\n        if (childStyle.color) elStyle.color = childStyle.color; // color\n\n        if (childStyle.fontSize) elStyle.fontSize = childStyle.fontSize; // size\n\n        this._setCommonListStyle(el, child);\n      }\n    },\n\n    /**\r\n     * @description Strip remove node\r\n     * @param {Node} removeNode The remove node\r\n     * @private\r\n     */\n    _stripRemoveNode: function (removeNode) {\n      const element = removeNode.parentNode;\n      if (!removeNode || removeNode.nodeType === 3 || !element) return;\n      const children = removeNode.childNodes;\n\n      while (children[0]) {\n        element.insertBefore(children[0], removeNode);\n      }\n\n      element.removeChild(removeNode);\n    },\n\n    /**\r\n     * @description Return the parent maintained tag. (bind and use a util object)\r\n     * @param {Element} element Element\r\n     * @returns {Element}\r\n     * @private\r\n     */\n    _util_getMaintainedNode: function (_isRemove, _isSizeNode, element) {\n      if (!element || _isRemove) return null;\n      return this.getParentElement(element, this._isMaintainedNode.bind(this)) || (!_isSizeNode ? this.getParentElement(element, this._isSizeNode.bind(this)) : null);\n    },\n\n    /**\r\n     * @description Check if element is a tag that should be persisted. (bind and use a util object)\r\n     * @param {Element} element Element\r\n     * @returns {Element}\r\n     * @private\r\n     */\n    _util_isMaintainedNode: function (_isRemove, _isSizeNode, element) {\n      if (!element || _isRemove || element.nodeType !== 1) return false;\n\n      const anchor = this._isMaintainedNode(element);\n\n      return this.getParentElement(element, this._isMaintainedNode.bind(this)) ? anchor : anchor || (!_isSizeNode ? this._isSizeNode(element) : false);\n    },\n\n    /**\r\n     * @description wraps text nodes of line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @param {Boolean} collapsed range.collapsed\r\n     * @returns {{ancestor: *, startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n     * @private\r\n     */\n    _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\n      // not add tag\n      let parentCon = startCon.parentNode;\n\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n\n      if (!isRemoveNode && parentCon === endCon.parentNode && parentCon.nodeName === newInnerNode.nodeName) {\n        if (util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff)) && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\n          const children = parentCon.childNodes;\n          let sameTag = true;\n\n          for (let i = 0, len = children.length, c, s, e, z; i < len; i++) {\n            c = children[i];\n            z = !util.onlyZeroWidthSpace(c);\n\n            if (c === startCon) {\n              s = true;\n              continue;\n            }\n\n            if (c === endCon) {\n              e = true;\n              continue;\n            }\n\n            if (!s && z || s && e && z) {\n              sameTag = false;\n              break;\n            }\n          }\n\n          if (sameTag) {\n            util.copyTagAttributes(parentCon, newInnerNode);\n            return {\n              startContainer: startCon,\n              startOffset: startOff,\n              endContainer: endCon,\n              endOffset: endOff\n            };\n          }\n        }\n      } // add tag\n\n\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      const isSameNode = startCon === endCon;\n      let startContainer = startCon;\n      let startOffset = startOff;\n      let endContainer = endCon;\n      let endOffset = endOff;\n      let startPass = false;\n      let endPass = false;\n      let pCurrent, newNode, appendNode, cssText, anchorNode;\n      const wRegExp = _w.RegExp;\n\n      function checkCss(vNode) {\n        const regExp = new wRegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\n        let style = '';\n\n        if (regExp && vNode.style.cssText.length > 0) {\n          style = regExp.test(vNode.style.cssText);\n        }\n\n        return !style;\n      }\n\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n\n        for (let i = 0, len = childNodes.length, vNode; i < len; i++) {\n          let child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n          let cloneNode; // startContainer\n\n          if (!startPass && child === startContainer) {\n            let line = pNode;\n            anchorNode = _getMaintainedNode(child);\n            const prevNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\n            const textNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, isSameNode ? endOffset >= startOffset ? endOffset - startOffset : startContainer.data.length - startOffset : startContainer.data.length - startOffset));\n\n            if (anchorNode) {\n              const a = _getMaintainedNode(ancestor);\n\n              if (a && a.parentNode !== line) {\n                let m = a;\n                let p = null;\n\n                while (m.parentNode !== line) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n\n                m.parentNode.appendChild(a);\n              }\n\n              anchorNode = anchorNode.cloneNode(false);\n            }\n\n            if (!util.onlyZeroWidthSpace(prevNode)) {\n              ancestor.appendChild(prevNode);\n            }\n\n            const prevAnchorNode = _getMaintainedNode(ancestor);\n\n            if (!!prevAnchorNode) anchorNode = prevAnchorNode;\n            if (anchorNode) line = anchorNode;\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n\n            while (newNode !== line && newNode !== el && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n\n              if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(vNode);\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            newInnerNode.appendChild(childNode);\n            line.appendChild(newInnerNode);\n\n            if (anchorNode && !_getMaintainedNode(endContainer)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n\n            startContainer = textNode;\n            startOffset = 0;\n            startPass = true;\n            if (newNode !== textNode) newNode.appendChild(startContainer);\n            if (!isSameNode) continue;\n          } // endContainer\n\n\n          if (!endPass && child === endContainer) {\n            anchorNode = _getMaintainedNode(child);\n            const afterNode = util.createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, endContainer.length - endOffset));\n            const textNode = util.createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\n\n            if (anchorNode) {\n              anchorNode = anchorNode.cloneNode(false);\n            } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n\n            if (!util.onlyZeroWidthSpace(afterNode)) {\n              newNode = child;\n              cssText = '';\n              pCurrent = [];\n              const anchors = [];\n\n              while (newNode !== pNode && newNode !== el && newNode !== null) {\n                if (newNode.nodeType === 1 && checkCss(newNode)) {\n                  if (_isMaintainedNode(newNode)) anchors.push(newNode.cloneNode(false));else pCurrent.push(newNode.cloneNode(false));\n                  cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n                }\n\n                newNode = newNode.parentNode;\n              }\n\n              pCurrent = pCurrent.concat(anchors);\n              cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\n\n              while (pCurrent.length > 0) {\n                newNode = pCurrent.pop();\n                appendNode.appendChild(newNode);\n                appendNode = newNode;\n              }\n\n              pNode.appendChild(cloneNode);\n              newNode.textContent = afterNode.data;\n            }\n\n            if (anchorNode && cloneNode) {\n              const afterAnchorNode = _getMaintainedNode(cloneNode);\n\n              if (afterAnchorNode) {\n                anchorNode = afterAnchorNode;\n              }\n            }\n\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n\n            while (newNode !== pNode && newNode !== el && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n\n              if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(vNode);\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              newInnerNode.appendChild(childNode);\n              anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\n              pNode.appendChild(anchorNode);\n              nNodeArray.push(newInnerNode);\n              anchorNode = null;\n            } else {\n              newInnerNode.appendChild(childNode);\n            }\n\n            endContainer = textNode;\n            endOffset = textNode.data.length;\n            endPass = true;\n\n            if (!isRemoveFormat && collapsed) {\n              newInnerNode = textNode;\n              textNode.textContent = util.zeroWidthSpace;\n            }\n\n            if (newNode !== textNode) newNode.appendChild(endContainer);\n            continue;\n          } // other\n\n\n          if (startPass) {\n            if (child.nodeType === 1 && !util.isBreak(child)) {\n              if (util._isIgnoreNodeChange(child)) {\n                pNode.appendChild(child.cloneNode(true));\n\n                if (!collapsed) {\n                  newInnerNode = newInnerNode.cloneNode(false);\n                  pNode.appendChild(newInnerNode);\n                  nNodeArray.push(newInnerNode);\n                }\n              } else {\n                recursionFunc(child, child);\n              }\n\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n            const anchors = [];\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = endPass ? newNode.cloneNode(false) : validation(newNode);\n\n              if (newNode.nodeType === 1 && !util.isBreak(child) && vNode && checkCss(newNode)) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            pCurrent = pCurrent.concat(anchors);\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode) && !util.onlyZeroWidthSpace(newInnerNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n\n            if (!endPass && !anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n\n              childNode.appendChild(newInnerNode);\n              pNode.appendChild(childNode);\n              nNodeArray.push(newInnerNode);\n              if (newInnerNode.children.length > 0) ancestor = newNode;else ancestor = newInnerNode;\n            } else if (childNode === child) {\n              if (!endPass) ancestor = newInnerNode;else ancestor = pNode;\n            } else if (endPass) {\n              pNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            }\n\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.appendChild(newInnerNode);\n              } else {\n                anchorNode = null;\n              }\n            }\n          }\n\n          cloneNode = child.cloneNode(false);\n          ancestor.appendChild(cloneNode);\n          if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode); // not remove tag\n\n\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          startContainer: startCon,\n          startOffset: startOff,\n          endContainer: endCon,\n          endOffset: endOff\n        };\n      }\n\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          let textNode, textNode_s, textNode_e;\n\n          if (collapsed) {\n            textNode = util.createTextNode(util.zeroWidthSpace);\n            pNode.replaceChild(textNode, removeNode);\n          } else {\n            const rChildren = removeNode.childNodes;\n            textNode_s = rChildren[0];\n\n            while (rChildren[0]) {\n              textNode_e = rChildren[0];\n              pNode.insertBefore(textNode_e, removeNode);\n            }\n\n            util.removeItem(removeNode);\n          }\n\n          if (i === 0) {\n            if (collapsed) {\n              startContainer = endContainer = textNode;\n            } else {\n              startContainer = textNode_s;\n              endContainer = textNode_e;\n            }\n          }\n        }\n      } else {\n        if (isRemoveNode) {\n          for (let i = 0; i < nNodeArray.length; i++) {\n            this._stripRemoveNode(nNodeArray[i]);\n          }\n        }\n\n        if (collapsed) {\n          startContainer = endContainer = newInnerNode;\n        }\n      }\n\n      util.removeEmptyNode(pNode, newInnerNode);\n\n      if (collapsed) {\n        startOffset = startContainer.textContent.length;\n        endOffset = endContainer.textContent.length;\n      } // endContainer reset\n\n\n      const endConReset = isRemoveFormat || endContainer.textContent.length === 0;\n\n      if (!util.isBreak(endContainer) && endContainer.textContent.length === 0) {\n        util.removeItem(endContainer);\n        endContainer = startContainer;\n      }\n\n      endOffset = endConReset ? endContainer.textContent.length : endOffset; // node change\n\n      const newStartOffset = {\n        s: 0,\n        e: 0\n      };\n      const startPath = util.getNodePath(startContainer, pNode, newStartOffset);\n      const mergeEndCon = !endContainer.parentNode;\n      if (mergeEndCon) endContainer = startContainer;\n      const newEndOffset = {\n        s: 0,\n        e: 0\n      };\n      const endPath = util.getNodePath(endContainer, pNode, !mergeEndCon && !endConReset ? newEndOffset : null);\n      startOffset += newStartOffset.s;\n      endOffset = collapsed ? startOffset : mergeEndCon ? startContainer.textContent.length : endConReset ? endOffset + newStartOffset.s : endOffset + newEndOffset.s; // tag merge\n\n      const newOffsets = util.mergeSameTags(pNode, [startPath, endPath], true);\n      element.parentNode.replaceChild(pNode, element);\n      startContainer = util.getNodeFromPath(startPath, pNode);\n      endContainer = util.getNodeFromPath(endPath, pNode);\n      return {\n        ancestor: pNode,\n        startContainer: startContainer,\n        startOffset: startOffset + newOffsets[0],\n        endContainer: endContainer,\n        endOffset: endOffset + newOffsets[1]\n      };\n    },\n\n    /**\r\n     * @description wraps first line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @returns {null|Node} If end container is renewed, returned renewed node\r\n     * @returns {Object} { ancestor, container, offset, endContainer }\r\n     * @private\r\n     */\n    _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, _endContainer) {\n      // not add tag\n      let parentCon = startCon.parentNode;\n\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n\n      if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.nextSibling && util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff))) {\n        let sameTag = true;\n        let s = startCon.previousSibling;\n\n        while (s) {\n          if (!util.onlyZeroWidthSpace(s)) {\n            sameTag = false;\n            break;\n          }\n\n          s = s.previousSibling;\n        }\n\n        if (sameTag) {\n          util.copyTagAttributes(parentCon, newInnerNode);\n          return {\n            ancestor: element,\n            container: startCon,\n            offset: startOff\n          };\n        }\n      } // add tag\n\n\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      let container = startCon;\n      let offset = startOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode, anchorNode;\n\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n\n        for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\n          const child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n\n          if (passNode && !util.isBreak(child)) {\n            if (child.nodeType === 1) {\n              if (util._isIgnoreNodeChange(child)) {\n                newInnerNode = newInnerNode.cloneNode(false);\n                cloneChild = child.cloneNode(true);\n                pNode.appendChild(cloneChild);\n                pNode.appendChild(newInnerNode);\n                nNodeArray.push(newInnerNode); // end container\n\n                if (_endContainer && child.contains(_endContainer)) {\n                  const endPath = util.getNodePath(_endContainer, child);\n                  _endContainer = util.getNodeFromPath(endPath, cloneChild);\n                }\n              } else {\n                recursionFunc(child, child);\n              }\n\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n            const anchors = [];\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = validation(newNode);\n\n              if (newNode.nodeType === 1 && vNode) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            pCurrent = pCurrent.concat(anchors);\n            const isTopNode = pCurrent.length > 0;\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n\n            if (!anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n\n              childNode.appendChild(newInnerNode);\n              pNode.appendChild(childNode);\n              ancestor = !_isMaintainedNode(newNode) ? newNode : newInnerNode;\n              nNodeArray.push(newInnerNode);\n            } else if (isTopNode) {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.appendChild(newInnerNode);\n              } else {\n                anchorNode = null;\n              }\n            }\n          } // startContainer\n\n\n          if (!passNode && child === container) {\n            let line = pNode;\n            anchorNode = _getMaintainedNode(child);\n            const prevNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n            const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n\n            if (anchorNode) {\n              const a = _getMaintainedNode(ancestor);\n\n              if (a && a.parentNode !== line) {\n                let m = a;\n                let p = null;\n\n                while (m.parentNode !== line) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n\n                m.parentNode.appendChild(a);\n              }\n\n              anchorNode = anchorNode.cloneNode(false);\n            }\n\n            if (!util.onlyZeroWidthSpace(prevNode)) {\n              ancestor.appendChild(prevNode);\n            }\n\n            const prevAnchorNode = _getMaintainedNode(ancestor);\n\n            if (!!prevAnchorNode) anchorNode = prevAnchorNode;\n            if (anchorNode) line = anchorNode;\n            newNode = ancestor;\n            pCurrent = [];\n\n            while (newNode !== line && newNode !== null) {\n              vNode = validation(newNode);\n\n              if (newNode.nodeType === 1 && vNode) {\n                pCurrent.push(vNode);\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || ancestor;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (childNode !== ancestor) {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n\n            if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n            line.appendChild(newInnerNode);\n            container = textNode;\n            offset = 0;\n            passNode = true;\n            ancestor.appendChild(container);\n            continue;\n          }\n\n          vNode = !passNode ? child.cloneNode(false) : validation(child);\n\n          if (vNode) {\n            ancestor.appendChild(vNode);\n            if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\n          }\n\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode); // not remove tag\n\n\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          container: startCon,\n          offset: startOff,\n          endContainer: _endContainer\n        };\n      }\n\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n          const textNode = rChildren[0];\n\n          while (rChildren[0]) {\n            pNode.insertBefore(rChildren[0], removeNode);\n          }\n\n          util.removeItem(removeNode);\n          if (i === 0) container = textNode;\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n\n      if (!isRemoveFormat && pNode.childNodes.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = util.createTextNode(util.zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        util.removeEmptyNode(pNode, newInnerNode);\n\n        if (util.onlyZeroWidthSpace(pNode.textContent)) {\n          container = pNode.firstChild;\n          offset = 0;\n        } // node change\n\n\n        const offsets = {\n          s: 0,\n          e: 0\n        };\n        const path = util.getNodePath(container, pNode, offsets);\n        offset += offsets.s; // tag merge\n\n        const newOffsets = util.mergeSameTags(pNode, [path], true);\n        element.parentNode.replaceChild(pNode, element);\n        container = util.getNodeFromPath(path, pNode);\n        offset += newOffsets[0];\n      }\n\n      return {\n        ancestor: pNode,\n        container: container,\n        offset: offset,\n        endContainer: _endContainer\n      };\n    },\n\n    /**\r\n     * @description wraps mid lines selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @param {Node} _endContainer Offset node of last line already modified (end.container)\r\n     * @returns {Object} { ancestor, endContainer: \"If end container is renewed, returned renewed node\" }\r\n     * @private\r\n     */\n    _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, _endContainer) {\n      // not add tag\n      if (!isRemoveNode) {\n        // end container path\n        let endPath = null;\n        if (_endContainer && element.contains(_endContainer)) endPath = util.getNodePath(_endContainer, element);\n        const tempNode = element.cloneNode(true);\n        const newNodeName = newInnerNode.nodeName;\n        const newCssText = newInnerNode.style.cssText;\n        const newClass = newInnerNode.className;\n        let children = tempNode.childNodes;\n        let i = 0,\n            len = children.length;\n\n        for (let child; i < len; i++) {\n          child = children[i];\n          if (child.nodeType === 3) break;\n\n          if (child.nodeName === newNodeName) {\n            child.style.cssText += newCssText;\n            util.addClass(child, newClass);\n          } else if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\n            continue;\n          } else if (len === 1) {\n            children = child.childNodes;\n            len = children.length;\n            i = -1;\n            continue;\n          } else {\n            break;\n          }\n        }\n\n        if (len > 0 && i === len) {\n          element.innerHTML = tempNode.innerHTML;\n          return {\n            ancestor: element,\n            endContainer: endPath ? util.getNodeFromPath(endPath, element) : null\n          };\n        }\n      } // add tag\n\n\n      _removeCheck.v = false;\n      const pNode = element.cloneNode(false);\n      const nNodeArray = [newInnerNode];\n      let noneChange = true;\n\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n\n        for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\n          let child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n\n          if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\n            if (newInnerNode.childNodes.length > 0) {\n              pNode.appendChild(newInnerNode);\n              newInnerNode = newInnerNode.cloneNode(false);\n            }\n\n            cloneChild = child.cloneNode(true);\n            pNode.appendChild(cloneChild);\n            pNode.appendChild(newInnerNode);\n            nNodeArray.push(newInnerNode);\n            ancestor = newInnerNode; // end container\n\n            if (_endContainer && child.contains(_endContainer)) {\n              const endPath = util.getNodePath(_endContainer, child);\n              _endContainer = util.getNodeFromPath(endPath, cloneChild);\n            }\n\n            continue;\n          } else {\n            vNode = validation(child);\n\n            if (vNode) {\n              noneChange = false;\n              ancestor.appendChild(vNode);\n              if (child.nodeType === 1) coverNode = vNode;\n            }\n          }\n\n          if (!util.isBreak(child)) recursionFunc(child, coverNode);\n        }\n      })(element, newInnerNode); // not remove tag\n\n\n      if (noneChange || isRemoveNode && !isRemoveFormat && !_removeCheck.v) return {\n        ancestor: element,\n        endContainer: _endContainer\n      };\n      pNode.appendChild(newInnerNode);\n\n      if (isRemoveFormat && isRemoveNode) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n\n          while (rChildren[0]) {\n            pNode.insertBefore(rChildren[0], removeNode);\n          }\n\n          util.removeItem(removeNode);\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n\n      util.removeEmptyNode(pNode, newInnerNode);\n      util.mergeSameTags(pNode, null, true); // node change\n\n      element.parentNode.replaceChild(pNode, element);\n      return {\n        ancestor: pNode,\n        endContainer: _endContainer\n      };\n    },\n\n    /**\r\n     * @description wraps last line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @returns {Object} { ancestor, container, offset }\r\n     * @private\r\n     */\n    _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\n      // not add tag\n      let parentCon = endCon.parentNode;\n\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n\n      if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.previousSibling && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\n        let sameTag = true;\n        let e = endCon.nextSibling;\n\n        while (e) {\n          if (!util.onlyZeroWidthSpace(e)) {\n            sameTag = false;\n            break;\n          }\n\n          e = e.nextSibling;\n        }\n\n        if (sameTag) {\n          util.copyTagAttributes(parentCon, newInnerNode);\n          return {\n            ancestor: element,\n            container: endCon,\n            offset: endOff\n          };\n        }\n      } // add tag\n\n\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      let container = endCon;\n      let offset = endOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode, anchorNode;\n\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n\n        for (let i = childNodes.length - 1, vNode; 0 <= i; i--) {\n          const child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n\n          if (passNode && !util.isBreak(child)) {\n            if (child.nodeType === 1) {\n              if (util._isIgnoreNodeChange(child)) {\n                newInnerNode = newInnerNode.cloneNode(false);\n                const cloneChild = child.cloneNode(true);\n                pNode.insertBefore(cloneChild, ancestor);\n                pNode.insertBefore(newInnerNode, cloneChild);\n                nNodeArray.push(newInnerNode);\n              } else {\n                recursionFunc(child, child);\n              }\n\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n            const anchors = [];\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = validation(newNode);\n\n              if (vNode && newNode.nodeType === 1) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            pCurrent = pCurrent.concat(anchors);\n            const isTopNode = pCurrent.length > 0;\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.insertBefore(newInnerNode, pNode.firstChild);\n              nNodeArray.push(newInnerNode);\n            }\n\n            if (!anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n\n              childNode.appendChild(newInnerNode);\n              pNode.insertBefore(childNode, pNode.firstChild);\n              nNodeArray.push(newInnerNode);\n              if (newInnerNode.children.length > 0) ancestor = newNode;else ancestor = newInnerNode;\n            } else if (isTopNode) {\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.insertBefore(newInnerNode, pNode.firstChild);\n              } else {\n                anchorNode = null;\n              }\n            }\n          } // endContainer\n\n\n          if (!passNode && child === container) {\n            anchorNode = _getMaintainedNode(child);\n            const afterNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n            const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n\n            if (anchorNode) {\n              anchorNode = anchorNode.cloneNode(false);\n\n              const a = _getMaintainedNode(ancestor);\n\n              if (a && a.parentNode !== pNode) {\n                let m = a;\n                let p = null;\n\n                while (m.parentNode !== pNode) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n\n                m.parentNode.insertBefore(a, m.parentNode.firstChild);\n              }\n\n              anchorNode = anchorNode.cloneNode(false);\n            } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n\n            if (!util.onlyZeroWidthSpace(afterNode)) {\n              ancestor.insertBefore(afterNode, ancestor.firstChild);\n            }\n\n            newNode = ancestor;\n            pCurrent = [];\n\n            while (newNode !== pNode && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n\n              if (vNode && newNode.nodeType === 1) {\n                pCurrent.push(vNode);\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || ancestor;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (childNode !== ancestor) {\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n\n            if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n\n            if (anchorNode) {\n              anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\n              pNode.insertBefore(anchorNode, pNode.firstChild);\n              anchorNode = null;\n            } else {\n              pNode.insertBefore(newInnerNode, pNode.firstChild);\n            }\n\n            container = textNode;\n            offset = textNode.data.length;\n            passNode = true;\n            ancestor.insertBefore(container, ancestor.firstChild);\n            continue;\n          }\n\n          vNode = !passNode ? child.cloneNode(false) : validation(child);\n\n          if (vNode) {\n            ancestor.insertBefore(vNode, ancestor.firstChild);\n            if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\n          }\n\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode); // not remove tag\n\n\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          container: endCon,\n          offset: endOff\n        };\n      }\n\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n          let textNode = null;\n\n          while (rChildren[0]) {\n            textNode = rChildren[0];\n            pNode.insertBefore(textNode, removeNode);\n          }\n\n          util.removeItem(removeNode);\n\n          if (i === nNodeArray.length - 1) {\n            container = textNode;\n            offset = textNode.textContent.length;\n          }\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n\n      if (!isRemoveFormat && pNode.childNodes.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = util.createTextNode(util.zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        if (!isRemoveNode && newInnerNode.textContent.length === 0) {\n          util.removeEmptyNode(pNode, null);\n          return {\n            ancestor: null,\n            container: null,\n            offset: 0\n          };\n        }\n\n        util.removeEmptyNode(pNode, newInnerNode);\n\n        if (util.onlyZeroWidthSpace(pNode.textContent)) {\n          container = pNode.firstChild;\n          offset = container.textContent.length;\n        } else if (util.onlyZeroWidthSpace(container)) {\n          container = newInnerNode;\n          offset = 1;\n        } // node change\n\n\n        const offsets = {\n          s: 0,\n          e: 0\n        };\n        const path = util.getNodePath(container, pNode, offsets);\n        offset += offsets.s; // tag merge\n\n        const newOffsets = util.mergeSameTags(pNode, [path], true);\n        element.parentNode.replaceChild(pNode, element);\n        container = util.getNodeFromPath(path, pNode);\n        offset += newOffsets[0];\n      }\n\n      return {\n        ancestor: pNode,\n        container: container,\n        offset: container.nodeType === 1 && offset === 1 ? container.childNodes.length : offset\n      };\n    },\n\n    /**\r\n     * @description Run plugin calls and basic commands.\r\n     * @param {String} command Command string\r\n     * @param {String} display Display type string ('command', 'submenu', 'dialog', 'container')\r\n     * @param {Element} target The element of command button\r\n     */\n    actionCall: function (command, display, target) {\n      // call plugins\n      if (display) {\n        if (/more/i.test(display)) {\n          if (target !== this._moreLayerActiveButton) {\n            const layer = context.element.toolbar.querySelector('.' + command);\n\n            if (layer) {\n              if (this._moreLayerActiveButton) this.moreLayerOff();\n              this._moreLayerActiveButton = target;\n              layer.style.display = 'block';\n\n              event._showToolbarBalloon();\n\n              event._showToolbarInline();\n            }\n\n            util.addClass(target, 'on');\n          } else {\n            const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\n\n            if (layer) {\n              this.moreLayerOff();\n\n              event._showToolbarBalloon();\n\n              event._showToolbarInline();\n            }\n          }\n\n          return;\n        }\n\n        if (/container/.test(display) && (this._menuTray[command] === null || target !== this.containerActiveButton)) {\n          this.callPlugin(command, this.containerOn.bind(this, target), target);\n          return;\n        }\n\n        if (this.isReadOnly && util.arrayIncludes(this.resizingDisabledButtons, target)) return;\n\n        if (/submenu/.test(display) && (this._menuTray[command] === null || target !== this.submenuActiveButton)) {\n          this.callPlugin(command, this.submenuOn.bind(this, target), target);\n          return;\n        } else if (/dialog/.test(display)) {\n          this.callPlugin(command, this.plugins[command].open.bind(this), target);\n          return;\n        } else if (/command/.test(display)) {\n          this.callPlugin(command, this.plugins[command].action.bind(this), target);\n        } else if (/fileBrowser/.test(display)) {\n          this.callPlugin(command, this.plugins[command].open.bind(this, null), target);\n        }\n      } // default command\n      else if (command) {\n        this.commandHandler(target, command);\n      }\n\n      if (/submenu/.test(display)) {\n        this.submenuOff();\n      } else if (!/command/.test(display)) {\n        this.submenuOff();\n        this.containerOff();\n      }\n    },\n\n    /**\r\n     * @description Execute command of command button(All Buttons except submenu and dialog)\r\n     * (selectAll, codeView, fullScreen, indent, outdent, undo, redo, removeFormat, print, preview, showBlocks, save, bold, underline, italic, strike, subscript, superscript, copy, cut, paste)\r\n     * @param {Element|null} target The element of command button\r\n     * @param {String} command Property of command button (data-value)\r\n     */\n    commandHandler: function (target, command) {\n      if (core.isReadOnly && !/copy|cut|selectAll|codeView|fullScreen|print|preview|showBlocks/.test(command)) return;\n\n      switch (command) {\n        case 'copy':\n        case 'cut':\n          this.execCommand(command);\n          break;\n\n        case 'paste':\n          break;\n\n        case 'selectAll':\n          this.containerOff();\n          const wysiwyg = context.element.wysiwyg;\n          let first = util.getChildElement(wysiwyg.firstChild, function (current) {\n            return current.childNodes.length === 0 || current.nodeType === 3;\n          }, false) || wysiwyg.firstChild;\n          let last = util.getChildElement(wysiwyg.lastChild, function (current) {\n            return current.childNodes.length === 0 || current.nodeType === 3;\n          }, true) || wysiwyg.lastChild;\n          if (!first || !last) return;\n\n          if (util.isMedia(first)) {\n            const info = this.getFileComponent(first);\n            const br = util.createElement('BR');\n            const format = util.createElement(options.defaultTag);\n            format.appendChild(br);\n            first = info ? info.component : first;\n            first.parentNode.insertBefore(format, first);\n            first = br;\n          }\n\n          if (util.isMedia(last)) {\n            const br = util.createElement('BR');\n            const format = util.createElement(options.defaultTag);\n            format.appendChild(br);\n            wysiwyg.appendChild(format);\n            last = br;\n          }\n\n          this.setRange(first, 0, last, last.textContent.length);\n          break;\n\n        case 'codeView':\n          this.toggleCodeView();\n          break;\n\n        case 'fullScreen':\n          this.toggleFullScreen(target);\n          break;\n\n        case 'indent':\n        case 'outdent':\n          this.indent(command);\n          break;\n\n        case 'undo':\n          this.history.undo();\n          break;\n\n        case 'redo':\n          this.history.redo();\n          break;\n\n        case 'removeFormat':\n          this.removeFormat();\n          this.focus();\n          break;\n\n        case 'print':\n          this.print();\n          break;\n\n        case 'preview':\n          this.preview();\n          break;\n\n        case 'showBlocks':\n          this.toggleDisplayBlocks();\n          break;\n\n        case 'dir':\n          this.setDir(options.rtl ? 'ltr' : 'rtl');\n          break;\n\n        case 'dir_ltr':\n          this.setDir('ltr');\n          break;\n\n        case 'dir_rtl':\n          this.setDir('rtl');\n          break;\n\n        case 'save':\n          if (typeof options.callBackSave === 'function') {\n            options.callBackSave(this.getContents(false), this._variable.isChanged);\n          } else if (this._variable.isChanged && typeof functions.save === 'function') {\n            functions.save();\n          } else {\n            throw Error('[SUNEDITOR.core.commandHandler.fail] Please register call back function in creation option. (callBackSave : Function)');\n          }\n\n          this._variable.isChanged = false;\n          if (context.tool.save) context.tool.save.setAttribute('disabled', true);\n          break;\n\n        default:\n          // 'STRONG', 'U', 'EM', 'DEL', 'SUB', 'SUP'..\n          command = this._defaultCommand[command.toLowerCase()] || command;\n          if (!this.commandMap[command]) this.commandMap[command] = target;\n          const nodesMap = this._variable.currentNodesMap;\n          const cmd = nodesMap.indexOf(command) > -1 ? null : util.createElement(command);\n          let removeNode = command;\n\n          if (/^SUB$/i.test(command) && nodesMap.indexOf('SUP') > -1) {\n            removeNode = 'SUP';\n          } else if (/^SUP$/i.test(command) && nodesMap.indexOf('SUB') > -1) {\n            removeNode = 'SUB';\n          }\n\n          this.nodeChange(cmd, this._commandMapStyles[command] || null, [removeNode], false);\n          this.focus();\n      }\n    },\n\n    /**\r\n     * @description Remove format of the currently selected range\r\n     */\n    removeFormat: function () {\n      this.nodeChange(null, null, null, null);\n    },\n\n    /**\r\n     * @description This method implements indentation to selected range.\r\n     * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n     * @param {String} command Separator (\"indent\" or \"outdent\")\r\n     */\n    indent: function (command) {\n      const range = this.getRange();\n      const rangeLines = this.getSelectedElements(null);\n      const cells = [];\n      const shift = 'indent' !== command;\n      const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\n      let sc = range.startContainer;\n      let ec = range.endContainer;\n      let so = range.startOffset;\n      let eo = range.endOffset;\n\n      for (let i = 0, len = rangeLines.length, f, margin; i < len; i++) {\n        f = rangeLines[i];\n\n        if (!util.isListCell(f) || !this.plugins.list) {\n          margin = /\\d+/.test(f.style[marginDir]) ? util.getNumber(f.style[marginDir], 0) : 0;\n\n          if (shift) {\n            margin -= 25;\n          } else {\n            margin += 25;\n          }\n\n          util.setStyle(f, marginDir, margin <= 0 ? '' : margin + 'px');\n        } else {\n          if (shift || f.previousElementSibling) {\n            cells.push(f);\n          }\n        }\n      } // list cells\n\n\n      if (cells.length > 0) {\n        this.plugins.list.editInsideList.call(this, shift, cells);\n      }\n\n      this.effectNode = null;\n      this.setRange(sc, so, ec, eo); // history stack\n\n      this.history.push(false);\n    },\n\n    /**\r\n     * @description Add or remove the class name of \"body\" so that the code block is visible\r\n     */\n    toggleDisplayBlocks: function () {\n      const wysiwyg = context.element.wysiwyg;\n      util.toggleClass(wysiwyg, 'se-show-block');\n\n      if (util.hasClass(wysiwyg, 'se-show-block')) {\n        util.addClass(this._styleCommandMap.showBlocks, 'active');\n      } else {\n        util.removeClass(this._styleCommandMap.showBlocks, 'active');\n      }\n\n      this._resourcesStateChange();\n    },\n\n    /**\r\n     * @description Changes to code view or wysiwyg view\r\n     */\n    toggleCodeView: function () {\n      const isCodeView = this._variable.isCodeView;\n      this.controllersOff();\n      util.setDisabledButtons(!isCodeView, this.codeViewDisabledButtons);\n\n      if (isCodeView) {\n        if (!util.isNonEditable(context.element.wysiwygFrame)) this._setCodeDataToEditor();\n        context.element.wysiwygFrame.scrollTop = 0;\n        context.element.code.style.display = 'none';\n        context.element.wysiwygFrame.style.display = 'block';\n        this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\n        this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\n        if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = '0px';\n        this._variable.isCodeView = false;\n\n        if (!this._variable.isFullScreen) {\n          this._notHideToolbar = false;\n\n          if (/balloon|balloon-always/i.test(options.mode)) {\n            context.element._arrow.style.display = '';\n            this._isInline = false;\n            this._isBalloon = true;\n\n            event._hideToolbar();\n          }\n        }\n\n        this.nativeFocus();\n        util.removeClass(this._styleCommandMap.codeView, 'active'); // history stack\n\n        if (!util.isNonEditable(context.element.wysiwygFrame)) {\n          this.history.push(false);\n\n          this.history._resetCachingButton();\n        }\n      } else {\n        this._setEditorDataToCodeView();\n\n        this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\n        this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\n        if (this._variable.isFullScreen) context.element.code.style.height = '100%';else if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = context.element.code.scrollHeight > 0 ? context.element.code.scrollHeight + 'px' : 'auto';\n        if (options.codeMirrorEditor) options.codeMirrorEditor.refresh();\n        this._variable.isCodeView = true;\n\n        if (!this._variable.isFullScreen) {\n          this._notHideToolbar = true;\n\n          if (this._isBalloon) {\n            context.element._arrow.style.display = 'none';\n            context.element.toolbar.style.left = '';\n            this._isInline = true;\n            this._isBalloon = false;\n\n            event._showToolbarInline();\n          }\n        }\n\n        this._variable._range = null;\n        context.element.code.focus();\n        util.addClass(this._styleCommandMap.codeView, 'active');\n      }\n\n      this._checkPlaceholder();\n\n      if (this.isReadOnly) util.setDisabledButtons(true, this.resizingDisabledButtons); // user event\n\n      if (typeof functions.toggleCodeView === 'function') functions.toggleCodeView(this._variable.isCodeView, this);\n    },\n\n    /**\r\n     * @description Convert the data of the code view and put it in the WYSIWYG area.\r\n     * @private\r\n     */\n    _setCodeDataToEditor: function () {\n      const code_html = this._getCodeView();\n\n      if (options.fullPage) {\n        const parseDocument = this._parser.parseFromString(code_html, 'text/html');\n\n        const headChildren = parseDocument.head.children;\n\n        for (let i = 0, len = headChildren.length; i < len; i++) {\n          if (/^script$/i.test(headChildren[i].tagName)) {\n            parseDocument.head.removeChild(headChildren[i]);\n            i--, len--;\n          }\n        }\n\n        let headers = parseDocument.head.innerHTML;\n\n        if (!parseDocument.head.querySelector('link[rel=\"stylesheet\"]') || this.options.height === 'auto' && !parseDocument.head.querySelector('style')) {\n          headers += util._setIframeCssTags(this.options);\n        }\n\n        this._wd.head.innerHTML = headers;\n        this._wd.body.innerHTML = this.convertContentsForEditor(parseDocument.body.innerHTML);\n        const attrs = parseDocument.body.attributes;\n\n        for (let i = 0, len = attrs.length; i < len; i++) {\n          if (attrs[i].name === 'contenteditable') continue;\n\n          this._wd.body.setAttribute(attrs[i].name, attrs[i].value);\n        }\n\n        if (!util.hasClass(this._wd.body, 'sun-editor-editable')) {\n          const editableClasses = options._editableClass.split(' ');\n\n          for (let i = 0; i < editableClasses.length; i++) {\n            util.addClass(this._wd.body, options._editableClass[i]);\n          }\n        }\n      } else {\n        context.element.wysiwyg.innerHTML = code_html.length > 0 ? this.convertContentsForEditor(code_html) : '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n      }\n    },\n\n    /**\r\n     * @description Convert the data of the WYSIWYG area and put it in the code view area.\r\n     * @private\r\n     */\n    _setEditorDataToCodeView: function () {\n      const codeContents = this.convertHTMLForCodeView(context.element.wysiwyg, false);\n      let codeValue = '';\n\n      if (options.fullPage) {\n        const attrs = util.getAttributesToString(this._wd.body, null);\n        codeValue = '<!DOCTYPE html>\\n<html>\\n' + this._wd.head.outerHTML.replace(/>(?!\\n)/g, '>\\n') + '<body ' + attrs + '>\\n' + codeContents + '</body>\\n</html>';\n      } else {\n        codeValue = codeContents;\n      }\n\n      context.element.code.style.display = 'block';\n      context.element.wysiwygFrame.style.display = 'none';\n\n      this._setCodeView(codeValue);\n    },\n\n    /**\r\n     * @description Changes to full screen or default screen\r\n     * @param {Element|null} element full screen button\r\n     */\n    toggleFullScreen: function (element) {\n      const topArea = context.element.topArea;\n      const toolbar = context.element.toolbar;\n      const editorArea = context.element.editorArea;\n      const wysiwygFrame = context.element.wysiwygFrame;\n      const code = context.element.code;\n      const _var = this._variable;\n      this.controllersOff();\n      const wasToolbarHidden = toolbar.style.display === 'none' || this._isInline && !this._inlineToolbarAttr.isShow;\n\n      if (!_var.isFullScreen) {\n        _var.isFullScreen = true;\n        _var._fullScreenAttrs.inline = this._isInline;\n        _var._fullScreenAttrs.balloon = this._isBalloon;\n\n        if (this._isInline || this._isBalloon) {\n          this._isInline = false;\n          this._isBalloon = false;\n        }\n\n        if (!!options.toolbarContainer) context.element.relative.insertBefore(toolbar, editorArea);\n        topArea.style.position = 'fixed';\n        topArea.style.top = '0';\n        topArea.style.left = '0';\n        topArea.style.width = '100%';\n        topArea.style.maxWidth = '100%';\n        topArea.style.height = '100%';\n        topArea.style.zIndex = '2147483647';\n\n        if (context.element._stickyDummy.style.display !== ('none' && '')) {\n          _var._fullScreenAttrs.sticky = true;\n          context.element._stickyDummy.style.display = 'none';\n          util.removeClass(toolbar, 'se-toolbar-sticky');\n        }\n\n        _var._bodyOverflow = _d.body.style.overflow;\n        _d.body.style.overflow = 'hidden';\n        _var._editorAreaOriginCssText = editorArea.style.cssText;\n        _var._wysiwygOriginCssText = wysiwygFrame.style.cssText;\n        _var._codeOriginCssText = code.style.cssText;\n        editorArea.style.cssText = toolbar.style.cssText = '';\n        wysiwygFrame.style.cssText = (wysiwygFrame.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\n        code.style.cssText = (code.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\n        toolbar.style.width = wysiwygFrame.style.height = code.style.height = '100%';\n        toolbar.style.position = 'relative';\n        toolbar.style.display = 'block';\n        _var.innerHeight_fullScreen = _w.innerHeight - toolbar.offsetHeight;\n        editorArea.style.height = _var.innerHeight_fullScreen - options.fullScreenOffset + 'px';\n        if (element) util.changeElement(element.firstElementChild, icons.reduction);\n\n        if (options.iframe && options.height === 'auto') {\n          editorArea.style.overflow = 'auto';\n\n          this._iframeAutoHeight();\n        }\n\n        context.element.topArea.style.marginTop = options.fullScreenOffset + 'px';\n        util.addClass(this._styleCommandMap.fullScreen, 'active');\n      } else {\n        _var.isFullScreen = false;\n        wysiwygFrame.style.cssText = _var._wysiwygOriginCssText;\n        code.style.cssText = _var._codeOriginCssText;\n        toolbar.style.cssText = '';\n        editorArea.style.cssText = _var._editorAreaOriginCssText;\n        topArea.style.cssText = _var._originCssText;\n        _d.body.style.overflow = _var._bodyOverflow;\n        if (options.height === 'auto' && !options.codeMirrorEditor) event._codeViewAutoHeight();\n        if (!!options.toolbarContainer) options.toolbarContainer.appendChild(toolbar);\n\n        if (options.stickyToolbar > -1) {\n          util.removeClass(toolbar, 'se-toolbar-sticky');\n        }\n\n        if (_var._fullScreenAttrs.sticky && !options.toolbarContainer) {\n          _var._fullScreenAttrs.sticky = false;\n          context.element._stickyDummy.style.display = 'block';\n          util.addClass(toolbar, \"se-toolbar-sticky\");\n        }\n\n        this._isInline = _var._fullScreenAttrs.inline;\n        this._isBalloon = _var._fullScreenAttrs.balloon;\n        if (this._isInline) event._showToolbarInline();\n        if (!!options.toolbarContainer) util.removeClass(toolbar, 'se-toolbar-balloon');\n        event.onScroll_window();\n        if (element) util.changeElement(element.firstElementChild, icons.expansion);\n        context.element.topArea.style.marginTop = '';\n        util.removeClass(this._styleCommandMap.fullScreen, 'active');\n      }\n\n      if (wasToolbarHidden) functions.toolbar.hide(); // user event\n\n      if (typeof functions.toggleFullScreen === 'function') functions.toggleFullScreen(this._variable.isFullScreen, this);\n    },\n\n    /**\r\n     * @description Prints the current contents of the editor.\r\n     */\n    print: function () {\n      const iframe = util.createElement('IFRAME');\n      iframe.style.display = 'none';\n\n      _d.body.appendChild(iframe);\n\n      const contentsHTML = options.printTemplate ? options.printTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\n      const printDocument = util.getIframeDocument(iframe);\n      const wDoc = this._wd;\n\n      if (options.iframe) {\n        const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\n        printDocument.write('' + '<!DOCTYPE html><html>' + '<head>' + wDoc.head.innerHTML + '</head>' + '<body ' + arrts + '>' + contentsHTML + '</body>' + '</html>');\n      } else {\n        const links = _d.head.getElementsByTagName('link');\n\n        const styles = _d.head.getElementsByTagName('style');\n\n        let linkHTML = '';\n\n        for (let i = 0, len = links.length; i < len; i++) {\n          linkHTML += links[i].outerHTML;\n        }\n\n        for (let i = 0, len = styles.length; i < len; i++) {\n          linkHTML += styles[i].outerHTML;\n        }\n\n        printDocument.write('' + '<!DOCTYPE html><html>' + '<head>' + linkHTML + '</head>' + '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\">' + contentsHTML + '</body>' + '</html>');\n      }\n\n      this.showLoading();\n\n      _w.setTimeout(function () {\n        try {\n          iframe.focus(); // IE or Edge\n\n          if (util.isIE_Edge || !!_d.documentMode || !!_w.StyleMedia) {\n            try {\n              iframe.contentWindow.document.execCommand('print', false, null);\n            } catch (e) {\n              iframe.contentWindow.print();\n            }\n          } else {\n            // Other browsers\n            iframe.contentWindow.print();\n          }\n        } catch (error) {\n          throw Error('[SUNEDITOR.core.print.fail] error: ' + error);\n        } finally {\n          core.closeLoading();\n          util.removeItem(iframe);\n        }\n      }, 1000);\n    },\n\n    /**\r\n     * @description Open the preview window.\r\n     */\n    preview: function () {\n      core.submenuOff();\n      core.containerOff();\n      core.controllersOff();\n      const contentsHTML = options.previewTemplate ? options.previewTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\n\n      const windowObject = _w.open('', '_blank');\n\n      windowObject.mimeType = 'text/html';\n      const wDoc = this._wd;\n\n      if (options.iframe) {\n        const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\n        windowObject.document.write('' + '<!DOCTYPE html><html>' + '<head>' + wDoc.head.innerHTML + '<style>body {overflow:auto !important; margin: 10px auto !important; height:auto !important; outline:1px dashed #ccc;}</style>' + '</head>' + '<body ' + arrts + '>' + contentsHTML + '</body>' + '</html>');\n      } else {\n        const links = _d.head.getElementsByTagName('link');\n\n        const styles = _d.head.getElementsByTagName('style');\n\n        let linkHTML = '';\n\n        for (let i = 0, len = links.length; i < len; i++) {\n          linkHTML += links[i].outerHTML;\n        }\n\n        for (let i = 0, len = styles.length; i < len; i++) {\n          linkHTML += styles[i].outerHTML;\n        }\n\n        windowObject.document.write('' + '<!DOCTYPE html><html>' + '<head>' + '<meta charset=\"utf-8\" />' + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">' + '<title>' + lang.toolbar.preview + '</title>' + linkHTML + '</head>' + '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\" style=\"margin:10px auto !important; height:auto !important; outline:1px dashed #ccc;\">' + contentsHTML + '</body>' + '</html>');\n      }\n    },\n\n    /**\r\n     * @description Set direction to \"rtl\" or \"ltr\".\r\n     * @param {String} dir \"rtl\" or \"ltr\"\r\n     */\n    setDir: function (dir) {\n      const rtl = dir === 'rtl';\n      const changeDir = this._prevRtl !== rtl;\n      this._prevRtl = options.rtl = rtl;\n\n      if (changeDir) {\n        // align buttons\n        if (this.plugins.align) {\n          this.plugins.align.exchangeDir.call(this);\n        } // indent buttons\n\n\n        if (context.tool.indent) util.changeElement(context.tool.indent.firstElementChild, icons.indent);\n        if (context.tool.outdent) util.changeElement(context.tool.outdent.firstElementChild, icons.outdent);\n      }\n\n      const el = context.element;\n\n      if (rtl) {\n        util.addClass(el.topArea, 'se-rtl');\n        util.addClass(el.wysiwygFrame, 'se-rtl');\n      } else {\n        util.removeClass(el.topArea, 'se-rtl');\n        util.removeClass(el.wysiwygFrame, 'se-rtl');\n      }\n\n      const lineNodes = util.getListChildren(el.wysiwyg, function (current) {\n        return util.isFormatElement(current) && (current.style.marginRight || current.style.marginLeft || current.style.textAlign);\n      });\n\n      for (let i = 0, len = lineNodes.length, n, l, r; i < len; i++) {\n        n = lineNodes[i]; // indent margin\n\n        r = n.style.marginRight;\n        l = n.style.marginLeft;\n\n        if (r || l) {\n          n.style.marginRight = l;\n          n.style.marginLeft = r;\n        } // text align\n\n\n        r = n.style.textAlign;\n        if (r === 'left') n.style.textAlign = 'right';else if (r === 'right') n.style.textAlign = 'left';\n      }\n\n      const tool = context.tool;\n\n      if (tool.dir) {\n        util.changeTxt(tool.dir.querySelector('.se-tooltip-text'), lang.toolbar[options.rtl ? 'dir_ltr' : 'dir_rtl']);\n        util.changeElement(tool.dir.firstElementChild, icons[options.rtl ? 'dir_ltr' : 'dir_rtl']);\n      }\n\n      if (tool.dir_ltr) {\n        if (rtl) util.removeClass(tool.dir_ltr, 'active');else util.addClass(tool.dir_ltr, 'active');\n      }\n\n      if (tool.dir_rtl) {\n        if (rtl) util.addClass(tool.dir_rtl, 'active');else util.removeClass(tool.dir_rtl, 'active');\n      }\n    },\n\n    /**\r\n     * @description Sets the HTML string\r\n     * @param {String|undefined} html HTML string\r\n     */\n    setContents: function (html) {\n      this.removeRange();\n      const convertValue = html === null || html === undefined ? '' : this.convertContentsForEditor(html);\n\n      this._resetComponents();\n\n      if (!this._variable.isCodeView) {\n        context.element.wysiwyg.innerHTML = convertValue; // history stack\n\n        this.history.push(false);\n      } else {\n        const value = this.convertHTMLForCodeView(convertValue, false);\n\n        this._setCodeView(value);\n      }\n    },\n\n    /**\r\n     * @description Sets the contents of the iframe's head tag and body tag when using the \"iframe\" or \"fullPage\" option.\r\n     * @param {Object} ctx { head: HTML string, body: HTML string}\r\n     */\n    setIframeContents: function (ctx) {\n      if (!options.iframe) return false;\n      if (ctx.head) this._wd.head.innerHTML = ctx.head.replace(/<script[\\s\\S]*>[\\s\\S]*<\\/script>/gi, '');\n      if (ctx.body) this._wd.body.innerHTML = this.convertContentsForEditor(ctx.body);\n    },\n\n    /**\r\n     * @description Gets the current contents\r\n     * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n     * @returns {Object}\r\n     */\n    getContents: function (onlyContents) {\n      const contents = this.convertHTMLForCodeView(context.element.wysiwyg, true);\n      const renderHTML = util.createElement('DIV');\n      renderHTML.innerHTML = contents;\n      const figcaptions = util.getListChildren(renderHTML, function (current) {\n        return /FIGCAPTION/i.test(current.nodeName);\n      });\n\n      for (let i = 0, len = figcaptions.length; i < len; i++) {\n        figcaptions[i].removeAttribute('contenteditable');\n      }\n\n      if (options.fullPage && !onlyContents) {\n        const attrs = util.getAttributesToString(this._wd.body, ['contenteditable']);\n        return '<!DOCTYPE html><html>' + this._wd.head.outerHTML + '<body ' + attrs + '>' + renderHTML.innerHTML + '</body></html>';\n      } else {\n        return renderHTML.innerHTML;\n      }\n    },\n\n    /**\r\n     * @description Returns HTML string according to tag type and configuration.\r\n     * Use only \"cleanHTML\"\r\n     * @param {Node} node Node\r\n     * @param {Boolean} requireFormat If true, text nodes that do not have a format node is wrapped with the format tag.\r\n     * @private\r\n     */\n    _makeLine: function (node, requireFormat) {\n      const defaultTag = options.defaultTag; // element\n\n      if (node.nodeType === 1) {\n        if (util._disallowedTags(node)) return '';\n\n        if (!requireFormat || util.isFormatElement(node) || util.isRangeFormatElement(node) || util.isComponent(node) || util.isMedia(node) || util.isAnchor(node) && util.isMedia(node.firstElementChild)) {\n          return node.outerHTML;\n        } else {\n          return '<' + defaultTag + '>' + node.outerHTML + '</' + defaultTag + '>';\n        }\n      } // text\n\n\n      if (node.nodeType === 3) {\n        if (!requireFormat) return util._HTMLConvertor(node.textContent);\n        const textArray = node.textContent.split(/\\n/g);\n        let html = '';\n\n        for (let i = 0, tLen = textArray.length, text; i < tLen; i++) {\n          text = textArray[i].trim();\n          if (text.length > 0) html += '<' + defaultTag + '>' + util._HTMLConvertor(text) + '</' + defaultTag + '>';\n        }\n\n        return html;\n      } // comments\n\n\n      if (node.nodeType === 8 && this._allowHTMLComments) {\n        return '<!--' + node.textContent.trim() + '-->';\n      }\n\n      return '';\n    },\n\n    /**\r\n     * @description Removes attribute values such as style and converts tags that do not conform to the \"html5\" standard.\r\n     * @param {String} text \r\n     * @returns {String} HTML string\r\n     * @private\r\n     */\n    _tagConvertor: function (text) {\n      if (!this._disallowedTextTagsRegExp) return text;\n      const ec = options._textTagsMap;\n      return text.replace(this._disallowedTextTagsRegExp, function (m, t, n, p) {\n        return t + (typeof ec[n] === 'string' ? ec[n] : n) + (p ? ' ' + p : '');\n      });\n    },\n\n    /**\r\n     * @description Delete disallowed tags\r\n     * @param {String} html HTML string\r\n     * @returns {String}\r\n     * @private\r\n     */\n    _deleteDisallowedTags: function (html) {\n      return html.replace(/\\n/g, '').replace(/<(script|style)[\\s\\S]*>[\\s\\S]*<\\/(script|style)>/gi, '').replace(/<[a-z0-9]+\\:[a-z0-9]+[^>^\\/]*>[^>]*<\\/[a-z0-9]+\\:[a-z0-9]+>/gi, '').replace(this.editorTagsWhitelistRegExp, '').replace(this.editorTagsBlacklistRegExp, '');\n    },\n\n    /**\r\n     * @description Tag and tag attribute check RegExp function. (used by \"cleanHTML\" and \"convertContentsForEditor\")\r\n     * @param {Boolean} lowLevelCheck Row level check\r\n     * @param {String} m RegExp value\r\n     * @param {String} t RegExp value\r\n     * @returns {String}\r\n     * @private\r\n     */\n    _cleanTags: function (lowLevelCheck, m, t) {\n      if (/^<[a-z0-9]+\\:[a-z0-9]+/i.test(m)) return m;\n      let v = null;\n      const tagName = t.match(/(?!<)[a-zA-Z0-9\\-]+/)[0].toLowerCase(); // blacklist\n\n      const bAttr = this._attributesTagsBlacklist[tagName];\n      if (bAttr) m = m.replace(bAttr, '');else m = m.replace(this._attributesBlacklistRegExp, ''); // whitelist\n\n      const wAttr = this._attributesTagsWhitelist[tagName];\n      if (wAttr) v = m.match(wAttr);else v = m.match(this._attributesWhitelistRegExp); // anchor\n\n      if (!lowLevelCheck || /<a\\b/i.test(t)) {\n        const sv = m.match(/(?:(?:id|name)\\s*=\\s*(?:\"|')[^\"']*(?:\"|'))/g);\n\n        if (sv) {\n          if (!v) v = [];\n          v.push(sv[0]);\n        }\n      } // span\n\n\n      if ((!lowLevelCheck || /<span/i.test(t)) && (!v || !/style=/i.test(v.toString()))) {\n        const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\n\n        if (sv) {\n          if (!v) v = [];\n          v.push(sv[0]);\n        }\n      } // img\n\n\n      if (/<img/i.test(t)) {\n        let w = '',\n            h = '';\n        const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\n        if (!v) v = [];\n\n        if (sv) {\n          w = sv[0].match(/width:(.+);/);\n          w = util.getNumber(w ? w[1] : '', -1) || '';\n          h = sv[0].match(/height:(.+);/);\n          h = util.getNumber(h ? h[1] : '', -1) || '';\n        }\n\n        if (!w || !h) {\n          const avw = m.match(/width\\s*=\\s*((?:\"|')[^\"']*(?:\"|'))/);\n          const avh = m.match(/height\\s*=\\s*((?:\"|')[^\"']*(?:\"|'))/);\n\n          if (avw || avh) {\n            w = !w ? util.getNumber(avw ? avw[1] : '') || '' : w;\n            h = !h ? util.getNumber(avh ? avh[1] : '') || '' : h;\n          }\n        }\n\n        v.push('data-origin=\"' + (w + ',' + h) + '\"');\n      }\n\n      if (v) {\n        for (let i = 0, len = v.length; i < len; i++) {\n          if (lowLevelCheck && /^class=\"(?!(__se__|se-|katex))/.test(v[i])) continue;\n          t += ' ' + (/^(?:href|src)\\s*=\\s*('|\"|\\s)*javascript\\s*\\:/i.test(v[i]) ? '' : v[i]);\n        }\n      }\n\n      return t;\n    },\n\n    /**\r\n     * @description Gets the clean HTML code for editor\r\n     * @param {String} html HTML string\r\n     * @param {String|RegExp|null} whitelist Regular expression of allowed tags.\r\n     * RegExp object is create by util.createTagsWhitelist method. (core.pasteTagsWhitelistRegExp)\r\n     * @param {String|RegExp|null} blacklist Regular expression of disallowed tags.\r\n     * RegExp object is create by util.createTagsBlacklist method. (core.pasteTagsBlacklistRegExp)\r\n     * @returns {String}\r\n     */\n    cleanHTML: function (html, whitelist, blacklist) {\n      html = this._deleteDisallowedTags(this._parser.parseFromString(html, 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true));\n\n      const dom = _d.createRange().createContextualFragment(html);\n\n      try {\n        util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, true);\n      } catch (error) {\n        console.warn('[SUNEDITOR.cleanHTML.consistencyCheck.fail] ' + error);\n      }\n\n      if (this.managedTagsInfo && this.managedTagsInfo.query) {\n        const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\n\n        for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\n          classList = [].slice.call(textCompList[i].classList);\n\n          for (let c = 0, cLen = classList.length; c < cLen; c++) {\n            initMethod = this.managedTagsInfo.map[classList[c]];\n\n            if (initMethod) {\n              initMethod(textCompList[i]);\n              break;\n            }\n          }\n        }\n      }\n\n      const domTree = dom.childNodes;\n      let cleanHTML = '';\n      let requireFormat = false;\n\n      for (let i = 0, len = domTree.length, t; i < len; i++) {\n        t = domTree[i];\n\n        if (t.nodeType === 1 && !util.isTextStyleElement(t) && !util.isBreak(t) && !util._disallowedTags(t)) {\n          requireFormat = true;\n          break;\n        }\n      }\n\n      for (let i = 0, len = domTree.length; i < len; i++) {\n        cleanHTML += this._makeLine(domTree[i], requireFormat);\n      }\n\n      cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\n\n      if (!cleanHTML) {\n        cleanHTML = html;\n      } else {\n        if (whitelist) cleanHTML = cleanHTML.replace(typeof whitelist === 'string' ? util.createTagsWhitelist(whitelist) : whitelist, '');\n        if (blacklist) cleanHTML = cleanHTML.replace(typeof blacklist === 'string' ? util.createTagsBlacklist(blacklist) : blacklist, '');\n      }\n\n      return this._tagConvertor(cleanHTML);\n    },\n\n    /**\r\n     * @description Converts contents into a format that can be placed in an editor\r\n     * @param {String} contents contents\r\n     * @returns {String}\r\n     */\n    convertContentsForEditor: function (contents) {\n      contents = this._deleteDisallowedTags(this._parser.parseFromString(contents, 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, false));\n\n      const dom = _d.createRange().createContextualFragment(contents);\n\n      try {\n        util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, false);\n      } catch (error) {\n        console.warn('[SUNEDITOR.convertContentsForEditor.consistencyCheck.fail] ' + error);\n      }\n\n      if (this.managedTagsInfo && this.managedTagsInfo.query) {\n        const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\n\n        for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\n          classList = [].slice.call(textCompList[i].classList);\n\n          for (let c = 0, cLen = classList.length; c < cLen; c++) {\n            initMethod = this.managedTagsInfo.map[classList[c]];\n\n            if (initMethod) {\n              initMethod(textCompList[i]);\n              break;\n            }\n          }\n        }\n      }\n\n      const domTree = dom.childNodes;\n      let cleanHTML = '';\n\n      for (let i = 0, t, p; i < domTree.length; i++) {\n        t = domTree[i];\n\n        if (!util.isFormatElement(t) && !util.isComponent(t) && !util.isMedia(t)) {\n          if (!p) p = util.createElement(options.defaultTag);\n          p.appendChild(t);\n          i--;\n\n          if (domTree[i + 1] && !util.isFormatElement(domTree[i + 1])) {\n            continue;\n          } else {\n            t = p;\n            p = null;\n          }\n        }\n\n        cleanHTML += this._makeLine(t, true);\n      }\n\n      if (cleanHTML.length === 0) return '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n      cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\n      return this._tagConvertor(cleanHTML);\n    },\n\n    /**\r\n     * @description Converts wysiwyg area element into a format that can be placed in an editor of code view mode\r\n     * @param {Element|String} html WYSIWYG element (context.element.wysiwyg) or HTML string.\r\n     * @param {Boolean} comp If true, does not line break and indentation of tags.\r\n     * @returns {String}\r\n     */\n    convertHTMLForCodeView: function (html, comp) {\n      let returnHTML = '';\n      const wRegExp = _w.RegExp;\n      const brReg = new wRegExp('^(BLOCKQUOTE|PRE|TABLE|THEAD|TBODY|TR|TH|TD|OL|UL|IMG|IFRAME|VIDEO|AUDIO|FIGURE|FIGCAPTION|HR|BR|CANVAS|SELECT)$', 'i');\n      const wDoc = typeof html === 'string' ? _d.createRange().createContextualFragment(html) : html;\n\n      const isFormat = function (current) {\n        return this.isFormatElement(current) || this.isComponent(current);\n      }.bind(util);\n\n      const brChar = comp ? '' : '\\n';\n      let indentSize = comp ? 0 : this._variable.codeIndent * 1;\n      indentSize = indentSize > 0 ? new _w.Array(indentSize + 1).join(' ') : '';\n\n      (function recursionFunc(element, indent) {\n        const children = element.childNodes;\n        const elementRegTest = brReg.test(element.nodeName);\n        const elementIndent = elementRegTest ? indent : '';\n\n        for (let i = 0, len = children.length, node, br, lineBR, nodeRegTest, tag, tagIndent; i < len; i++) {\n          node = children[i];\n          nodeRegTest = brReg.test(node.nodeName);\n          br = nodeRegTest ? brChar : '';\n          lineBR = isFormat(node) && !elementRegTest && !/^(TH|TD)$/i.test(element.nodeName) ? brChar : '';\n\n          if (node.nodeType === 8) {\n            returnHTML += '\\n<!-- ' + node.textContent.trim() + ' -->' + br;\n            continue;\n          }\n\n          if (node.nodeType === 3) {\n            if (!util.isList(node.parentElement)) returnHTML += util._HTMLConvertor(/^\\n+$/.test(node.data) ? '' : node.data);\n            continue;\n          }\n\n          if (node.childNodes.length === 0) {\n            returnHTML += (/^HR$/i.test(node.nodeName) ? brChar : '') + (/^PRE$/i.test(node.parentElement.nodeName) && /^BR$/i.test(node.nodeName) ? '' : elementIndent) + node.outerHTML + br;\n            continue;\n          }\n\n          if (!node.outerHTML) {\n            // IE\n            returnHTML += new _w.XMLSerializer().serializeToString(node);\n          } else {\n            tag = node.nodeName.toLowerCase();\n            tagIndent = elementIndent || nodeRegTest ? indent : '';\n            returnHTML += (lineBR || (elementRegTest ? '' : br)) + tagIndent + node.outerHTML.match(wRegExp('<' + tag + '[^>]*>', 'i'))[0] + br;\n            recursionFunc(node, indent + indentSize, '');\n            returnHTML += (/\\n$/.test(returnHTML) ? tagIndent : '') + '</' + tag + '>' + (lineBR || br || elementRegTest ? brChar : '' || /^(TH|TD)$/i.test(node.nodeName) ? brChar : '');\n          }\n        }\n      })(wDoc, '');\n\n      return returnHTML.trim() + brChar;\n    },\n\n    /**\r\n     * @description Add an event to document.\r\n     * When created as an Iframe, the same event is added to the document in the Iframe.\r\n     * @param {String} type Event type\r\n     * @param {Function} listener Event listener\r\n     * @param {Boolean} useCapture Use event capture\r\n     */\n    addDocEvent: function (type, listener, useCapture) {\n      _d.addEventListener(type, listener, useCapture);\n\n      if (options.iframe) {\n        this._wd.addEventListener(type, listener);\n      }\n    },\n\n    /**\r\n     * @description Remove events from document.\r\n     * When created as an Iframe, the event of the document inside the Iframe is also removed.\r\n     * @param {String} type Event type\r\n     * @param {Function} listener Event listener\r\n     */\n    removeDocEvent: function (type, listener) {\n      _d.removeEventListener(type, listener);\n\n      if (options.iframe) {\n        this._wd.removeEventListener(type, listener);\n      }\n    },\n\n    /**\r\n     * @description The current number of characters is counted and displayed.\r\n     * @param {String} inputText Text added.\r\n     * @returns {Boolean}\r\n     * @private\r\n     */\n    _charCount: function (inputText) {\n      const maxCharCount = options.maxCharCount;\n      const countType = options.charCounterType;\n      let nextCharCount = 0;\n      if (!!inputText) nextCharCount = this.getCharLength(inputText, countType);\n\n      this._setCharCount();\n\n      if (maxCharCount > 0) {\n        let over = false;\n        const count = functions.getCharCount(countType);\n\n        if (count > maxCharCount) {\n          over = true;\n\n          if (nextCharCount > 0) {\n            this._editorRange();\n\n            const range = this.getRange();\n            const endOff = range.endOffset - 1;\n            const text = this.getSelectionNode().textContent;\n            const slicePosition = range.endOffset - (count - maxCharCount);\n            this.getSelectionNode().textContent = text.slice(0, slicePosition < 0 ? 0 : slicePosition) + text.slice(range.endOffset, text.length);\n            this.setRange(range.endContainer, endOff, range.endContainer, endOff);\n          }\n        } else if (count + nextCharCount > maxCharCount) {\n          over = true;\n        }\n\n        if (over) {\n          this._callCounterBlink();\n\n          if (nextCharCount > 0) return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\r\n     * @description When \"element\" is added, if it is greater than \"options.maxCharCount\", false is returned.\r\n     * @param {Node|String} element Element node or String.\r\n     * @param {String|null} charCounterType charCounterType. If it is null, the options.charCounterType\r\n     * @returns {Boolean}\r\n     */\n    checkCharCount: function (element, charCounterType) {\n      if (options.maxCharCount) {\n        const countType = charCounterType || options.charCounterType;\n        const length = this.getCharLength(typeof element === 'string' ? element : this._charTypeHTML && element.nodeType === 1 ? element.outerHTML : element.textContent, countType);\n\n        if (length > 0 && length + functions.getCharCount(countType) > options.maxCharCount) {\n          this._callCounterBlink();\n\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\r\n     * @description Get the length of the content.\r\n     * Depending on the option, the length of the character is taken. (charCounterType)\r\n     * @param {String} content Content to count\r\n     * @param {String} charCounterType options.charCounterType\r\n     * @returns {Number}\r\n     */\n    getCharLength: function (content, charCounterType) {\n      return /byte/.test(charCounterType) ? util.getByteLength(content) : content.length;\n    },\n\n    /**\r\n     * @description Set the char count to charCounter element textContent.\r\n     * @private\r\n     */\n    _setCharCount: function () {\n      if (context.element.charCounter) {\n        _w.setTimeout(function () {\n          context.element.charCounter.textContent = functions.getCharCount(options.charCounterType);\n        });\n      }\n    },\n\n    /**\r\n     * @description The character counter blinks.\r\n     * @private\r\n     */\n    _callCounterBlink: function () {\n      const charWrapper = context.element.charWrapper;\n\n      if (charWrapper && !util.hasClass(charWrapper, 'se-blink')) {\n        util.addClass(charWrapper, 'se-blink');\n\n        _w.setTimeout(function () {\n          util.removeClass(charWrapper, 'se-blink');\n        }, 600);\n      }\n    },\n\n    /**\r\n     * @description Check the components such as image and video and modify them according to the format.\r\n     * @private\r\n     */\n    _checkComponents: function () {\n      for (let i = 0, len = this._fileInfoPluginsCheck.length; i < len; i++) {\n        this._fileInfoPluginsCheck[i]();\n      }\n    },\n\n    /**\r\n     * @description Initialize the information of the components.\r\n     * @private\r\n     */\n    _resetComponents: function () {\n      for (let i = 0, len = this._fileInfoPluginsReset.length; i < len; i++) {\n        this._fileInfoPluginsReset[i]();\n      }\n    },\n\n    /**\r\n     * @description Set method in the code view area\r\n     * @param {String} value HTML string\r\n     * @private\r\n     */\n    _setCodeView: function (value) {\n      if (options.codeMirrorEditor) {\n        options.codeMirrorEditor.getDoc().setValue(value);\n      } else {\n        context.element.code.value = value;\n      }\n    },\n\n    /**\r\n     * @description Get method in the code view area\r\n     * @private\r\n     */\n    _getCodeView: function () {\n      return options.codeMirrorEditor ? options.codeMirrorEditor.getDoc().getValue() : context.element.code.value;\n    },\n\n    /**\r\n     * @description remove class, display text.\r\n     * @param {Array|null} ignoredList Igonred button list\r\n     */\n    _setKeyEffect: function (ignoredList) {\n      const commandMap = this.commandMap;\n      const activePlugins = this.activePlugins;\n\n      for (let key in commandMap) {\n        if (ignoredList.indexOf(key) > -1 || !util.hasOwn(commandMap, key)) continue;\n\n        if (activePlugins.indexOf(key) > -1) {\n          plugins[key].active.call(this, null);\n        } else if (commandMap.OUTDENT && /^OUTDENT$/i.test(key)) {\n          if (!util.isImportantDisabled(commandMap.OUTDENT)) commandMap.OUTDENT.setAttribute('disabled', true);\n        } else if (commandMap.INDENT && /^INDENT$/i.test(key)) {\n          if (!util.isImportantDisabled(commandMap.INDENT)) commandMap.INDENT.removeAttribute('disabled');\n        } else {\n          util.removeClass(commandMap[key], 'active');\n        }\n      }\n    },\n\n    /**\r\n     * @description Initializ core variable\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _init: function (reload, _initHTML) {\n      const wRegExp = _w.RegExp;\n      this._ww = options.iframe ? context.element.wysiwygFrame.contentWindow : _w;\n      this._wd = _d;\n      this._charTypeHTML = options.charCounterType === 'byte-html';\n      this.wwComputedStyle = _w.getComputedStyle(context.element.wysiwyg);\n\n      if (!options.iframe && typeof _w.ShadowRoot === 'function') {\n        let child = context.element.wysiwygFrame;\n\n        while (child) {\n          if (child.shadowRoot) {\n            this._shadowRoot = child.shadowRoot;\n            break;\n          } else if (child instanceof _w.ShadowRoot) {\n            this._shadowRoot = child;\n            break;\n          }\n\n          child = child.parentNode;\n        }\n\n        if (this._shadowRoot) this._shadowRootControllerEventTarget = [];\n      } // set disallow text nodes\n\n\n      const disallowTextTags = _w.Object.keys(options._textTagsMap);\n\n      const allowTextTags = !options.addTagsWhitelist ? [] : options.addTagsWhitelist.split('|').filter(function (v) {\n        return /b|i|ins|s|strike/i.test(v);\n      });\n\n      for (let i = 0; i < allowTextTags.length; i++) {\n        disallowTextTags.splice(disallowTextTags.indexOf(allowTextTags[i].toLowerCase()), 1);\n      }\n\n      this._disallowedTextTagsRegExp = disallowTextTags.length === 0 ? null : new wRegExp('(<\\\\/?)(' + disallowTextTags.join('|') + ')\\\\b\\\\s*([^>^<]+)?\\\\s*(?=>)', 'gi'); // set whitelist\n\n      const getRegList = function (str, str2) {\n        return !str ? '^' : str === '*' ? '[a-z-]+' : !str2 ? str : str + '|' + str2;\n      }; // tags\n\n\n      const defaultAttr = 'contenteditable|colspan|rowspan|target|href|download|rel|src|alt|class|type|controls|data-format|data-size|data-file-size|data-file-name|data-origin|data-align|data-image-link|data-rotate|data-proportion|data-percentage|origin-size|data-exp|data-font-size';\n      this._allowHTMLComments = options._editorTagsWhitelist.indexOf('//') > -1 || options._editorTagsWhitelist === '*'; // html check\n\n      this._htmlCheckWhitelistRegExp = new wRegExp('^(' + getRegList(options._editorTagsWhitelist.replace('|//', ''), '') + ')$', 'i');\n      this._htmlCheckBlacklistRegExp = new wRegExp('^(' + (options.tagsBlacklist || '^') + ')$', 'i'); // tags\n\n      this.editorTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options._editorTagsWhitelist.replace('|//', '|<!--|-->'), ''));\n      this.editorTagsBlacklistRegExp = util.createTagsBlacklist(options.tagsBlacklist.replace('|//', '|<!--|-->')); // paste tags\n\n      this.pasteTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options.pasteTagsWhitelist, ''));\n      this.pasteTagsBlacklistRegExp = util.createTagsBlacklist(options.pasteTagsBlacklist); // attributes\n\n      const regEndStr = '\\\\s*=\\\\s*(\\\")[^\\\"]*\\\\1';\n      const _wAttr = options.attributesWhitelist;\n      let tagsAttr = {};\n      let allAttr = '';\n\n      if (!!_wAttr) {\n        for (let k in _wAttr) {\n          if (!util.hasOwn(_wAttr, k) || /^on[a-z]+$/i.test(_wAttr[k])) continue;\n\n          if (k === 'all') {\n            allAttr = getRegList(_wAttr[k], defaultAttr);\n          } else {\n            tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_wAttr[k], '') + ')' + regEndStr, 'ig');\n          }\n        }\n      }\n\n      this._attributesWhitelistRegExp = new wRegExp('\\\\s(?:' + (allAttr || defaultAttr) + ')' + regEndStr, 'ig');\n      this._attributesTagsWhitelist = tagsAttr; // blacklist\n\n      const _bAttr = options.attributesBlacklist;\n      tagsAttr = {};\n      allAttr = '';\n\n      if (!!_bAttr) {\n        for (let k in _bAttr) {\n          if (!util.hasOwn(_bAttr, k)) continue;\n\n          if (k === 'all') {\n            allAttr = getRegList(_bAttr[k], '');\n          } else {\n            tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_bAttr[k], '') + ')' + regEndStr, 'ig');\n          }\n        }\n      }\n\n      this._attributesBlacklistRegExp = new wRegExp('\\\\s(?:' + (allAttr || '^') + ')' + regEndStr, 'ig');\n      this._attributesTagsBlacklist = tagsAttr; // set modes\n\n      this._isInline = /inline/i.test(options.mode);\n      this._isBalloon = /balloon|balloon-always/i.test(options.mode);\n      this._isBalloonAlways = /balloon-always/i.test(options.mode); // caching buttons\n\n      this._cachingButtons(); // file components\n\n\n      this._fileInfoPluginsCheck = [];\n      this._fileInfoPluginsReset = []; // text components\n\n      this.managedTagsInfo = {\n        query: '',\n        map: {}\n      };\n      const managedClass = []; // Command and file plugins registration\n\n      this.activePlugins = [];\n      this._fileManager.tags = [];\n      this._fileManager.pluginMap = {};\n      let filePluginRegExp = [];\n      let plugin, button;\n\n      for (let key in plugins) {\n        if (!util.hasOwn(plugins, key)) continue;\n        plugin = plugins[key];\n        button = pluginCallButtons[key];\n\n        if (plugin.active && button) {\n          this.callPlugin(key, null, button);\n        }\n\n        if (typeof plugin.checkFileInfo === 'function' && typeof plugin.resetFileInfo === 'function') {\n          this.callPlugin(key, null, button);\n\n          this._fileInfoPluginsCheck.push(plugin.checkFileInfo.bind(this));\n\n          this._fileInfoPluginsReset.push(plugin.resetFileInfo.bind(this));\n        }\n\n        if (_w.Array.isArray(plugin.fileTags)) {\n          const fileTags = plugin.fileTags;\n          this.callPlugin(key, null, button);\n          this._fileManager.tags = this._fileManager.tags.concat(fileTags);\n          filePluginRegExp.push(key);\n\n          for (let tag = 0, tLen = fileTags.length; tag < tLen; tag++) {\n            this._fileManager.pluginMap[fileTags[tag].toLowerCase()] = key;\n          }\n        }\n\n        if (plugin.managedTags) {\n          const info = plugin.managedTags();\n          managedClass.push('.' + info.className);\n          this.managedTagsInfo.map[info.className] = info.method.bind(this);\n        }\n      }\n\n      this.managedTagsInfo.query = managedClass.toString();\n      this._fileManager.queryString = this._fileManager.tags.join(',');\n      this._fileManager.regExp = new wRegExp('^(' + this._fileManager.tags.join('|') + ')$', 'i');\n      this._fileManager.pluginRegExp = new wRegExp('^(' + (filePluginRegExp.length === 0 ? 'undefined' : filePluginRegExp.join('|')) + ')$', 'i'); // cache editor's element\n\n      this._variable._originCssText = context.element.topArea.style.cssText;\n      this._placeholder = context.element.placeholder;\n      this._lineBreaker = context.element.lineBreaker;\n      this._lineBreakerButton = this._lineBreaker.querySelector('button'); // Excute history function\n\n      this.history = _history(this, this._onChange_historyStack.bind(this)); // register notice module\n\n      this.addModule([_notice]); // Init, validate\n\n      if (options.iframe) {\n        this._wd = context.element.wysiwygFrame.contentDocument;\n        context.element.wysiwyg = this._wd.body;\n        if (options._editorStyles.editor) context.element.wysiwyg.style.cssText = options._editorStyles.editor;\n        if (options.height === 'auto') this._iframeAuto = this._wd.body;\n      }\n\n      this._initWysiwygArea(reload, _initHTML);\n\n      this.setDir(options.rtl ? 'rtl' : 'ltr');\n    },\n\n    /**\r\n     * @description Caching basic buttons to use\r\n     * @private\r\n     */\n    _cachingButtons: function () {\n      this.codeViewDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-code-view-enabled\"]):not([data-display=\"MORE\"])');\n      this.resizingDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-resizing-enabled\"]):not([data-display=\"MORE\"])');\n      this.saveButtonStates();\n      const tool = context.tool;\n      this.commandMap = {\n        SUB: tool.subscript,\n        SUP: tool.superscript,\n        OUTDENT: tool.outdent,\n        INDENT: tool.indent\n      };\n      this.commandMap[options.textTags.bold.toUpperCase()] = tool.bold;\n      this.commandMap[options.textTags.underline.toUpperCase()] = tool.underline;\n      this.commandMap[options.textTags.italic.toUpperCase()] = tool.italic;\n      this.commandMap[options.textTags.strike.toUpperCase()] = tool.strike;\n      this._styleCommandMap = {\n        fullScreen: tool.fullScreen,\n        showBlocks: tool.showBlocks,\n        codeView: tool.codeView\n      };\n    },\n\n    /**\r\n     * @description Initializ wysiwyg area (Only called from core._init)\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _initWysiwygArea: function (reload, _initHTML) {\n      context.element.wysiwyg.innerHTML = reload ? _initHTML : this.convertContentsForEditor(typeof _initHTML === 'string' ? _initHTML : context.element.originElement.value);\n    },\n\n    /**\r\n     * @description Called when there are changes to tags in the wysiwyg region.\r\n     * @private\r\n     */\n    _resourcesStateChange: function () {\n      this._iframeAutoHeight();\n\n      this._checkPlaceholder();\n    },\n\n    /**\r\n     * @description Called when after execute \"history.push\"\r\n     * @private\r\n     */\n    _onChange_historyStack: function () {\n      if (this.hasFocus) event._applyTagEffects();\n      this._variable.isChanged = true;\n      if (context.tool.save) context.tool.save.removeAttribute('disabled'); // user event\n\n      if (functions.onChange) functions.onChange(this.getContents(true), this);\n      if (context.element.toolbar.style.display === 'block') event._showToolbarBalloon();\n    },\n\n    /**\r\n     * @description Modify the height value of the iframe when the height of the iframe is automatic.\r\n     * @private\r\n     */\n    _iframeAutoHeight: function () {\n      if (this._iframeAuto) {\n        _w.setTimeout(function () {\n          context.element.wysiwygFrame.style.height = core._iframeAuto.offsetHeight + 'px';\n        });\n      }\n    },\n\n    /**\r\n     * @description Set display property when there is placeholder.\r\n     * @private\r\n     */\n    _checkPlaceholder: function () {\n      if (this._placeholder) {\n        if (this._variable.isCodeView) {\n          this._placeholder.style.display = 'none';\n          return;\n        }\n\n        const wysiwyg = context.element.wysiwyg;\n\n        if (!util.onlyZeroWidthSpace(wysiwyg.textContent) || wysiwyg.querySelector(util._allowedEmptyNodeList) || (wysiwyg.innerText.match(/\\n/g) || '').length > 1) {\n          this._placeholder.style.display = 'none';\n        } else {\n          this._placeholder.style.display = 'block';\n        }\n      }\n    },\n\n    /**\r\n     * @description If there is no default format, add a format and move \"selection\".\r\n     * @param {String|null} formatName Format tag name (default: 'P')\r\n     * @returns {undefined|null}\r\n     * @private\r\n     */\n    _setDefaultFormat: function (formatName) {\n      if (this._fileManager.pluginRegExp.test(this.currentControllerName)) return;\n      const range = this.getRange();\n      const commonCon = range.commonAncestorContainer;\n      const startCon = range.startContainer;\n      const rangeEl = util.getRangeFormatElement(commonCon, null);\n      let focusNode, offset, format;\n      const fileComponent = util.getParentElement(commonCon, util.isComponent);\n\n      if (fileComponent && !util.isTable(fileComponent)) {\n        return;\n      } else if (commonCon.nodeType === 1 && commonCon.getAttribute('data-se-embed') === 'true') {\n        let el = commonCon.nextElementSibling;\n        if (!util.isFormatElement(el)) el = this.appendFormatTag(commonCon, options.defaultTag);\n        this.setRange(el.firstChild, 0, el.firstChild, 0);\n        return;\n      }\n\n      if ((util.isRangeFormatElement(startCon) || util.isWysiwygDiv(startCon)) && (util.isComponent(startCon.children[range.startOffset]) || util.isComponent(startCon.children[range.startOffset - 1]))) return;\n      if (util.getParentElement(commonCon, util.isNotCheckingNode)) return null;\n\n      if (rangeEl) {\n        format = util.createElement(formatName || options.defaultTag);\n        format.innerHTML = rangeEl.innerHTML;\n        if (format.childNodes.length === 0) format.innerHTML = util.zeroWidthSpace;\n        rangeEl.innerHTML = format.outerHTML;\n        format = rangeEl.firstChild;\n        focusNode = util.getEdgeChildNodes(format, null).sc;\n\n        if (!focusNode) {\n          focusNode = util.createTextNode(util.zeroWidthSpace);\n          format.insertBefore(focusNode, format.firstChild);\n        }\n\n        offset = focusNode.textContent.length;\n        this.setRange(focusNode, offset, focusNode, offset);\n        return;\n      }\n\n      if (util.isRangeFormatElement(commonCon) && commonCon.childNodes.length <= 1) {\n        let br = null;\n\n        if (commonCon.childNodes.length === 1 && util.isBreak(commonCon.firstChild)) {\n          br = commonCon.firstChild;\n        } else {\n          br = util.createTextNode(util.zeroWidthSpace);\n          commonCon.appendChild(br);\n        }\n\n        this.setRange(br, 1, br, 1);\n        return;\n      }\n\n      this.execCommand('formatBlock', false, formatName || options.defaultTag);\n      focusNode = util.getEdgeChildNodes(commonCon, commonCon);\n      focusNode = focusNode ? focusNode.ec : commonCon;\n      format = util.getFormatElement(focusNode, null);\n\n      if (!format) {\n        this.removeRange();\n\n        this._editorRange();\n\n        return;\n      }\n\n      if (util.isBreak(format.nextSibling)) util.removeItem(format.nextSibling);\n      if (util.isBreak(format.previousSibling)) util.removeItem(format.previousSibling);\n\n      if (util.isBreak(focusNode)) {\n        const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n        focusNode.parentNode.insertBefore(zeroWidth, focusNode);\n        focusNode = zeroWidth;\n      }\n\n      this.effectNode = null;\n      this.nativeFocus();\n    },\n\n    /**\r\n     * @description Initialization after \"setOptions\"\r\n     * @param {Object} el context.element\r\n     * @param {String} _initHTML Initial html string\r\n     * @private\r\n     */\n    _setOptionsInit: function (el, _initHTML) {\n      this.context = context = _Context(el.originElement, this._getConstructed(el), options);\n      this._componentsInfoReset = true;\n\n      this._editorInit(true, _initHTML);\n    },\n\n    /**\r\n     * @description Initializ editor\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _editorInit: function (reload, _initHTML) {\n      // initialize core and add event listeners\n      this._init(reload, _initHTML);\n\n      event._addEvent();\n\n      this._setCharCount();\n\n      event._offStickyToolbar();\n\n      event.onResize_window(); // toolbar visibility\n\n      context.element.toolbar.style.visibility = '';\n\n      this._checkComponents();\n\n      this._componentsInfoInit = false;\n      this._componentsInfoReset = false;\n      this.history.reset(true);\n\n      this._resourcesStateChange();\n\n      _w.setTimeout(function () {\n        // user event\n        if (typeof functions.onload === 'function') functions.onload(core, reload);\n      });\n    },\n\n    /**\r\n     * @description Create and return an object to cache the new context.\r\n     * @param {Element} contextEl context.element\r\n     * @returns {Object}\r\n     * @private\r\n     */\n    _getConstructed: function (contextEl) {\n      return {\n        _top: contextEl.topArea,\n        _relative: contextEl.relative,\n        _toolBar: contextEl.toolbar,\n        _menuTray: contextEl._menuTray,\n        _editorArea: contextEl.editorArea,\n        _wysiwygArea: contextEl.wysiwygFrame,\n        _codeArea: contextEl.code,\n        _placeholder: contextEl.placeholder,\n        _resizingBar: contextEl.resizingBar,\n        _navigation: contextEl.navigation,\n        _charCounter: contextEl.charCounter,\n        _charWrapper: contextEl.charWrapper,\n        _loading: contextEl.loading,\n        _lineBreaker: contextEl.lineBreaker,\n        _lineBreaker_t: contextEl.lineBreaker_t,\n        _lineBreaker_b: contextEl.lineBreaker_b,\n        _resizeBack: contextEl.resizeBackground,\n        _stickyDummy: contextEl._stickyDummy,\n        _arrow: contextEl._arrow\n      };\n    }\n  };\n  /**\r\n   * @description event function\r\n   */\n\n  const event = {\n    _IEisComposing: false,\n    // In IE, there is no \"e.isComposing\" in the key-up event.\n    _lineBreakerBind: null,\n    _responsiveCurrentSize: 'default',\n    _responsiveButtonSize: null,\n    _responsiveButtons: null,\n    _directionKeyCode: new _w.RegExp('^(8|13|3[2-9]|40|46)$'),\n    _nonTextKeyCode: new _w.RegExp('^(8|13|1[6-9]|20|27|3[3-9]|40|45|46|11[2-9]|12[0-3]|144|145)$'),\n    _historyIgnoreKeyCode: new _w.RegExp('^(1[6-9]|20|27|3[3-9]|40|45|11[2-9]|12[0-3]|144|145)$'),\n    _onButtonsCheck: new _w.RegExp('^(' + _w.Object.keys(options._textTagsMap).join('|') + ')$', 'i'),\n    _frontZeroWidthReg: new _w.RegExp(util.zeroWidthSpace + '+', ''),\n    _keyCodeShortcut: {\n      65: 'A',\n      66: 'B',\n      83: 'S',\n      85: 'U',\n      73: 'I',\n      89: 'Y',\n      90: 'Z',\n      219: '[',\n      221: ']'\n    },\n    _shortcutCommand: function (keyCode, shift) {\n      let command = null;\n      const keyStr = event._keyCodeShortcut[keyCode];\n\n      switch (keyStr) {\n        case 'A':\n          command = 'selectAll';\n          break;\n\n        case 'B':\n          if (options.shortcutsDisable.indexOf('bold') === -1) {\n            command = 'bold';\n          }\n\n          break;\n\n        case 'S':\n          if (shift && options.shortcutsDisable.indexOf('strike') === -1) {\n            command = 'strike';\n          } else if (!shift && options.shortcutsDisable.indexOf('save') === -1) {\n            command = 'save';\n          }\n\n          break;\n\n        case 'U':\n          if (options.shortcutsDisable.indexOf('underline') === -1) {\n            command = 'underline';\n          }\n\n          break;\n\n        case 'I':\n          if (options.shortcutsDisable.indexOf('italic') === -1) {\n            command = 'italic';\n          }\n\n          break;\n\n        case 'Z':\n          if (options.shortcutsDisable.indexOf('undo') === -1) {\n            if (shift) {\n              command = 'redo';\n            } else {\n              command = 'undo';\n            }\n          }\n\n          break;\n\n        case 'Y':\n          if (options.shortcutsDisable.indexOf('undo') === -1) {\n            command = 'redo';\n          }\n\n          break;\n\n        case '[':\n          if (options.shortcutsDisable.indexOf('indent') === -1) {\n            command = options.rtl ? 'indent' : 'outdent';\n          }\n\n          break;\n\n        case ']':\n          if (options.shortcutsDisable.indexOf('indent') === -1) {\n            command = options.rtl ? 'outdent' : 'indent';\n          }\n\n          break;\n      }\n\n      if (!command) return false;\n      core.commandHandler(core.commandMap[command], command);\n      return true;\n    },\n    _applyTagEffects: function () {\n      let selectionNode = core.getSelectionNode();\n      if (selectionNode === core.effectNode) return;\n      core.effectNode = selectionNode;\n      const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\n      const commandMap = core.commandMap;\n      const classOnCheck = this._onButtonsCheck;\n      const commandMapNodes = [];\n      const currentNodes = [];\n      const activePlugins = core.activePlugins;\n      const cLen = activePlugins.length;\n      let nodeName = '';\n\n      while (selectionNode.firstChild) {\n        selectionNode = selectionNode.firstChild;\n      }\n\n      for (let element = selectionNode; !util.isWysiwygDiv(element); element = element.parentNode) {\n        if (!element) break;\n        if (element.nodeType !== 1 || util.isBreak(element)) continue;\n        nodeName = element.nodeName.toUpperCase();\n        currentNodes.push(nodeName);\n        /* Active plugins */\n\n        if (!core.isReadOnly) {\n          for (let c = 0, name; c < cLen; c++) {\n            name = activePlugins[c];\n\n            if (commandMapNodes.indexOf(name) === -1 && plugins[name].active.call(core, element)) {\n              commandMapNodes.push(name);\n            }\n          }\n        }\n\n        if (util.isFormatElement(element)) {\n          /* Outdent */\n          if (commandMapNodes.indexOf('OUTDENT') === -1 && commandMap.OUTDENT && !util.isImportantDisabled(commandMap.OUTDENT)) {\n            if (util.isListCell(element) || element.style[marginDir] && util.getNumber(element.style[marginDir], 0) > 0) {\n              commandMapNodes.push('OUTDENT');\n              commandMap.OUTDENT.removeAttribute('disabled');\n            }\n          }\n          /* Indent */\n\n\n          if (commandMapNodes.indexOf('INDENT') === -1 && commandMap.INDENT && !util.isImportantDisabled(commandMap.INDENT)) {\n            commandMapNodes.push('INDENT');\n\n            if (util.isListCell(element) && !element.previousElementSibling) {\n              commandMap.INDENT.setAttribute('disabled', true);\n            } else {\n              commandMap.INDENT.removeAttribute('disabled');\n            }\n          }\n\n          continue;\n        }\n        /** default active buttons [strong, ins, em, del, sub, sup] */\n\n\n        if (classOnCheck.test(nodeName)) {\n          commandMapNodes.push(nodeName);\n          util.addClass(commandMap[nodeName], 'active');\n        }\n      }\n\n      core._setKeyEffect(commandMapNodes);\n      /** save current nodes */\n\n\n      core._variable.currentNodes = currentNodes.reverse();\n      core._variable.currentNodesMap = commandMapNodes;\n      /**  Displays the current node structure to resizingBar */\n\n      if (options.showPathLabel) context.element.navigation.textContent = core._variable.currentNodes.join(' > ');\n    },\n    _cancelCaptionEdit: function () {\n      this.setAttribute('contenteditable', false);\n      this.removeEventListener('blur', event._cancelCaptionEdit);\n    },\n    _buttonsEventHandler: function (e) {\n      let target = e.target;\n      if (core._bindControllersOff) e.stopPropagation();\n\n      if (/^(input|textarea|select|option)$/i.test(target.nodeName)) {\n        core._antiBlur = false;\n      } else {\n        e.preventDefault();\n      }\n\n      if (util.getParentElement(target, '.se-submenu')) {\n        e.stopPropagation();\n        core._notHideToolbar = true;\n      } else {\n        let command = target.getAttribute('data-command');\n        let className = target.className;\n\n        while (!command && !/se-menu-list/.test(className) && !/sun-editor-common/.test(className)) {\n          target = target.parentNode;\n          command = target.getAttribute('data-command');\n          className = target.className;\n        }\n\n        if (command === core._submenuName || command === core._containerName) {\n          e.stopPropagation();\n        }\n      }\n    },\n    onClick_toolbar: function (e) {\n      let target = e.target;\n      let display = target.getAttribute('data-display');\n      let command = target.getAttribute('data-command');\n      let className = target.className;\n      core.controllersOff();\n\n      while (target.parentNode && !command && !/se-menu-list/.test(className) && !/se-toolbar/.test(className)) {\n        target = target.parentNode;\n        command = target.getAttribute('data-command');\n        display = target.getAttribute('data-display');\n        className = target.className;\n      }\n\n      if (!command && !display) return;\n      if (target.disabled) return;\n      if (!core.isReadOnly && !core.hasFocus) core.nativeFocus();\n      if (!core.isReadOnly && !core._variable.isCodeView) core._editorRange();\n      core.actionCall(command, display, target);\n    },\n    onMouseDown_wysiwyg: function (e) {\n      if (core.isReadOnly || util.isNonEditable(context.element.wysiwyg)) return;\n\n      core._editorRange(); // user event\n\n\n      if (typeof functions.onMouseDown === 'function' && functions.onMouseDown(e, core) === false) return;\n      const tableCell = util.getParentElement(e.target, util.isCell);\n\n      if (tableCell) {\n        const tablePlugin = core.plugins.table;\n\n        if (tablePlugin && tableCell !== tablePlugin._fixedCell && !tablePlugin._shift) {\n          core.callPlugin('table', function () {\n            tablePlugin.onTableCellMultiSelect.call(core, tableCell, false);\n          }, null);\n        }\n      }\n\n      if (core._isBalloon) {\n        event._hideToolbar();\n      }\n\n      if (/FIGURE/i.test(e.target.nodeName)) e.preventDefault();\n    },\n    onClick_wysiwyg: function (e) {\n      const targetElement = e.target;\n\n      if (core.isReadOnly) {\n        e.preventDefault();\n\n        if (util.isAnchor(targetElement)) {\n          _w.open(targetElement.href, targetElement.target);\n        }\n\n        return false;\n      }\n\n      if (util.isNonEditable(context.element.wysiwyg)) return; // user event\n\n      if (typeof functions.onClick === 'function' && functions.onClick(e, core) === false) return;\n      const fileComponentInfo = core.getFileComponent(targetElement);\n\n      if (fileComponentInfo) {\n        e.preventDefault();\n        core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n        return;\n      }\n\n      const figcaption = util.getParentElement(targetElement, 'FIGCAPTION');\n\n      if (util.isNonEditable(figcaption)) {\n        e.preventDefault();\n        figcaption.setAttribute('contenteditable', true);\n        figcaption.focus();\n\n        if (core._isInline && !core._inlineToolbarAttr.isShow) {\n          event._showToolbarInline();\n\n          const hideToolbar = function () {\n            event._hideToolbar();\n\n            figcaption.removeEventListener('blur', hideToolbar);\n          };\n\n          figcaption.addEventListener('blur', hideToolbar);\n        }\n      }\n\n      _w.setTimeout(core._editorRange.bind(core));\n\n      core._editorRange();\n\n      const selectionNode = core.getSelectionNode();\n      const formatEl = util.getFormatElement(selectionNode, null);\n      const rangeEl = util.getRangeFormatElement(selectionNode, null);\n\n      if (!formatEl && !util.isNonEditable(targetElement) && !util.isList(rangeEl)) {\n        const range = core.getRange();\n\n        if (util.getFormatElement(range.startContainer) === util.getFormatElement(range.endContainer)) {\n          if (util.isList(rangeEl)) {\n            e.preventDefault();\n            const oLi = util.createElement('LI');\n            const prevLi = selectionNode.nextElementSibling;\n            oLi.appendChild(selectionNode);\n            rangeEl.insertBefore(oLi, prevLi);\n            core.focus();\n          } else if (!util.isWysiwygDiv(selectionNode) && !util.isComponent(selectionNode) && (!util.isTable(selectionNode) || util.isCell(selectionNode)) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\n            e.preventDefault();\n            core.focus();\n          } else {\n            event._applyTagEffects();\n          }\n        }\n      } else {\n        event._applyTagEffects();\n      }\n\n      if (core._isBalloon) _w.setTimeout(event._toggleToolbarBalloon);\n    },\n    _balloonDelay: null,\n    _showToolbarBalloonDelay: function () {\n      if (event._balloonDelay) {\n        _w.clearTimeout(event._balloonDelay);\n      }\n\n      event._balloonDelay = _w.setTimeout(function () {\n        _w.clearTimeout(this._balloonDelay);\n\n        this._balloonDelay = null;\n\n        this._showToolbarBalloon();\n      }.bind(event), 350);\n    },\n    _toggleToolbarBalloon: function () {\n      core._editorRange();\n\n      const range = core.getRange();\n      if (core._bindControllersOff || !core._isBalloonAlways && range.collapsed) event._hideToolbar();else event._showToolbarBalloon(range);\n    },\n    _showToolbarBalloon: function (rangeObj) {\n      if (!core._isBalloon) return;\n      const range = rangeObj || core.getRange();\n      const toolbar = context.element.toolbar;\n      const topArea = context.element.topArea;\n      const selection = core.getSelection();\n      let isDirTop;\n\n      if (core._isBalloonAlways && range.collapsed) {\n        isDirTop = true;\n      } else if (selection.focusNode === selection.anchorNode) {\n        isDirTop = selection.focusOffset < selection.anchorOffset;\n      } else {\n        const childNodes = util.getListChildNodes(range.commonAncestorContainer, null);\n        isDirTop = util.getArrayIndex(childNodes, selection.focusNode) < util.getArrayIndex(childNodes, selection.anchorNode);\n      }\n\n      let rects = range.getClientRects();\n      rects = rects[isDirTop ? 0 : rects.length - 1];\n      const globalScroll = core.getGlobalScrollOffset();\n      let scrollLeft = globalScroll.left;\n      let scrollTop = globalScroll.top;\n      const editorWidth = topArea.offsetWidth;\n\n      const offsets = event._getEditorOffsets(null);\n\n      const stickyTop = offsets.top;\n      const editorLeft = offsets.left;\n      toolbar.style.top = '-10000px';\n      toolbar.style.visibility = 'hidden';\n      toolbar.style.display = 'block';\n\n      if (!rects) {\n        const node = core.getSelectionNode();\n\n        if (util.isFormatElement(node)) {\n          const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n          core.insertNode(zeroWidth, null, false);\n          core.setRange(zeroWidth, 1, zeroWidth, 1);\n\n          core._editorRange();\n\n          rects = core.getRange().getClientRects();\n          rects = rects[isDirTop ? 0 : rects.length - 1];\n        }\n\n        if (!rects) {\n          const nodeOffset = util.getOffset(node, context.element.wysiwygFrame);\n          rects = {\n            left: nodeOffset.left,\n            top: nodeOffset.top,\n            right: nodeOffset.left,\n            bottom: nodeOffset.top + node.offsetHeight,\n            noText: true\n          };\n          scrollLeft = 0;\n          scrollTop = 0;\n        }\n\n        isDirTop = true;\n      }\n\n      const arrowMargin = _w.Math.round(context.element._arrow.offsetWidth / 2);\n\n      const toolbarWidth = toolbar.offsetWidth;\n      const toolbarHeight = toolbar.offsetHeight;\n      const iframeRects = /iframe/i.test(context.element.wysiwygFrame.nodeName) ? context.element.wysiwygFrame.getClientRects()[0] : null;\n\n      if (iframeRects) {\n        rects = {\n          left: rects.left + iframeRects.left,\n          top: rects.top + iframeRects.top,\n          right: rects.right + iframeRects.right - iframeRects.width,\n          bottom: rects.bottom + iframeRects.bottom - iframeRects.height\n        };\n      }\n\n      event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\n\n      if (toolbarWidth !== toolbar.offsetWidth || toolbarHeight !== toolbar.offsetHeight) {\n        event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\n      }\n\n      if (options.toolbarContainer) {\n        const editorParent = topArea.parentElement;\n        let container = options.toolbarContainer;\n        let left = container.offsetLeft;\n        let top = container.offsetTop;\n\n        while (!container.parentElement.contains(editorParent) || !/^(BODY|HTML)$/i.test(container.parentElement.nodeName)) {\n          container = container.offsetParent;\n          left += container.offsetLeft;\n          top += container.offsetTop;\n        }\n\n        toolbar.style.left = toolbar.offsetLeft - left + topArea.offsetLeft + 'px';\n        toolbar.style.top = toolbar.offsetTop - top + topArea.offsetTop + 'px';\n      }\n\n      toolbar.style.visibility = '';\n    },\n    _setToolbarOffset: function (isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin) {\n      const padding = 1;\n      const toolbarWidth = toolbar.offsetWidth;\n      const toolbarHeight = rects.noText && !isDirTop ? 0 : toolbar.offsetHeight;\n      const absoluteLeft = (isDirTop ? rects.left : rects.right) - editorLeft - toolbarWidth / 2 + scrollLeft;\n      const overRight = absoluteLeft + toolbarWidth - editorWidth;\n      let t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\n      let l = absoluteLeft < 0 ? padding : overRight < 0 ? absoluteLeft : absoluteLeft - overRight - padding - 1;\n      let resetTop = false;\n      const space = t + (isDirTop ? event._getEditorOffsets(null).top : toolbar.offsetHeight - context.element.wysiwyg.offsetHeight);\n\n      if (!isDirTop && space > 0 && event._getPageBottomSpace() < space) {\n        isDirTop = true;\n        resetTop = true;\n      } else if (isDirTop && _d.documentElement.offsetTop > space) {\n        isDirTop = false;\n        resetTop = true;\n      }\n\n      if (resetTop) t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\n      toolbar.style.left = _w.Math.floor(l) + 'px';\n      toolbar.style.top = _w.Math.floor(t) + 'px';\n\n      if (isDirTop) {\n        util.removeClass(context.element._arrow, 'se-arrow-up');\n        util.addClass(context.element._arrow, 'se-arrow-down');\n        context.element._arrow.style.top = toolbarHeight + 'px';\n      } else {\n        util.removeClass(context.element._arrow, 'se-arrow-down');\n        util.addClass(context.element._arrow, 'se-arrow-up');\n        context.element._arrow.style.top = -arrowMargin + 'px';\n      }\n\n      const arrow_left = _w.Math.floor(toolbarWidth / 2 + (absoluteLeft - l));\n\n      context.element._arrow.style.left = (arrow_left + arrowMargin > toolbar.offsetWidth ? toolbar.offsetWidth - arrowMargin : arrow_left < arrowMargin ? arrowMargin : arrow_left) + 'px';\n    },\n    _showToolbarInline: function () {\n      if (!core._isInline) return;\n      const toolbar = context.element.toolbar;\n      if (options.toolbarContainer) toolbar.style.position = 'relative';else toolbar.style.position = 'absolute';\n      toolbar.style.visibility = 'hidden';\n      toolbar.style.display = 'block';\n      core._inlineToolbarAttr.width = toolbar.style.width = options.toolbarWidth;\n      core._inlineToolbarAttr.top = toolbar.style.top = (options.toolbarContainer ? 0 : -1 - toolbar.offsetHeight) + 'px';\n      if (typeof functions.showInline === 'function') functions.showInline(toolbar, context, core);\n      event.onScroll_window();\n      core._inlineToolbarAttr.isShow = true;\n      toolbar.style.visibility = '';\n    },\n    _hideToolbar: function () {\n      if (!core._notHideToolbar && !core._variable.isFullScreen) {\n        context.element.toolbar.style.display = 'none';\n        core._inlineToolbarAttr.isShow = false;\n      }\n    },\n    onInput_wysiwyg: function (e) {\n      if (core.isReadOnly || core.isDisabled) {\n        e.preventDefault();\n        e.stopPropagation();\n        core.history.go(core.history.getCurrentIndex());\n        return false;\n      }\n\n      core._editorRange(); // user event\n\n\n      if (typeof functions.onInput === 'function' && functions.onInput(e, core) === false) return;\n      const data = (e.data === null ? '' : e.data === undefined ? ' ' : e.data) || '';\n\n      if (!core._charCount(data)) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } // history stack\n\n\n      core.history.push(true);\n    },\n    _isUneditableNode: function (range, isFront) {\n      const container = isFront ? range.startContainer : range.endContainer;\n      const offset = isFront ? range.startOffset : range.endOffset;\n      const siblingKey = isFront ? 'previousSibling' : 'nextSibling';\n      const isElement = container.nodeType === 1;\n      let siblingNode;\n\n      if (isElement) {\n        siblingNode = event._isUneditableNode_getSibling(container.childNodes[offset], siblingKey, container);\n        return siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\n      } else {\n        siblingNode = event._isUneditableNode_getSibling(container, siblingKey, container);\n        return core.isEdgePoint(container, offset, isFront ? 'front' : 'end') && siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\n      }\n    },\n    _isUneditableNode_getSibling: function (selectNode, siblingKey, container) {\n      if (!selectNode) return null;\n      let siblingNode = selectNode[siblingKey];\n\n      if (!siblingNode) {\n        siblingNode = util.getFormatElement(container);\n        siblingNode = siblingNode ? siblingNode[siblingKey] : null;\n        if (siblingNode && !util.isComponent(siblingNode)) siblingNode = siblingKey === 'previousSibling' ? siblingNode.firstElementChild : siblingNode.lastElementChild;else return null;\n      }\n\n      return siblingNode;\n    },\n    _onShortcutKey: false,\n    onKeyDown_wysiwyg: function (e) {\n      const keyCode = e.keyCode;\n      const shift = e.shiftKey;\n      const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\n      const alt = e.altKey;\n      event._IEisComposing = keyCode === 229;\n\n      if (!ctrl && core.isReadOnly && !event._directionKeyCode.test(keyCode)) {\n        e.preventDefault();\n        return false;\n      }\n\n      core.submenuOff();\n\n      if (core._isBalloon) {\n        event._hideToolbar();\n      } // user event\n\n\n      if (typeof functions.onKeyDown === 'function' && functions.onKeyDown(e, core) === false) return;\n      /** Shortcuts */\n\n      if (ctrl && event._shortcutCommand(keyCode, shift)) {\n        event._onShortcutKey = true;\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else if (event._onShortcutKey) {\n        event._onShortcutKey = false;\n      }\n      /** default key action */\n\n\n      let selectionNode = core.getSelectionNode();\n      const range = core.getRange();\n      const selectRange = !range.collapsed || range.startContainer !== range.endContainer;\n      const fileComponentName = core._fileManager.pluginRegExp.test(core.currentControllerName) ? core.currentControllerName : '';\n      let formatEl = util.getFormatElement(selectionNode, null) || selectionNode;\n      let rangeEl = util.getRangeFormatElement(formatEl, null);\n\n      switch (keyCode) {\n        case 8:\n          /** backspace key */\n          if (!selectRange) {\n            if (fileComponentName) {\n              e.preventDefault();\n              e.stopPropagation();\n              core.plugins[fileComponentName].destroy.call(core);\n              break;\n            }\n          }\n\n          if (selectRange && event._hardDelete()) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          }\n\n          if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild && !util.isComponent(selectionNode) && core._setDefaultFormat(options.defaultTag) !== null) {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n          }\n\n          if (!selectRange && !formatEl.previousElementSibling && range.startOffset === 0 && !selectionNode.previousSibling && !util.isListCell(formatEl) && util.isFormatElement(formatEl) && (!util.isFreeFormatElement(formatEl) || util.isClosureFreeFormatElement(formatEl))) {\n            // closure range\n            if (util.isClosureRangeFormatElement(formatEl.parentNode)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            } // maintain default format\n\n\n            if (util.isWysiwygDiv(formatEl.parentNode) && formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.textContent))) {\n              e.preventDefault();\n              e.stopPropagation();\n\n              if (formatEl.nodeName.toUpperCase() === options.defaultTag.toUpperCase()) {\n                formatEl.innerHTML = '<br>';\n                const attrs = formatEl.attributes;\n\n                while (attrs[0]) {\n                  formatEl.removeAttribute(attrs[0].name);\n                }\n              } else {\n                const defaultFormat = util.createElement(options.defaultTag);\n                defaultFormat.innerHTML = '<br>';\n                formatEl.parentElement.replaceChild(defaultFormat, formatEl);\n              }\n\n              core.nativeFocus();\n              return false;\n            }\n          } // clean remove tag\n\n\n          if (formatEl && range.startContainer === range.endContainer && selectionNode.nodeType === 3 && !util.isFormatElement(selectionNode.parentNode)) {\n            if (range.collapsed ? selectionNode.textContent.length === 1 : range.endOffset - range.startOffset === selectionNode.textContent.length) {\n              e.preventDefault();\n              let offset = null;\n              let prev = selectionNode.parentNode.previousSibling;\n              const next = selectionNode.parentNode.nextSibling;\n\n              if (!prev) {\n                if (!next) {\n                  prev = util.createElement('BR');\n                  formatEl.appendChild(prev);\n                } else {\n                  prev = next;\n                  offset = 0;\n                }\n              }\n\n              selectionNode.textContent = '';\n              util.removeItemAllParents(selectionNode, null, formatEl);\n              offset = typeof offset === 'number' ? offset : prev.nodeType === 3 ? prev.textContent.length : 1;\n              core.setRange(prev, offset, prev, offset);\n              break;\n            }\n          } // tag[contenteditable=\"false\"]\n\n\n          if (event._isUneditableNode(range, true)) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          } // nested list\n\n\n          const commonCon = range.commonAncestorContainer;\n          formatEl = util.getFormatElement(range.startContainer, null);\n          rangeEl = util.getRangeFormatElement(formatEl, null);\n\n          if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\n            if (util.isListCell(formatEl) && util.isList(rangeEl) && (util.isListCell(rangeEl.parentNode) || formatEl.previousElementSibling) && (selectionNode === formatEl || selectionNode.nodeType === 3 && (!selectionNode.previousSibling || util.isList(selectionNode.previousSibling))) && (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.startContainer) : range.startOffset === 0 && range.collapsed)) {\n              if (range.startContainer !== range.endContainer) {\n                e.preventDefault();\n                core.removeNode();\n\n                if (range.startContainer.nodeType === 3) {\n                  core.setRange(range.startContainer, range.startContainer.textContent.length, range.startContainer, range.startContainer.textContent.length);\n                } // history stack\n\n\n                core.history.push(true);\n              } else {\n                let prev = formatEl.previousElementSibling || rangeEl.parentNode;\n\n                if (util.isListCell(prev)) {\n                  e.preventDefault();\n                  let prevLast = prev;\n\n                  if (!prev.contains(formatEl) && util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\n                    prevLast = prevLast.lastElementChild.lastElementChild;\n\n                    while (util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\n                      prevLast = prevLast.lastElementChild && prevLast.lastElementChild.lastElementChild;\n                    }\n\n                    prev = prevLast;\n                  }\n\n                  let con = prev === rangeEl.parentNode ? rangeEl.previousSibling : prev.lastChild;\n\n                  if (!con) {\n                    con = util.createTextNode(util.zeroWidthSpace);\n                    rangeEl.parentNode.insertBefore(con, rangeEl.parentNode.firstChild);\n                  }\n\n                  const offset = con.nodeType === 3 ? con.textContent.length : 1;\n                  const children = formatEl.childNodes;\n                  let after = con;\n                  let child = children[0];\n\n                  while (child = children[0]) {\n                    prev.insertBefore(child, after.nextSibling);\n                    after = child;\n                  }\n\n                  util.removeItem(formatEl);\n                  if (rangeEl.children.length === 0) util.removeItem(rangeEl);\n                  core.setRange(con, offset, con, offset); // history stack\n\n                  core.history.push(true);\n                }\n              }\n\n              break;\n            } // detach range\n\n\n            if (!selectRange && range.startOffset === 0) {\n              let detach = true;\n              let comm = commonCon;\n\n              while (comm && comm !== rangeEl && !util.isWysiwygDiv(comm)) {\n                if (comm.previousSibling) {\n                  if (comm.previousSibling.nodeType === 1 || !util.onlyZeroWidthSpace(comm.previousSibling.textContent.trim())) {\n                    detach = false;\n                    break;\n                  }\n                }\n\n                comm = comm.parentNode;\n              }\n\n              if (detach && rangeEl.parentNode) {\n                e.preventDefault();\n                core.detachRangeFormatElement(rangeEl, util.isListCell(formatEl) ? [formatEl] : null, null, false, false); // history stack\n\n                core.history.push(true);\n                break;\n              }\n            }\n          } // component\n\n\n          if (!selectRange && formatEl && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\n            const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] : selectionNode;\n            const prev = formatEl.previousSibling; // select file component\n\n            const ignoreZWS = (commonCon.nodeType === 3 || util.isBreak(commonCon)) && !commonCon.previousSibling && range.startOffset === 0;\n\n            if (!sel.previousSibling && (util.isComponent(commonCon.previousSibling) || ignoreZWS && util.isComponent(prev))) {\n              const fileComponentInfo = core.getFileComponent(prev);\n\n              if (fileComponentInfo) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (formatEl.textContent.length === 0) util.removeItem(formatEl);\n                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\n              } else if (util.isComponent(prev)) {\n                e.preventDefault();\n                e.stopPropagation();\n                util.removeItem(prev);\n              }\n\n              break;\n            } // delete nonEditable\n\n\n            if (util.isNonEditable(sel.previousSibling)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel.previousSibling);\n              break;\n            }\n          }\n\n          break;\n\n        case 46:\n          /** delete key */\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            core.plugins[fileComponentName].destroy.call(core);\n            break;\n          }\n\n          if (selectRange && event._hardDelete()) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          } // tag[contenteditable=\"false\"]\n\n\n          if (event._isUneditableNode(range, false)) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          } // component\n\n\n          if ((util.isFormatElement(selectionNode) || selectionNode.nextSibling === null || util.onlyZeroWidthSpace(selectionNode.nextSibling) && selectionNode.nextSibling.nextSibling === null) && range.startOffset === selectionNode.textContent.length) {\n            const nextEl = formatEl.nextElementSibling;\n            if (!nextEl) break;\n\n            if (util.isComponent(nextEl)) {\n              e.preventDefault();\n\n              if (util.onlyZeroWidthSpace(formatEl)) {\n                util.removeItem(formatEl); // table component\n\n                if (util.isTable(nextEl)) {\n                  let cell = util.getChildElement(nextEl, util.isCell, false);\n                  cell = cell.firstElementChild || cell;\n                  core.setRange(cell, 0, cell, 0);\n                  break;\n                }\n              } // select file component\n\n\n              const fileComponentInfo = core.getFileComponent(nextEl);\n\n              if (fileComponentInfo) {\n                e.stopPropagation();\n                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\n              } else if (util.isComponent(nextEl)) {\n                e.stopPropagation();\n                util.removeItem(nextEl);\n              }\n\n              break;\n            }\n          }\n\n          if (!selectRange && (core.isEdgePoint(range.endContainer, range.endOffset) || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\n            const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] || selectionNode : selectionNode; // delete nonEditable\n\n            if (sel && util.isNonEditable(sel.nextSibling)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel.nextSibling);\n              break;\n            } else if (util.isComponent(sel)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel);\n              break;\n            }\n          } // nested list\n\n\n          formatEl = util.getFormatElement(range.startContainer, null);\n          rangeEl = util.getRangeFormatElement(formatEl, null);\n\n          if (util.isListCell(formatEl) && util.isList(rangeEl) && (selectionNode === formatEl || selectionNode.nodeType === 3 && (!selectionNode.nextSibling || util.isList(selectionNode.nextSibling)) && (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.endContainer) : range.endOffset === selectionNode.textContent.length && range.collapsed))) {\n            if (range.startContainer !== range.endContainer) core.removeNode();\n            let next = util.getArrayItem(formatEl.children, util.isList, false);\n            next = next || formatEl.nextElementSibling || rangeEl.parentNode.nextElementSibling;\n\n            if (next && (util.isList(next) || util.getArrayItem(next.children, util.isList, false))) {\n              e.preventDefault();\n              let con, children;\n\n              if (util.isList(next)) {\n                const child = next.firstElementChild;\n                children = child.childNodes;\n                con = children[0];\n\n                while (children[0]) {\n                  formatEl.insertBefore(children[0], next);\n                }\n\n                util.removeItem(child);\n              } else {\n                con = next.firstChild;\n                children = next.childNodes;\n\n                while (children[0]) {\n                  formatEl.appendChild(children[0]);\n                }\n\n                util.removeItem(next);\n              }\n\n              core.setRange(con, 0, con, 0); // history stack\n\n              core.history.push(true);\n            }\n\n            break;\n          }\n\n          break;\n\n        case 9:\n          /** tab key */\n          if (fileComponentName || options.tabDisable) break;\n          e.preventDefault();\n          if (ctrl || alt || util.isWysiwygDiv(selectionNode)) break;\n          const isEdge = !range.collapsed || core.isEdgePoint(range.startContainer, range.startOffset);\n          const selectedFormats = core.getSelectedElements(null);\n          selectionNode = core.getSelectionNode();\n          const cells = [];\n          let lines = [];\n          let fc = util.isListCell(selectedFormats[0]),\n              lc = util.isListCell(selectedFormats[selectedFormats.length - 1]);\n          let r = {\n            sc: range.startContainer,\n            so: range.startOffset,\n            ec: range.endContainer,\n            eo: range.endOffset\n          };\n\n          for (let i = 0, len = selectedFormats.length, f; i < len; i++) {\n            f = selectedFormats[i];\n\n            if (util.isListCell(f)) {\n              if (!f.previousElementSibling && !shift) {\n                continue;\n              } else {\n                cells.push(f);\n              }\n            } else {\n              lines.push(f);\n            }\n          } // Nested list\n\n\n          if (cells.length > 0 && isEdge && core.plugins.list) {\n            r = core.plugins.list.editInsideList.call(core, shift, cells);\n          } else {\n            // table\n            const tableCell = util.getParentElement(selectionNode, util.isCell);\n\n            if (tableCell && isEdge) {\n              const table = util.getParentElement(tableCell, 'table');\n              const cells = util.getListChildren(table, util.isCell);\n              let idx = shift ? util.prevIdx(cells, tableCell) : util.nextIdx(cells, tableCell);\n              if (idx === cells.length && !shift) idx = 0;\n              if (idx === -1 && shift) idx = cells.length - 1;\n              let moveCell = cells[idx];\n              if (!moveCell) break;\n              moveCell = moveCell.firstElementChild || moveCell;\n              core.setRange(moveCell, 0, moveCell, 0);\n              break;\n            }\n\n            lines = lines.concat(cells);\n            fc = lc = null;\n          } // Lines tab(4)\n\n\n          if (lines.length > 0) {\n            if (!shift) {\n              const tabText = util.createTextNode(new _w.Array(core._variable.tabSize + 1).join('\\u00A0'));\n\n              if (lines.length === 1) {\n                const textRange = core.insertNode(tabText, null, true);\n                if (!textRange) return false;\n\n                if (!fc) {\n                  r.sc = tabText;\n                  r.so = textRange.endOffset;\n                }\n\n                if (!lc) {\n                  r.ec = tabText;\n                  r.eo = textRange.endOffset;\n                }\n              } else {\n                const len = lines.length - 1;\n\n                for (let i = 0, child; i <= len; i++) {\n                  child = lines[i].firstChild;\n                  if (!child) continue;\n\n                  if (util.isBreak(child)) {\n                    lines[i].insertBefore(tabText.cloneNode(false), child);\n                  } else {\n                    child.textContent = tabText.textContent + child.textContent;\n                  }\n                }\n\n                const firstChild = util.getChildElement(lines[0], 'text', false);\n                const endChild = util.getChildElement(lines[len], 'text', true);\n\n                if (!fc && firstChild) {\n                  r.sc = firstChild;\n                  r.so = 0;\n                }\n\n                if (!lc && endChild) {\n                  r.ec = endChild;\n                  r.eo = endChild.textContent.length;\n                }\n              }\n            } else {\n              const len = lines.length - 1;\n\n              for (let i = 0, line; i <= len; i++) {\n                line = lines[i].childNodes;\n\n                for (let c = 0, cLen = line.length, child; c < cLen; c++) {\n                  child = line[c];\n                  if (!child) break;\n                  if (util.onlyZeroWidthSpace(child)) continue;\n\n                  if (/^\\s{1,4}$/.test(child.textContent)) {\n                    util.removeItem(child);\n                  } else if (/^\\s{1,4}/.test(child.textContent)) {\n                    child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\n                  }\n\n                  break;\n                }\n              }\n\n              const firstChild = util.getChildElement(lines[0], 'text', false);\n              const endChild = util.getChildElement(lines[len], 'text', true);\n\n              if (!fc && firstChild) {\n                r.sc = firstChild;\n                r.so = 0;\n              }\n\n              if (!lc && endChild) {\n                r.ec = endChild;\n                r.eo = endChild.textContent.length;\n              }\n            }\n          }\n\n          core.setRange(r.sc, r.so, r.ec, r.eo); // history stack\n\n          core.history.push(false);\n          break;\n\n        case 13:\n          /** enter key */\n          const freeFormatEl = util.getFreeFormatElement(selectionNode, null);\n\n          if (core._charTypeHTML) {\n            let enterHTML = '';\n\n            if (!shift && freeFormatEl || shift) {\n              enterHTML = '<br>';\n            } else {\n              enterHTML = '<' + formatEl.nodeName + '><br></' + formatEl.nodeName + '>';\n            }\n\n            if (!core.checkCharCount(enterHTML, 'byte-html')) {\n              e.preventDefault();\n              return false;\n            }\n          }\n\n          if (!shift) {\n            const formatInners = core._isEdgeFormat(range.endContainer, range.endOffset, 'end');\n\n            if (formatInners && /^H[1-6]$/i.test(formatEl.nodeName) || /^HR$/i.test(formatEl.nodeName)) {\n              e.preventDefault();\n              let temp = null;\n              const newFormat = core.appendFormatTag(formatEl, options.defaultTag);\n\n              if (formatInners && formatInners.length > 0) {\n                temp = formatInners.pop();\n                const innerNode = temp;\n\n                while (formatInners.length > 0) {\n                  temp = temp.appendChild(formatInners.pop());\n                }\n\n                newFormat.appendChild(innerNode);\n              }\n\n              temp = !temp ? newFormat.firstChild : temp.appendChild(newFormat.firstChild);\n              core.setRange(temp, 0, temp, 0);\n              break;\n            } else if (options.lineAttrReset && formatEl) {\n              e.preventDefault();\n              e.stopPropagation();\n              let newEl;\n\n              if (!range.collapsed) {\n                const isMultiLine = util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null);\n                const r = core.removeNode();\n\n                if (isMultiLine) {\n                  newEl = util.getFormatElement(r.container, null);\n\n                  if (!r.prevContainer) {\n                    const newFormat = formatEl.cloneNode(false);\n                    newFormat.innerHTML = '<br>';\n                    newEl.parentNode.insertBefore(newFormat, newEl);\n                  } else if (newEl !== formatEl && newEl.nextElementSibling === formatEl) {\n                    newEl = formatEl;\n                  }\n                } else {\n                  newEl = util.splitElement(r.container, r.offset, 0);\n                }\n              } else {\n                newEl = util.splitElement(range.endContainer, range.endOffset, 0);\n              }\n\n              const resetAttr = options.lineAttrReset === '*' ? null : options.lineAttrReset;\n              const attrs = newEl.attributes;\n              let i = 0;\n\n              while (attrs[i]) {\n                if (resetAttr && resetAttr.test(attrs[i].name)) {\n                  i++;\n                  continue;\n                }\n\n                newEl.removeAttribute(attrs[i].name);\n              }\n\n              core.setRange(newEl.firstChild, 0, newEl.firstChild, 0);\n              break;\n            }\n\n            if (freeFormatEl) {\n              e.preventDefault();\n              const selectionFormat = selectionNode === freeFormatEl;\n              const wSelection = core.getSelection();\n              const children = selectionNode.childNodes,\n                    offset = wSelection.focusOffset,\n                    prev = selectionNode.previousElementSibling,\n                    next = selectionNode.nextSibling;\n\n              if (!util.isClosureFreeFormatElement(freeFormatEl) && !!children && (selectionFormat && range.collapsed && children.length - 1 <= offset + 1 && util.isBreak(children[offset]) && (!children[offset + 1] || (!children[offset + 2] || util.onlyZeroWidthSpace(children[offset + 2].textContent)) && children[offset + 1].nodeType === 3 && util.onlyZeroWidthSpace(children[offset + 1].textContent)) && offset > 0 && util.isBreak(children[offset - 1]) || !selectionFormat && util.onlyZeroWidthSpace(selectionNode.textContent) && util.isBreak(prev) && (util.isBreak(prev.previousSibling) || !util.onlyZeroWidthSpace(prev.previousSibling.textContent)) && (!next || !util.isBreak(next) && util.onlyZeroWidthSpace(next.textContent)))) {\n                if (selectionFormat) util.removeItem(children[offset - 1]);else util.removeItem(selectionNode);\n                const newEl = core.appendFormatTag(freeFormatEl, util.isFormatElement(freeFormatEl.nextElementSibling) && !util.isRangeFormatElement(freeFormatEl.nextElementSibling) ? freeFormatEl.nextElementSibling : null);\n                util.copyFormatAttributes(newEl, freeFormatEl);\n                core.setRange(newEl, 1, newEl, 1);\n                break;\n              }\n\n              if (selectionFormat) {\n                functions.insertHTML(range.collapsed && util.isBreak(range.startContainer.childNodes[range.startOffset - 1]) ? '<br>' : '<br><br>', true, false);\n                let focusNode = wSelection.focusNode;\n                const wOffset = wSelection.focusOffset;\n\n                if (freeFormatEl === focusNode) {\n                  focusNode = focusNode.childNodes[wOffset - offset > 1 ? wOffset - 1 : wOffset];\n                }\n\n                core.setRange(focusNode, 1, focusNode, 1);\n              } else {\n                const focusNext = wSelection.focusNode.nextSibling;\n                const br = util.createElement('BR');\n                core.insertNode(br, null, false);\n                const brPrev = br.previousSibling,\n                      brNext = br.nextSibling;\n\n                if (!util.isBreak(focusNext) && !util.isBreak(brPrev) && (!brNext || util.onlyZeroWidthSpace(brNext))) {\n                  br.parentNode.insertBefore(br.cloneNode(false), br);\n                  core.setRange(br, 1, br, 1);\n                } else {\n                  core.setRange(brNext, 0, brNext, 0);\n                }\n              }\n\n              event._onShortcutKey = true;\n              break;\n            }\n          }\n\n          if (selectRange) break;\n\n          if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\n            const range = core.getRange();\n\n            if (core.isEdgePoint(range.endContainer, range.endOffset) && util.isList(selectionNode.nextSibling)) {\n              e.preventDefault();\n              const newEl = util.createElement('LI');\n              const br = util.createElement('BR');\n              newEl.appendChild(br);\n              formatEl.parentNode.insertBefore(newEl, formatEl.nextElementSibling);\n              newEl.appendChild(selectionNode.nextSibling);\n              core.setRange(br, 1, br, 1);\n              break;\n            }\n\n            if ((range.commonAncestorContainer.nodeType === 3 ? !range.commonAncestorContainer.nextElementSibling : true) && util.onlyZeroWidthSpace(formatEl.innerText.trim())) {\n              e.preventDefault();\n              let newEl = null;\n\n              if (util.isListCell(rangeEl.parentNode)) {\n                rangeEl = formatEl.parentNode.parentNode.parentNode;\n                newEl = util.splitElement(formatEl, null, util.getElementDepth(formatEl) - 2);\n\n                if (!newEl) {\n                  const newListCell = util.createElement('LI');\n                  newListCell.innerHTML = '<br>';\n                  rangeEl.insertBefore(newListCell, newEl);\n                  newEl = newListCell;\n                }\n              } else {\n                const newFormat = util.isCell(rangeEl.parentNode) ? 'DIV' : util.isList(rangeEl.parentNode) ? 'LI' : util.isFormatElement(rangeEl.nextElementSibling) && !util.isRangeFormatElement(rangeEl.nextElementSibling) ? rangeEl.nextElementSibling.nodeName : util.isFormatElement(rangeEl.previousElementSibling) && !util.isRangeFormatElement(rangeEl.previousElementSibling) ? rangeEl.previousElementSibling.nodeName : options.defaultTag;\n                newEl = util.createElement(newFormat);\n                const edge = core.detachRangeFormatElement(rangeEl, [formatEl], null, true, true);\n                edge.cc.insertBefore(newEl, edge.ec);\n              }\n\n              newEl.innerHTML = '<br>';\n              util.removeItemAllParents(formatEl, null, null);\n              core.setRange(newEl, 1, newEl, 1);\n              break;\n            }\n          }\n\n          if (rangeEl && util.getParentElement(rangeEl, 'FIGCAPTION') && util.getParentElement(rangeEl, util.isList)) {\n            e.preventDefault();\n            formatEl = core.appendFormatTag(formatEl, null);\n            core.setRange(formatEl, 0, formatEl, 0);\n          }\n\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            const compContext = context[fileComponentName];\n            const container = compContext._container;\n            const sibling = container.previousElementSibling || container.nextElementSibling;\n            let newEl = null;\n\n            if (util.isListCell(container.parentNode)) {\n              newEl = util.createElement('BR');\n            } else {\n              newEl = util.createElement(util.isFormatElement(sibling) && !util.isRangeFormatElement(sibling) ? sibling.nodeName : options.defaultTag);\n              newEl.innerHTML = '<br>';\n            }\n\n            container.parentNode.insertBefore(newEl, container);\n            core.callPlugin(fileComponentName, function () {\n              if (core.selectComponent(compContext._element, fileComponentName) === false) core.blur();\n            }, null);\n          }\n\n          break;\n\n        case 27:\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            core.controllersOff();\n            return false;\n          }\n\n          break;\n      }\n\n      if (shift && keyCode === 16) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tablePlugin = core.plugins.table;\n\n        if (tablePlugin && !tablePlugin._shift && !tablePlugin._ref) {\n          const cell = util.getParentElement(formatEl, util.isCell);\n\n          if (cell) {\n            tablePlugin.onTableCellMultiSelect.call(core, cell, true);\n            return;\n          }\n        }\n      } else if (shift && (util.isOSX_IOS ? alt : ctrl) && keyCode === 32) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nbsp = core.insertNode(util.createTextNode('\\u00a0'));\n\n        if (nbsp && nbsp.container) {\n          core.setRange(nbsp.container, nbsp.endOffset, nbsp.container, nbsp.endOffset);\n          return;\n        }\n      }\n\n      const textKey = !ctrl && !alt && !selectRange && !event._nonTextKeyCode.test(keyCode);\n\n      if (textKey && range.collapsed && range.startContainer === range.endContainer && util.isBreak(range.commonAncestorContainer)) {\n        const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n        core.insertNode(zeroWidth, null, false);\n        core.setRange(zeroWidth, 1, zeroWidth, 1);\n      }\n    },\n    onKeyUp_wysiwyg: function (e) {\n      if (event._onShortcutKey) return;\n\n      core._editorRange();\n\n      const keyCode = e.keyCode;\n      const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\n      const alt = e.altKey;\n\n      if (core.isReadOnly) {\n        if (!ctrl && event._directionKeyCode.test(keyCode)) event._applyTagEffects();\n        return;\n      }\n\n      const range = core.getRange();\n      let selectionNode = core.getSelectionNode();\n\n      if (core._isBalloon && (core._isBalloonAlways && keyCode !== 27 || !range.collapsed)) {\n        if (core._isBalloonAlways) {\n          if (keyCode !== 27) event._showToolbarBalloonDelay();\n        } else {\n          event._showToolbarBalloon();\n\n          return;\n        }\n      }\n      /** when format tag deleted */\n\n\n      if (keyCode === 8 && util.isWysiwygDiv(selectionNode) && selectionNode.textContent === '' && selectionNode.children.length === 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        selectionNode.innerHTML = '';\n        const oFormatTag = util.createElement(util.isFormatElement(core._variable.currentNodes[0]) ? core._variable.currentNodes[0] : options.defaultTag);\n        oFormatTag.innerHTML = '<br>';\n        selectionNode.appendChild(oFormatTag);\n        core.setRange(oFormatTag, 0, oFormatTag, 0);\n\n        event._applyTagEffects();\n\n        core.history.push(false);\n        return;\n      }\n\n      const formatEl = util.getFormatElement(selectionNode, null);\n      const rangeEl = util.getRangeFormatElement(selectionNode, null);\n\n      if (!formatEl && range.collapsed && !util.isComponent(selectionNode) && !util.isList(selectionNode) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\n        selectionNode = core.getSelectionNode();\n      }\n\n      if (event._directionKeyCode.test(keyCode)) {\n        event._applyTagEffects();\n      }\n\n      const textKey = !ctrl && !alt && !event._nonTextKeyCode.test(keyCode);\n\n      if (textKey && selectionNode.nodeType === 3 && util.zeroWidthRegExp.test(selectionNode.textContent) && !(e.isComposing !== undefined ? e.isComposing : event._IEisComposing)) {\n        let so = range.startOffset,\n            eo = range.endOffset;\n        const frontZeroWidthCnt = (selectionNode.textContent.substring(0, eo).match(event._frontZeroWidthReg) || '').length;\n        so = range.startOffset - frontZeroWidthCnt;\n        eo = range.endOffset - frontZeroWidthCnt;\n        selectionNode.textContent = selectionNode.textContent.replace(util.zeroWidthRegExp, '');\n        core.setRange(selectionNode, so < 0 ? 0 : so, selectionNode, eo < 0 ? 0 : eo);\n      }\n\n      core._charCount(''); // user event\n\n\n      if (typeof functions.onKeyUp === 'function' && functions.onKeyUp(e, core) === false) return; // history stack\n\n      if (!ctrl && !alt && !event._historyIgnoreKeyCode.test(keyCode)) {\n        core.history.push(true);\n      }\n    },\n    onScroll_wysiwyg: function (e) {\n      core.controllersOff();\n      if (core._isBalloon) event._hideToolbar(); // user event\n\n      if (typeof functions.onScroll === 'function') functions.onScroll(e, core);\n    },\n    onFocus_wysiwyg: function (e) {\n      if (core._antiBlur) return;\n      core.hasFocus = true;\n\n      event._applyTagEffects();\n\n      if (core._isInline) event._showToolbarInline(); // user event\n\n      if (typeof functions.onFocus === 'function') functions.onFocus(e, core);\n    },\n    onBlur_wysiwyg: function (e) {\n      if (core._antiBlur || core._variable.isCodeView) return;\n      core.hasFocus = false;\n      core.controllersOff();\n      if (core._isInline || core._isBalloon) event._hideToolbar();\n\n      core._setKeyEffect([]);\n\n      core._variable.currentNodes = [];\n      core._variable.currentNodesMap = [];\n      if (options.showPathLabel) context.element.navigation.textContent = ''; // user event\n\n      if (typeof functions.onBlur === 'function') functions.onBlur(e, core);\n    },\n    onMouseDown_resizingBar: function (e) {\n      e.stopPropagation();\n      core.submenuOff();\n      core.controllersOff();\n      const prevHeight = util.getNumber(context.element.wysiwygFrame.style.height, 0);\n      core._variable.resizeClientY = e.clientY;\n      context.element.resizeBackground.style.display = 'block';\n\n      function closureFunc() {\n        context.element.resizeBackground.style.display = 'none';\n\n        _d.removeEventListener('mousemove', event._resize_editor);\n\n        _d.removeEventListener('mouseup', closureFunc);\n\n        if (typeof functions.onResizeEditor === 'function') functions.onResizeEditor(util.getNumber(context.element.wysiwygFrame.style.height, 0), prevHeight, core);\n      }\n\n      _d.addEventListener('mousemove', event._resize_editor);\n\n      _d.addEventListener('mouseup', closureFunc);\n    },\n    _resize_editor: function (e) {\n      const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - core._variable.resizeClientY);\n      context.element.wysiwygFrame.style.height = context.element.code.style.height = (resizeInterval < core._variable.minResizingSize ? core._variable.minResizingSize : resizeInterval) + 'px';\n      core._variable.resizeClientY = e.clientY;\n    },\n    onResize_window: function () {\n      core.controllersOff();\n      const responsiveSize = event._responsiveButtonSize;\n\n      if (responsiveSize) {\n        let w = 0;\n\n        if ((core._isBalloon || core._isInline) && options.toolbarWidth === 'auto') {\n          w = context.element.topArea.offsetWidth;\n        } else {\n          w = context.element.toolbar.offsetWidth;\n        }\n\n        let responsiveWidth = 'default';\n\n        for (let i = 1, len = responsiveSize.length; i < len; i++) {\n          if (w < responsiveSize[i]) {\n            responsiveWidth = responsiveSize[i] + '';\n            break;\n          }\n        }\n\n        if (event._responsiveCurrentSize !== responsiveWidth) {\n          event._responsiveCurrentSize = responsiveWidth;\n          functions.setToolbarButtons(event._responsiveButtons[responsiveWidth]);\n        }\n      }\n\n      if (context.element.toolbar.offsetWidth === 0) return;\n\n      if (context.fileBrowser && context.fileBrowser.area.style.display === 'block') {\n        context.fileBrowser.body.style.maxHeight = _w.innerHeight - context.fileBrowser.header.offsetHeight - 50 + 'px';\n      }\n\n      if (core.submenuActiveButton && core.submenu) {\n        core._setMenuPosition(core.submenuActiveButton, core.submenu);\n      }\n\n      if (core._variable.isFullScreen) {\n        core._variable.innerHeight_fullScreen += _w.innerHeight - context.element.toolbar.offsetHeight - core._variable.innerHeight_fullScreen;\n        context.element.editorArea.style.height = core._variable.innerHeight_fullScreen + 'px';\n        return;\n      }\n\n      if (core._variable.isCodeView && core._isInline) {\n        event._showToolbarInline();\n\n        return;\n      }\n\n      core._iframeAutoHeight();\n\n      if (core._sticky) {\n        context.element.toolbar.style.width = context.element.topArea.offsetWidth - 2 + 'px';\n        event.onScroll_window();\n      }\n    },\n    onScroll_window: function () {\n      if (core._variable.isFullScreen || context.element.toolbar.offsetWidth === 0 || options.stickyToolbar < 0) return;\n      const element = context.element;\n      const editorHeight = element.editorArea.offsetHeight;\n      const y = (this.scrollY || _d.documentElement.scrollTop) + options.stickyToolbar;\n      const editorTop = event._getEditorOffsets(options.toolbarContainer).top - (core._isInline ? element.toolbar.offsetHeight : 0);\n      const inlineOffset = core._isInline && y - editorTop > 0 ? y - editorTop - context.element.toolbar.offsetHeight : 0;\n\n      if (y < editorTop) {\n        event._offStickyToolbar();\n      } else if (y + core._variable.minResizingSize >= editorHeight + editorTop) {\n        if (!core._sticky) event._onStickyToolbar(inlineOffset);\n        element.toolbar.style.top = inlineOffset + editorHeight + editorTop + options.stickyToolbar - y - core._variable.minResizingSize + 'px';\n      } else if (y >= editorTop) {\n        event._onStickyToolbar(inlineOffset);\n      }\n    },\n    _getEditorOffsets: function (container) {\n      let offsetEl = container || context.element.topArea;\n      let t = 0,\n          l = 0,\n          s = 0;\n\n      while (offsetEl) {\n        t += offsetEl.offsetTop;\n        l += offsetEl.offsetLeft;\n        s += offsetEl.scrollTop;\n        offsetEl = offsetEl.offsetParent;\n      }\n\n      return {\n        top: t,\n        left: l,\n        scroll: s\n      };\n    },\n    _getPageBottomSpace: function () {\n      return _d.documentElement.scrollHeight - (event._getEditorOffsets(null).top + context.element.topArea.offsetHeight);\n    },\n    _onStickyToolbar: function (inlineOffset) {\n      const element = context.element;\n\n      if (!core._isInline && !options.toolbarContainer) {\n        element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\n        element._stickyDummy.style.display = 'block';\n      }\n\n      element.toolbar.style.top = options.stickyToolbar + inlineOffset + 'px';\n      element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\n      util.addClass(element.toolbar, 'se-toolbar-sticky');\n      core._sticky = true;\n    },\n    _offStickyToolbar: function () {\n      const element = context.element;\n      element._stickyDummy.style.display = 'none';\n      element.toolbar.style.top = core._isInline ? core._inlineToolbarAttr.top : '';\n      element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : '';\n      element.editorArea.style.marginTop = '';\n      util.removeClass(element.toolbar, 'se-toolbar-sticky');\n      core._sticky = false;\n    },\n    _codeViewAutoHeight: function () {\n      if (core._variable.isFullScreen) return;\n      context.element.code.style.height = context.element.code.scrollHeight + 'px';\n    },\n    // FireFox - table delete, Chrome - image, video, audio\n    _hardDelete: function () {\n      const range = core.getRange();\n      const sc = range.startContainer;\n      const ec = range.endContainer; // table\n\n      const sCell = util.getRangeFormatElement(sc);\n      const eCell = util.getRangeFormatElement(ec);\n      const sIsCell = util.isCell(sCell);\n      const eIsCell = util.isCell(eCell);\n      const ancestor = range.commonAncestorContainer;\n\n      if ((sIsCell && !sCell.previousElementSibling && !sCell.parentElement.previousElementSibling || eIsCell && !eCell.nextElementSibling && !eCell.parentElement.nextElementSibling) && sCell !== eCell) {\n        if (!sIsCell) {\n          util.removeItem(util.getParentElement(eCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n        } else if (!eIsCell) {\n          util.removeItem(util.getParentElement(sCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n        } else {\n          util.removeItem(util.getParentElement(sCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n          core.nativeFocus();\n          return true;\n        }\n      } // component\n\n\n      const sComp = sc.nodeType === 1 ? util.getParentElement(sc, '.se-component') : null;\n      const eComp = ec.nodeType === 1 ? util.getParentElement(ec, '.se-component') : null;\n      if (sComp) util.removeItem(sComp);\n      if (eComp) util.removeItem(eComp);\n      return false;\n    },\n    onPaste_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\n      if (!clipboardData) return true;\n      return event._dataTransferAction('paste', e, clipboardData);\n    },\n    _setClipboardComponent: function (e, info, clipboardData) {\n      e.preventDefault();\n      e.stopPropagation();\n      clipboardData.setData('text/html', info.component.outerHTML);\n    },\n    onCopy_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData; // user event\n\n      if (typeof functions.onCopy === 'function' && !functions.onCopy(e, clipboardData, core)) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n\n      const info = core.currentFileComponentInfo;\n\n      if (info && !util.isIE) {\n        event._setClipboardComponent(e, info, clipboardData);\n\n        util.addClass(info.component, 'se-component-copy'); // copy effect\n\n        _w.setTimeout(function () {\n          util.removeClass(info.component, 'se-component-copy');\n        }, 150);\n      }\n    },\n    onSave_wysiwyg: function (content) {\n      // user event\n      if (typeof functions.onSave === 'function') {\n        functions.onSave(content, core);\n        return;\n      }\n    },\n    onCut_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData; // user event\n\n      if (typeof functions.onCut === 'function' && !functions.onCut(e, clipboardData, core)) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n\n      const info = core.currentFileComponentInfo;\n\n      if (info && !util.isIE) {\n        event._setClipboardComponent(e, info, clipboardData);\n\n        util.removeItem(info.component);\n        core.controllersOff();\n      }\n\n      _w.setTimeout(function () {\n        // history stack\n        core.history.push(false);\n      });\n    },\n    onDrop_wysiwyg: function (e) {\n      if (core.isReadOnly || util.isIE) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n\n      const dataTransfer = e.dataTransfer;\n      if (!dataTransfer) return true;\n      core.removeNode();\n\n      event._setDropLocationSelection(e);\n\n      return event._dataTransferAction('drop', e, dataTransfer);\n    },\n    _setDropLocationSelection: function (e) {\n      if (e.rangeParent) {\n        core.setRange(e.rangeParent, e.rangeOffset, e.rangeParent, e.rangeOffset);\n      } else if (core._wd.caretRangeFromPoint) {\n        const r = core._wd.caretRangeFromPoint(e.clientX, e.clientY);\n\n        core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\n      } else {\n        const r = core.getRange();\n        core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\n      }\n    },\n    _dataTransferAction: function (type, e, data) {\n      let plainText, cleanData;\n\n      if (util.isIE) {\n        plainText = data.getData('Text');\n        const range = core.getRange();\n        const tempDiv = util.createElement('DIV');\n        const tempRange = {\n          sc: range.startContainer,\n          so: range.startOffset,\n          ec: range.endContainer,\n          eo: range.endOffset\n        };\n        tempDiv.setAttribute('contenteditable', true);\n        tempDiv.style.cssText = 'position:absolute; top:0; left:0; width:1px; height:1px; overflow:hidden;';\n        context.element.relative.appendChild(tempDiv);\n        tempDiv.focus();\n\n        _w.setTimeout(function () {\n          cleanData = tempDiv.innerHTML;\n          util.removeItem(tempDiv);\n          core.setRange(tempRange.sc, tempRange.so, tempRange.ec, tempRange.eo);\n\n          event._setClipboardData(type, e, plainText, cleanData, data);\n        });\n\n        return true;\n      } else {\n        plainText = data.getData('text/plain');\n        cleanData = data.getData('text/html');\n\n        if (event._setClipboardData(type, e, plainText, cleanData, data) === false) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    },\n    _setClipboardData: function (type, e, plainText, cleanData, data) {\n      // MS word, OneNode, Excel\n      const MSData = /class=[\"']*Mso(Normal|List)/i.test(cleanData) || /content=[\"']*Word.Document/i.test(cleanData) || /content=[\"']*OneNote.File/i.test(cleanData) || /content=[\"']*Excel.Sheet/i.test(cleanData);\n      const onlyText = !cleanData;\n\n      if (!onlyText) {\n        if (MSData) {\n          cleanData = cleanData.replace(/\\n/g, ' ');\n          plainText = plainText.replace(/\\n/g, ' ');\n        } else {\n          cleanData = (plainText === cleanData ? plainText : cleanData).replace(/\\n/g, '<br>');\n        }\n\n        cleanData = core.cleanHTML(cleanData, core.pasteTagsWhitelistRegExp, core.pasteTagsBlacklistRegExp);\n      } else {\n        cleanData = util._HTMLConvertor(plainText).replace(/\\n/g, '<br>');\n      }\n\n      const maxCharCount = core._charCount(core._charTypeHTML ? cleanData : plainText); // user event - paste\n\n\n      if (type === 'paste' && typeof functions.onPaste === 'function') {\n        const value = functions.onPaste(e, cleanData, maxCharCount, core);\n        if (!value) return false;\n        if (typeof value === 'string') cleanData = value;\n      } // user event - drop\n\n\n      if (type === 'drop' && typeof functions.onDrop === 'function') {\n        const value = functions.onDrop(e, cleanData, maxCharCount, core);\n        if (!value) return false;\n        if (typeof value === 'string') cleanData = value;\n      } // files\n\n\n      const files = data.files;\n\n      if (files.length > 0 && !MSData) {\n        if (/^image/.test(files[0].type) && core.plugins.image) {\n          functions.insertImage(files);\n        }\n\n        return false;\n      }\n\n      if (!maxCharCount) {\n        return false;\n      }\n\n      if (cleanData) {\n        functions.insertHTML(cleanData, true, false);\n        return false;\n      }\n    },\n    onMouseMove_wysiwyg: function (e) {\n      if (core.isDisabled || core.isReadOnly) return false;\n      const component = util.getParentElement(e.target, util.isComponent);\n      const lineBreakerStyle = core._lineBreaker.style;\n\n      if (component && !core.currentControllerName) {\n        const ctxEl = context.element;\n        let scrollTop = 0;\n        let el = ctxEl.wysiwyg;\n\n        do {\n          scrollTop += el.scrollTop;\n          el = el.parentElement;\n        } while (el && !/^(BODY|HTML)$/i.test(el.nodeName));\n\n        const wScroll = ctxEl.wysiwyg.scrollTop;\n\n        const offsets = event._getEditorOffsets(null);\n\n        const componentTop = util.getOffset(component, ctxEl.wysiwygFrame).top + wScroll;\n        const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? ctxEl.toolbar.offsetHeight : 0);\n        const c = componentTop + (options.iframe ? scrollTop : offsets.top);\n        const isList = util.isListCell(component.parentNode);\n        let dir = '',\n            top = '';\n\n        if ((isList ? !component.previousSibling : !util.isFormatElement(component.previousElementSibling)) && y < c + 20) {\n          top = componentTop;\n          dir = 't';\n        } else if ((isList ? !component.nextSibling : !util.isFormatElement(component.nextElementSibling)) && y > c + component.offsetHeight - 20) {\n          top = componentTop + component.offsetHeight;\n          dir = 'b';\n        } else {\n          lineBreakerStyle.display = 'none';\n          return;\n        }\n\n        core._variable._lineBreakComp = component;\n        core._variable._lineBreakDir = dir;\n        lineBreakerStyle.top = top - wScroll + 'px';\n        core._lineBreakerButton.style.left = util.getOffset(component).left + component.offsetWidth / 2 - 15 + 'px';\n        lineBreakerStyle.display = 'block';\n      } // off line breaker\n      else if (lineBreakerStyle.display !== 'none') {\n        lineBreakerStyle.display = 'none';\n      }\n    },\n    _onMouseDown_lineBreak: function (e) {\n      e.preventDefault();\n    },\n    _onLineBreak: function (e) {\n      e.preventDefault();\n      const component = core._variable._lineBreakComp;\n      const dir = !this ? core._variable._lineBreakDir : this;\n      const isList = util.isListCell(component.parentNode);\n      const format = util.createElement(isList ? 'BR' : util.isCell(component.parentNode) ? 'DIV' : options.defaultTag);\n      if (!isList) format.innerHTML = '<br>';\n      if (core._charTypeHTML && !core.checkCharCount(format.outerHTML, 'byte-html')) return;\n      component.parentNode.insertBefore(format, dir === 't' ? component : component.nextSibling);\n      core._lineBreaker.style.display = 'none';\n      core._variable._lineBreakComp = null;\n      const focusEl = isList ? format : format.firstChild;\n      core.setRange(focusEl, 1, focusEl, 1); // history stack\n\n      core.history.push(false);\n    },\n    _addEvent: function () {\n      const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\n      /** toolbar event */\n\n      context.element.toolbar.addEventListener('mousedown', event._buttonsEventHandler, false);\n\n      context.element._menuTray.addEventListener('mousedown', event._buttonsEventHandler, false);\n\n      context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\n      /** editor area */\n\n      eventWysiwyg.addEventListener('mousedown', event.onMouseDown_wysiwyg, false);\n      eventWysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\n      eventWysiwyg.addEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg, false);\n      eventWysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\n      eventWysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\n      eventWysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\n      eventWysiwyg.addEventListener('copy', event.onCopy_wysiwyg, false);\n      eventWysiwyg.addEventListener('cut', event.onCut_wysiwyg, false);\n      eventWysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\n      eventWysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\n      eventWysiwyg.addEventListener('focus', event.onFocus_wysiwyg, false);\n      eventWysiwyg.addEventListener('blur', event.onBlur_wysiwyg, false);\n      /** line breaker */\n\n      event._lineBreakerBind = {\n        a: event._onLineBreak.bind(''),\n        t: event._onLineBreak.bind('t'),\n        b: event._onLineBreak.bind('b')\n      };\n      eventWysiwyg.addEventListener('mousemove', event.onMouseMove_wysiwyg, false);\n\n      core._lineBreakerButton.addEventListener('mousedown', event._onMouseDown_lineBreak, false);\n\n      core._lineBreakerButton.addEventListener('click', event._lineBreakerBind.a, false);\n\n      context.element.lineBreaker_t.addEventListener('mousedown', event._lineBreakerBind.t, false);\n      context.element.lineBreaker_b.addEventListener('mousedown', event._lineBreakerBind.b, false);\n      /** Events are registered only when there is a table plugin.  */\n\n      if (core.plugins.table) {\n        eventWysiwyg.addEventListener('touchstart', event.onMouseDown_wysiwyg, {\n          passive: true,\n          useCapture: false\n        });\n      }\n      /** code view area auto line */\n\n\n      if (options.height === 'auto' && !options.codeMirrorEditor) {\n        context.element.code.addEventListener('keydown', event._codeViewAutoHeight, false);\n        context.element.code.addEventListener('keyup', event._codeViewAutoHeight, false);\n        context.element.code.addEventListener('paste', event._codeViewAutoHeight, false);\n      }\n      /** resizingBar */\n\n\n      if (context.element.resizingBar) {\n        if (/\\d+/.test(options.height) && options.resizeEnable) {\n          context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\n        } else {\n          util.addClass(context.element.resizingBar, 'se-resizing-none');\n        }\n      }\n      /** window event */\n\n\n      event._setResponsiveToolbar();\n\n      _w.removeEventListener('resize', event.onResize_window);\n\n      _w.removeEventListener('scroll', event.onScroll_window);\n\n      _w.addEventListener('resize', event.onResize_window, false);\n\n      if (options.stickyToolbar > -1) {\n        _w.addEventListener('scroll', event.onScroll_window, false);\n      }\n    },\n    _removeEvent: function () {\n      const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\n      context.element.toolbar.removeEventListener('mousedown', event._buttonsEventHandler);\n\n      context.element._menuTray.removeEventListener('mousedown', event._buttonsEventHandler);\n\n      context.element.toolbar.removeEventListener('click', event.onClick_toolbar);\n      eventWysiwyg.removeEventListener('mousedown', event.onMouseDown_wysiwyg);\n      eventWysiwyg.removeEventListener('click', event.onClick_wysiwyg);\n      eventWysiwyg.removeEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg);\n      eventWysiwyg.removeEventListener('keydown', event.onKeyDown_wysiwyg);\n      eventWysiwyg.removeEventListener('keyup', event.onKeyUp_wysiwyg);\n      eventWysiwyg.removeEventListener('paste', event.onPaste_wysiwyg);\n      eventWysiwyg.removeEventListener('copy', event.onCopy_wysiwyg);\n      eventWysiwyg.removeEventListener('cut', event.onCut_wysiwyg);\n      eventWysiwyg.removeEventListener('drop', event.onDrop_wysiwyg);\n      eventWysiwyg.removeEventListener('scroll', event.onScroll_wysiwyg);\n      eventWysiwyg.removeEventListener('mousemove', event.onMouseMove_wysiwyg);\n\n      core._lineBreakerButton.removeEventListener('mousedown', event._onMouseDown_lineBreak);\n\n      core._lineBreakerButton.removeEventListener('click', event._lineBreakerBind.a);\n\n      context.element.lineBreaker_t.removeEventListener('mousedown', event._lineBreakerBind.t);\n      context.element.lineBreaker_b.removeEventListener('mousedown', event._lineBreakerBind.b);\n      event._lineBreakerBind = null;\n      eventWysiwyg.removeEventListener('touchstart', event.onMouseDown_wysiwyg, {\n        passive: true,\n        useCapture: false\n      });\n      eventWysiwyg.removeEventListener('focus', event.onFocus_wysiwyg);\n      eventWysiwyg.removeEventListener('blur', event.onBlur_wysiwyg);\n      context.element.code.removeEventListener('keydown', event._codeViewAutoHeight);\n      context.element.code.removeEventListener('keyup', event._codeViewAutoHeight);\n      context.element.code.removeEventListener('paste', event._codeViewAutoHeight);\n\n      if (context.element.resizingBar) {\n        context.element.resizingBar.removeEventListener('mousedown', event.onMouseDown_resizingBar);\n      }\n\n      _w.removeEventListener('resize', event.onResize_window);\n\n      _w.removeEventListener('scroll', event.onScroll_window);\n    },\n    _setResponsiveToolbar: function () {\n      if (_responsiveButtons.length === 0) {\n        _responsiveButtons = null;\n        return;\n      }\n\n      event._responsiveCurrentSize = 'default';\n      const sizeArray = event._responsiveButtonSize = [];\n      const buttonsObj = event._responsiveButtons = {\n        default: _responsiveButtons[0]\n      };\n\n      for (let i = 1, len = _responsiveButtons.length, size, buttonGroup; i < len; i++) {\n        buttonGroup = _responsiveButtons[i];\n        size = buttonGroup[0] * 1;\n        sizeArray.push(size);\n        buttonsObj[size] = buttonGroup[1];\n      }\n\n      sizeArray.sort(function (a, b) {\n        return a - b;\n      }).unshift('default');\n    }\n  };\n  /** functions */\n\n  const functions = {\n    /**\r\n     * @description Core, Util object\r\n     */\n    core: core,\n    util: util,\n\n    /**\r\n     * @description Event functions\r\n     * @param {Object} e Event Object\r\n     * @param {Object} core Core object\r\n     */\n    onload: null,\n    onScroll: null,\n    onMouseDown: null,\n    onClick: null,\n    onInput: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onCopy: null,\n    onCut: null,\n    onFocus: null,\n    onBlur: null,\n\n    /**\r\n     * @description Event functions\r\n     * @param {String} contents Current contents\r\n     * @param {Object} core Core object\r\n     */\n    onChange: null,\n\n    /**\r\n    * @description Event functions\r\n    * @param {String} contents Current contents\r\n    * @param {Object} core Core object\r\n    */\n    onSave: null,\n\n    /**\r\n     * @description Event functions (drop, paste)\r\n     * When false is returned, the default behavior is stopped.\r\n     * If the string is returned, the cleanData value is modified to the return value.\r\n     * @param {Object} e Event object.\r\n     * @param {String} cleanData HTML string modified for editor format.\r\n     * @param {Boolean} maxChartCount option (true if max character is exceeded)\r\n     * @param {Object} core Core object\r\n     * @returns {Boolean|String}\r\n     */\n    onDrop: null,\n    onPaste: null,\n\n    /**\r\n     * @description Called just before the inline toolbar is positioned and displayed on the screen.\r\n     * @param {Element} toolbar Toolbar Element\r\n     * @param {Object} context The editor's context object (editor.getContext())\r\n     * @param {Object} core Core object\r\n     */\n    showInline: null,\n\n    /**\r\n     * @description Called just after the controller is positioned and displayed on the screen.\r\n     * controller - editing elements displayed on the screen [image resizing, table editor, link editor..]]\r\n     * @param {String} name The name of the plugin that called the controller\r\n     * @param {Array} controllers Array of Controller elements\r\n     * @param {Object} core Core object\r\n     */\n    showController: null,\n\n    /**\r\n     * @description An event when toggling between code view and wysiwyg view.\r\n     * @param {Boolean} isCodeView Whether the current code view mode\r\n     * @param {Object} core Core object\r\n     */\n    toggleCodeView: null,\n\n    /**\r\n     * @description An event when toggling full screen.\r\n     * @param {Boolean} isFullScreen Whether the current full screen mode\r\n     * @param {Object} core Core object\r\n     */\n    toggleFullScreen: null,\n\n    /**\r\n     * @description It replaces the default callback function of the image upload\r\n     * @param {Object} response Response object\r\n     * @param {Object} info Input information\r\n     * - linkValue: Link url value\r\n     * - linkNewWindow: Open in new window Check Value\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update image if true, create image if false\r\n     * - element: If isUpdate is true, the currently selected image.\r\n     * @param {Object} core Core object\r\n     */\n    imageUploadHandler: null,\n\n    /**\r\n     * @description It replaces the default callback function of the video upload\r\n     * @param xmlHttp xmlHttpRequest object\r\n     * @param info Input information\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update video if true, create video if false\r\n     * - element: If isUpdate is true, the currently selected video.\r\n     * @param core Core object\r\n     */\n    videoUploadHandler: null,\n\n    /**\r\n     * @description It replaces the default callback function of the audio upload\r\n     * @param xmlHttp xmlHttpRequest object\r\n     * @param info Input information\r\n     * - isUpdate: Update audio if true, create audio if false\r\n     * - element: If isUpdate is true, the currently selected audio.\r\n     * @param core Core object\r\n     */\n    audioUploadHandler: null,\n\n    /**\r\n     * @description Called before the image is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no image upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - linkValue: Link url value\r\n     * - linkNewWindow: Open in new window Check Value\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update image if true, create image if false\r\n     * - element: If isUpdate is true, the currently selected image.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"imageUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onImageUploadBefore: null,\n\n    /**\r\n     * @description Called before the video is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no video(iframe, video) upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update video if true, create video if false\r\n     * - element: If isUpdate is true, the currently selected video.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"videoUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onVideoUploadBefore: null,\n\n    /**\r\n     * @description Called before the audio is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no audio upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - isUpdate: Update audio if true, create audio if false\r\n     * - element: If isUpdate is true, the currently selected audio.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"audioUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onAudioUploadBefore: null,\n\n    /**\r\n     * @description Called when the image is uploaded, updated, deleted\r\n     * @param {Element} targetElement Target element\r\n     * @param {Number} index Uploaded index\r\n     * @param {String} state Upload status ('create', 'update', 'delete')\r\n     * @param {Object} info Image info object\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @param {Number} remainingFilesCount Count of remaining files to upload (0 when added as a url)\r\n     * @param {Object} core Core object\r\n     */\n    onImageUpload: null,\n\n    /**\r\n    * @description Called when the video(iframe, video) is is uploaded, updated, deleted\r\n    * -- arguments is same \"onImageUpload\" --\r\n    */\n    onVideoUpload: null,\n\n    /**\r\n    * @description Called when the audio is is uploaded, updated, deleted\r\n    * -- arguments is same \"onImageUpload\" --\r\n    */\n    onAudioUpload: null,\n\n    /**\r\n     * @description Called when the image is upload failed\r\n     * @param {String} errorMessage Error message\r\n     * @param {Object} result Response Object\r\n     * @param {Object} core Core object\r\n     * @returns {Boolean}\r\n     */\n    onImageUploadError: null,\n\n    /**\r\n     * @description Called when the video(iframe, video) upload failed\r\n     * -- arguments is same \"onImageUploadError\" --\r\n     */\n    onVideoUploadError: null,\n\n    /**\r\n     * @description Called when the audio upload failed\r\n     * -- arguments is same \"onImageUploadError\" --\r\n     */\n    onAudioUploadError: null,\n\n    /**\r\n     * @description Called when the editor is resized using the bottom bar\r\n     */\n    onResizeEditor: null,\n\n    /**\r\n     * @description Called after the \"setToolbarButtons\" invocation.\r\n     * Can be used to tweak buttons properties (useful for custom buttons)\r\n     * @param {Array} buttonList Button list \r\n     * @param {Object} core Core object\r\n     */\n    onSetToolbarButtons: null,\n\n    /**\r\n     * @description Reset the buttons on the toolbar. (Editor is not reloaded)\r\n     * You cannot set a new plugin for the button.\r\n     * @param {Array} buttonList Button list \r\n     */\n    setToolbarButtons: function (buttonList) {\n      core.submenuOff();\n      core.containerOff();\n      core.moreLayerOff();\n\n      const newToolbar = _Constructor._createToolBar(_d, buttonList, core.plugins, options);\n\n      _responsiveButtons = newToolbar.responsiveButtons;\n\n      event._setResponsiveToolbar();\n\n      context.element.toolbar.replaceChild(newToolbar._buttonTray, context.element._buttonTray);\n\n      const newContext = _Context(context.element.originElement, core._getConstructed(context.element), options);\n\n      context.element = newContext.element;\n      context.tool = newContext.tool;\n      if (options.iframe) context.element.wysiwyg = core._wd.body;\n      core.recoverButtonStates();\n\n      core._cachingButtons();\n\n      core.history._resetCachingButton();\n\n      if (core.hasFocus) event._applyTagEffects();\n      if (core.isReadOnly) util.setDisabledButtons(true, core.resizingDisabledButtons);\n      if (typeof functions.onSetToolbarButtons === 'function') functions.onSetToolbarButtons(newToolbar._buttonTray.querySelectorAll('button'), core);\n    },\n\n    /**\r\n     * @description Add or reset option property (Editor is reloaded)\r\n     * @param {Object} _options Options\r\n     */\n    setOptions: function (_options) {\n      event._removeEvent();\n\n      core._resetComponents();\n\n      util.removeClass(core._styleCommandMap.showBlocks, 'active');\n      util.removeClass(core._styleCommandMap.codeView, 'active');\n      core._variable.isCodeView = false;\n      core._iframeAuto = null;\n      core.plugins = _options.plugins || core.plugins;\n      const mergeOptions = [options, _options].reduce(function (init, option) {\n        for (let key in option) {\n          if (!util.hasOwn(option, key)) continue;\n\n          if (key === 'plugins' && option[key] && init[key]) {\n            let i = init[key],\n                o = option[key];\n            i = i.length ? i : _w.Object.keys(i).map(function (name) {\n              return i[name];\n            });\n            o = o.length ? o : _w.Object.keys(o).map(function (name) {\n              return o[name];\n            });\n            init[key] = o.filter(function (val) {\n              return i.indexOf(val) === -1;\n            }).concat(i);\n          } else {\n            init[key] = option[key];\n          }\n        }\n\n        return init;\n      }, {});\n      const el = context.element;\n      const _initHTML = el.wysiwyg.innerHTML; // set option\n\n      const cons = _Constructor._setOptions(mergeOptions, context, options);\n\n      if (cons.callButtons) {\n        pluginCallButtons = cons.callButtons;\n        core.initPlugins = {};\n      }\n\n      if (cons.plugins) {\n        core.plugins = plugins = cons.plugins;\n      } // reset context\n\n\n      if (el._menuTray.children.length === 0) this._menuTray = {};\n      _responsiveButtons = cons.toolbar.responsiveButtons;\n      core.options = options = mergeOptions;\n      core.lang = lang = options.lang;\n\n      if (options.iframe) {\n        el.wysiwygFrame.addEventListener('load', function () {\n          util._setIframeDocument(this, options);\n\n          core._setOptionsInit(el, _initHTML);\n        });\n      }\n\n      el.editorArea.appendChild(el.wysiwygFrame);\n\n      if (!options.iframe) {\n        core._setOptionsInit(el, _initHTML);\n      }\n    },\n\n    /**\r\n     * @description Set \"options.defaultStyle\" style.\r\n     * Define the style of the edit area\r\n     * It can also be defined with the \"setOptions\" method, but the \"setDefaultStyle\" method does not render the editor again.\r\n     * @param {String} style Style string\r\n     */\n    setDefaultStyle: function (style) {\n      const newStyles = options._editorStyles = util._setDefaultOptionStyle(options, style);\n\n      const el = context.element; // top area\n\n      el.topArea.style.cssText = newStyles.top; // code view\n\n      el.code.style.cssText = options._editorStyles.frame;\n      el.code.style.display = 'none';\n\n      if (options.height === 'auto') {\n        el.code.style.overflow = 'hidden';\n      } else {\n        el.code.style.overflow = '';\n      } // wysiwyg frame\n\n\n      if (!options.iframe) {\n        el.wysiwygFrame.style.cssText = newStyles.frame + newStyles.editor;\n      } else {\n        el.wysiwygFrame.style.cssText = newStyles.frame;\n        el.wysiwyg.style.cssText = newStyles.editor;\n      }\n    },\n\n    /**\r\n     * @description Open a notice area\r\n     * @param {String} message Notice message\r\n     */\n    noticeOpen: function (message) {\n      core.notice.open.call(core, message);\n    },\n\n    /**\r\n     * @description Close a notice area\r\n     */\n    noticeClose: function () {\n      core.notice.close.call(core);\n    },\n\n    /**\r\n     * @description Copying the contents of the editor to the original textarea and execute onSave callback\r\n     */\n    save: function () {\n      const contents = core.getContents(false);\n      context.element.originElement.value = contents;\n      event.onSave_wysiwyg(contents, core);\n    },\n\n    /**\r\n     * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n     * @returns {Object}\r\n     */\n    getContext: function () {\n      return context;\n    },\n\n    /**\r\n     * @description Gets the contents of the suneditor\r\n     * @param {Boolean} onlyContents - Return only the contents of the body without headers when the \"fullPage\" option is true\r\n     * @returns {String}\r\n     */\n    getContents: function (onlyContents) {\n      return core.getContents(onlyContents);\n    },\n\n    /**\r\n     * @description Gets only the text of the suneditor contents\r\n     * @returns {String}\r\n     */\n    getText: function () {\n      return context.element.wysiwyg.textContent;\n    },\n\n    /**\r\n     * @description Get the editor's number of characters or binary data size.\r\n     * You can use the \"charCounterType\" option format.\r\n     * @param {String|null} charCounterType options - charCounterType ('char', 'byte', 'byte-html')\r\n     * If argument is no value, the currently set \"charCounterType\" option is used.\r\n     * @returns {Number}\r\n     */\n    getCharCount: function (charCounterType) {\n      charCounterType = typeof charCounterType === 'string' ? charCounterType : options.charCounterType;\n      return core.getCharLength(core._charTypeHTML ? context.element.wysiwyg.innerHTML : context.element.wysiwyg.textContent, charCounterType);\n    },\n\n    /**\r\n     * @description Gets uploaded images informations\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @returns {Array}\r\n     */\n    getImagesInfo: function () {\n      return context.image ? context.image._infoList : [];\n    },\n\n    /**\r\n     * @description Gets uploaded files(plugin using fileManager) information list.\r\n     * image: [img], video: [video, iframe], audio: [audio]\r\n     * When the argument value is 'image', it is the same function as \"getImagesInfo\".\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @param {String} pluginName Plugin name (image, video, audio)\r\n     * @returns {Array}\r\n     */\n    getFilesInfo: function (pluginName) {\n      return context[pluginName] ? context[pluginName]._infoList : [];\n    },\n\n    /**\r\n     * @description Upload images using image plugin\r\n     * @param {FileList} files FileList\r\n     */\n    insertImage: function (files) {\n      if (!core.plugins.image || !files) return;\n      if (!core.initPlugins.image) core.callPlugin('image', core.plugins.image.submitAction.bind(core, files), null);else core.plugins.image.submitAction.call(core, files);\n      core.focus();\n    },\n\n    /**\r\n     * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n     * @param {Element|String} html HTML Element or HTML string or plain string\r\n     * @param {Boolean} notCleaningData If true, inserts the HTML string without refining it with core.cleanHTML.\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @param {Boolean} rangeSelection If true, range select the inserted node.\r\n     */\n    insertHTML: function (html, notCleaningData, checkCharCount, rangeSelection) {\n      if (typeof html === 'string') {\n        if (!notCleaningData) html = core.cleanHTML(html, null, null);\n\n        try {\n          const dom = _d.createRange().createContextualFragment(html);\n\n          const domTree = dom.childNodes;\n\n          if (checkCharCount) {\n            const type = core._charTypeHTML ? 'outerHTML' : 'textContent';\n            let checkHTML = '';\n\n            for (let i = 0, len = domTree.length; i < len; i++) {\n              checkHTML += domTree[i][type];\n            }\n\n            if (!core.checkCharCount(checkHTML, null)) return;\n          }\n\n          let c, a, t, prev, firstCon;\n\n          while (c = domTree[0]) {\n            if (prev && prev.nodeType === 3 && a && a.nodeType === 1 && util.isBreak(c)) {\n              prev = c;\n              util.removeItem(c);\n              continue;\n            }\n\n            t = core.insertNode(c, a, false);\n            a = t.container || t;\n            if (!firstCon) firstCon = t;\n            prev = c;\n          }\n\n          if (prev.nodeType === 3 && a.nodeType === 1) a = prev;\n          const offset = a.nodeType === 3 ? t.endOffset || a.textContent.length : a.childNodes.length;\n          if (rangeSelection) core.setRange(firstCon.container || firstCon, firstCon.startOffset || 0, a, offset);else core.setRange(a, offset, a, offset);\n        } catch (error) {\n          if (core.isDisabled || core.isReadOnly) return;\n          console.warn('[SUNEDITOR.insertHTML.fail] ' + error);\n          core.execCommand('insertHTML', false, html);\n        }\n      } else {\n        if (util.isComponent(html)) {\n          core.insertComponent(html, false, checkCharCount, false);\n        } else {\n          let afterNode = null;\n\n          if (util.isFormatElement(html) || util.isMedia(html)) {\n            afterNode = util.getFormatElement(core.getSelectionNode(), null);\n          }\n\n          core.insertNode(html, afterNode, checkCharCount);\n        }\n      }\n\n      core.effectNode = null;\n      core.focus(); // history stack\n\n      core.history.push(false);\n    },\n\n    /**\r\n     * @description Change the contents of the suneditor\r\n     * @param {String|undefined} contents Contents to Input\r\n     */\n    setContents: function (contents) {\n      core.setContents(contents);\n    },\n\n    /**\r\n     * @description Add contents to the suneditor\r\n     * @param {String} contents Contents to Input\r\n     */\n    appendContents: function (contents) {\n      const convertValue = core.convertContentsForEditor(contents);\n\n      if (!core._variable.isCodeView) {\n        const temp = util.createElement('DIV');\n        temp.innerHTML = convertValue;\n        const wysiwyg = context.element.wysiwyg;\n        const children = temp.children;\n\n        for (let i = 0, len = children.length; i < len; i++) {\n          wysiwyg.appendChild(children[i]);\n        }\n      } else {\n        core._setCodeView(core._getCodeView() + '\\n' + core.convertHTMLForCodeView(convertValue, false));\n      } // history stack\n\n\n      core.history.push(false);\n    },\n\n    /**\r\n     * @description Switch to or off \"ReadOnly\" mode.\r\n     * @param {Boolean} value \"readOnly\" boolean value.\r\n     */\n    readOnly: function (value) {\n      core.isReadOnly = value;\n      util.setDisabledButtons(!!value, core.resizingDisabledButtons);\n\n      if (value) {\n        /** off menus */\n        core.controllersOff();\n        if (core.submenuActiveButton && core.submenuActiveButton.disabled) core.submenuOff();\n        if (core._moreLayerActiveButton && core._moreLayerActiveButton.disabled) core.moreLayerOff();\n        if (core.containerActiveButton && core.containerActiveButton.disabled) core.containerOff();\n        if (core.modalForm) core.plugins.dialog.close.call(core);\n        context.element.code.setAttribute(\"readOnly\", \"true\");\n      } else {\n        context.element.code.removeAttribute(\"readOnly\");\n      }\n\n      if (options.codeMirrorEditor) options.codeMirrorEditor.setOption('readOnly', !!value);\n    },\n\n    /**\r\n     * @description Disable the suneditor\r\n     */\n    disable: function () {\n      this.toolbar.disable();\n      this.wysiwyg.disable();\n    },\n\n    /**\r\n     * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n     */\n    disabled: function () {\n      this.disable();\n    },\n\n    /**\r\n     * @description Enable the suneditor\r\n     */\n    enable: function () {\n      this.toolbar.enable();\n      this.wysiwyg.enable();\n    },\n\n    /**\r\n     * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n     */\n    enabled: function () {\n      this.enable();\n    },\n\n    /**\r\n     * @description Show the suneditor\r\n     */\n    show: function () {\n      const topAreaStyle = context.element.topArea.style;\n      if (topAreaStyle.display === 'none') topAreaStyle.display = options.display;\n    },\n\n    /**\r\n     * @description Hide the suneditor\r\n     */\n    hide: function () {\n      context.element.topArea.style.display = 'none';\n    },\n\n    /**\r\n     * @description Destroy the suneditor\r\n     */\n    destroy: function () {\n      /** off menus */\n      core.submenuOff();\n      core.containerOff();\n      core.controllersOff();\n      if (core.notice) core.notice.close.call(core);\n      if (core.modalForm) core.plugins.dialog.close.call(core);\n      /** remove history */\n\n      core.history._destroy();\n      /** remove event listeners */\n\n\n      event._removeEvent();\n      /** remove element */\n\n\n      util.removeItem(context.element.toolbar);\n      util.removeItem(context.element.topArea);\n      /** remove object reference */\n\n      for (let k in core.functions) {\n        if (util.hasOwn(core, k)) delete core.functions[k];\n      }\n\n      for (let k in core) {\n        if (util.hasOwn(core, k)) delete core[k];\n      }\n\n      for (let k in event) {\n        if (util.hasOwn(event, k)) delete event[k];\n      }\n\n      for (let k in context) {\n        if (util.hasOwn(context, k)) delete context[k];\n      }\n\n      for (let k in pluginCallButtons) {\n        if (util.hasOwn(pluginCallButtons, k)) delete pluginCallButtons[k];\n      }\n      /** remove user object */\n\n\n      for (let k in this) {\n        if (util.hasOwn(this, k)) delete this[k];\n      }\n    },\n\n    /**\r\n     * @description Toolbar methods\r\n     */\n    toolbar: {\n      /**\r\n       * @description Disable the toolbar\r\n       */\n      disable: function () {\n        /** off menus */\n        core.submenuOff();\n        core.moreLayerOff();\n        core.containerOff();\n        context.tool.cover.style.display = 'block';\n      },\n\n      /**\r\n       * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n       */\n      disabled: function () {\n        this.disable();\n      },\n\n      /**\r\n       * @description Enable the toolbar\r\n       */\n      enable: function () {\n        context.tool.cover.style.display = 'none';\n      },\n\n      /**\r\n       * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n       */\n      enabled: function () {\n        this.enable();\n      },\n\n      /**\r\n       * @description Show the toolbar\r\n       */\n      show: function () {\n        if (core._isInline) {\n          event._showToolbarInline();\n        } else {\n          context.element.toolbar.style.display = '';\n          context.element._stickyDummy.style.display = '';\n        }\n      },\n\n      /**\r\n       * @description Hide the toolbar\r\n       */\n      hide: function () {\n        if (core._isInline) {\n          event._hideToolbar();\n        } else {\n          context.element.toolbar.style.display = 'none';\n          context.element._stickyDummy.style.display = 'none';\n        }\n      }\n    },\n\n    /**\r\n     * @description Wysiwyg methods\r\n     */\n    wysiwyg: {\n      /**\r\n       * @description Disable the wysiwyg area\r\n       */\n      disable: function () {\n        /** off menus */\n        core.controllersOff();\n        if (core.modalForm) core.plugins.dialog.close.call(core);\n        context.element.wysiwyg.setAttribute('contenteditable', false);\n        core.isDisabled = true;\n\n        if (options.codeMirrorEditor) {\n          options.codeMirrorEditor.setOption('readOnly', true);\n        } else {\n          context.element.code.setAttribute('disabled', 'disabled');\n        }\n      },\n\n      /**\r\n       * @description Enable the wysiwyg area\r\n       */\n      enable: function () {\n        context.element.wysiwyg.setAttribute('contenteditable', true);\n        core.isDisabled = false;\n\n        if (options.codeMirrorEditor) {\n          options.codeMirrorEditor.setOption('readOnly', false);\n        } else {\n          context.element.code.removeAttribute('disabled');\n        }\n      }\n    }\n  };\n  /************ Core init ************/\n  // functions\n\n  core.functions = functions;\n  core.options = options; // Create to sibling node\n\n  let contextEl = context.element;\n  let originEl = contextEl.originElement;\n  let topEl = contextEl.topArea;\n  originEl.style.display = 'none';\n  topEl.style.display = 'block'; // init\n\n  if (options.iframe) {\n    contextEl.wysiwygFrame.addEventListener('load', function () {\n      util._setIframeDocument(this, options);\n\n      core._editorInit(false, options.value);\n\n      options.value = null;\n    });\n  } // insert editor element\n\n\n  if (typeof originEl.nextElementSibling === 'object') {\n    originEl.parentNode.insertBefore(topEl, originEl.nextElementSibling);\n  } else {\n    originEl.parentNode.appendChild(topEl);\n  }\n\n  contextEl.editorArea.appendChild(contextEl.wysiwygFrame);\n  contextEl = originEl = topEl = null; // init\n\n  if (!options.iframe) {\n    core._editorInit(false, options.value);\n\n    options.value = null;\n  }\n\n  return functions;\n}","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/node_modules/suneditor/src/lib/core.js"],"names":["_Constructor","_Context","_history","_util","_notice","context","pluginCallButtons","plugins","lang","options","_responsiveButtons","_d","element","originElement","ownerDocument","document","_w","defaultView","window","util","icons","core","_parser","DOMParser","_prevRtl","rtl","_wd","_ww","_shadowRoot","_shadowRootControllerEventTarget","functions","wwComputedStyle","notice","history","initPlugins","_targetPlugins","_menuTray","effectNode","submenu","container","_submenuName","_bindedSubmenuOff","_bindedContainerOff","submenuActiveButton","containerActiveButton","controllerArray","currentControllerName","currentControllerTarget","currentFileComponentInfo","codeViewDisabledButtons","resizingDisabledButtons","_moreLayerActiveButton","_htmlCheckWhitelistRegExp","_htmlCheckBlacklistRegExp","_disallowedTextTagsRegExp","editorTagsWhitelistRegExp","editorTagsBlacklistRegExp","pasteTagsWhitelistRegExp","pasteTagsBlacklistRegExp","hasFocus","isDisabled","isReadOnly","_attributesWhitelistRegExp","_attributesBlacklistRegExp","_attributesTagsWhitelist","_attributesTagsBlacklist","_bindControllersOff","_isInline","_isBalloon","_isBalloonAlways","_inlineToolbarAttr","top","width","isShow","_notHideToolbar","_sticky","_antiBlur","_lineBreaker","_lineBreakerButton","_componentsInfoInit","_componentsInfoReset","activePlugins","managedTagsInfo","_charTypeHTML","_fileInfoPluginsCheck","_fileInfoPluginsReset","_fileManager","tags","regExp","queryString","pluginRegExp","pluginMap","commandMap","_commandMapStyles","STRONG","U","EM","DEL","allCommandButtons","_styleCommandMap","_defaultCommand","bold","textTags","underline","italic","strike","subscript","sub","superscript","sup","_variable","isChanged","isCodeView","isFullScreen","innerHeight_fullScreen","resizeClientY","tabSize","codeIndent","minResizingSize","getNumber","wysiwygFrame","style","minHeight","currentNodes","currentNodesMap","_range","_selectionNode","_originCssText","topArea","cssText","_bodyOverflow","_editorAreaOriginCssText","_wysiwygOriginCssText","_codeOriginCssText","_fullScreenAttrs","sticky","balloon","inline","_lineBreakComp","_lineBreakDir","saveButtonStates","currentButtons","_buttonTray","querySelectorAll","i","command","length","getAttribute","recoverButtonStates","button","oldButton","parentElement","replaceChild","tool","callPlugin","pluginName","callBackFunction","_target","Error","add","initMenuTarget","active","push","addModule","moduleArray","len","moduleName","name","getGlobalScrollOffset","t","l","el","scrollTop","scrollLeft","host","left","target","menu","appendChild","submenuOn","controllersOff","submenuName","_setMenuPosition","submenuOff","bind","addDocEvent","on","call","removeDocEvent","display","removeClass","moreLayerOff","layer","toolbar","querySelector","containerOn","containerName","_containerName","containerOff","visibility","height","addClass","toolbarW","offsetWidth","toolbarOffset","event","_getEditorOffsets","menuW","offsetLeft","elementW","rtlW","rtlL","overLeft","offsetEl","offsetTop","offsetParent","bt","offsetHeight","toolbarTop","menuHeight","menuHeight_bottom","innerHeight","menuTop","insTop","menuHeight_top","controllersOn","arg","arguments","hasClass","getFileComponent","indexOf","addEventListener","e","preventDefault","stopPropagation","showController","contains","test","type","keyCode","lineBreaker_t","lineBreaker_b","setControllerPosition","controller","referEl","position","addOffset","offset","getOffset","topMargin","controllerW","referElW","allow","firstElementChild","overSize","execCommand","showDefaultUI","value","nativeFocus","__focus","_editorRange","caption","getParentElement","getSelectionNode","focus","wysiwyg","iframe","range","getRange","startContainer","endContainer","isWysiwygDiv","currentNode","commonAncestorContainer","children","startOffset","isFormatElement","isComponent","format","createElement","defaultTag","br","insertBefore","setRange","endOffset","_applyTagEffects","_toggleToolbarBalloon","focusEdge","focusEl","lastElementChild","fileComponentInfo","selectComponent","getChildElement","current","childNodes","nodeType","textContent","blur","startCon","startOff","endCon","endOff","createRange","setStart","setEnd","error","console","warn","selection","getSelection","removeAllRanges","addRange","_rangeInfo","removeRange","_setKeyEffect","_createDefaultRange","collapsed","isCollapsed","focusNode","rangeCount","getRangeAt","sc","anchorNode","ec","so","anchorOffset","eo","focusOffset","compareValue","compareElements","rightDir","ancestor","result","getRange_addLine","_selectionVoid","op","innerHTML","nextElementSibling","selectionNode","firstChild","extentNode","comm","nodeName","isMediaComponent","_resetRangeToTextNode","tempCon","tempOffset","tempChild","lastChild","isBreak","onlyBreak","nextSibling","getFormatElement","getRangeFormatElement","isCell","parentNode","emptyText","createTextNode","zeroWidthSpace","previousElementSibling","previousSibling","removeItem","getSelectedElements","validation","trim","commonCon","lineNodes","getListChildren","isRangeFormatElement","unshift","startLine","endLine","startIdx","endIdx","onlyTable","isTable","startRangeEl","endRangeEl","isListCell","sameRange","line","slice","getSelectedElementsAndComponents","removeDuplicate","myComponent","selectedLines","component","j","splice","isEdgePoint","dir","nodeValue","_isEdgeFormat","node","cloneNode","showLoading","loading","closeLoading","appendFormatTag","formatNode","currentFormatEl","oFormat","isFreeFormatElement","oFormatName","copyTagAttributes","insertComponent","notHistoryPush","checkCharCount","notSelect","r","removeNode","oNode","formatEl","insertNode","depthFormat","splitElement","getElementDepth","onlyZeroWidthSpace","getEdgeChildNodes","className","toLowerCase","isUneditableComponent","plugin","setTimeout","select","_setComponentLineBreaker","t_style","b_style","resizing","resizeContainer","isList","componentTop","wScroll","w","afterNode","freeFormat","getFreeFormatElement","isFormats","isMedia","formatRange","originAfter","splitText","c","removeChild","isSameContainer","removedTag","prevContainer","sameParent","oldParent","rangeCon","fNode","cItem","isEmptyLine","_setIntoFreeFormat","previous","next","previousText","nextText","newRange","zeroWidth","_isIgnoreNodeChange","oNodeChildren","lastONode","beforeNode","getListChildNodes","startIndex","getArrayIndex","endIndex","startNode","endNode","remove","item","list","getArrayItem","child","removeItemAllParents","data","undefined","substringData","rc","text","applyRangeFormatElement","rangeElement","rangeLines","linesLoop","nested","fEl","lEl","f","last","standTag","beforeTag","pElement","parentDepth","listParent","lineArr","removeItems","parent","origin","before","cc","originParent","depth","nextLine","nextList","p","edge","detachRangeFormatElement","cLen","removeArray","mergeSameTags","mergeNestedTags","splitRange","selectedFormats","newRangeElement","firstNode","lastNode","rangeEl","newList","insertedNew","reset","moveComplete","appendNode","insNode","sibling","originNode","insChildren","first","_notTextNode","originNext","detachRange","detachNestedList","fChildren","lineIndex","insNext","inner","innerChildren","copyFormatAttributes","rangeParent","rangeRight","removeEmptyNode","childEdge","detachList","rangeArr","listFirst","listLast","passComponent","o","lastIndex","nodeChange","styleArray","removeNodeArray","strictRemove","isRemoveNode","isRemoveFormat","isNonEditable","wRegExp","RegExp","newNodeName","sNode","checkCnt","checkAttrs","checkStyles","ckeckClasses","classList","s","classReg","replace","styleCheck","classCheck","match","start","end","newNode","styleRegExp","classRegExp","removeNodeRegExp","wBoolean","Boolean","_removeCheck","v","checkNode","vNode","tagRemove","originStyle","originClasses","classes","removeAttribute","oneLine","endLength","isRemoveAnchor","arr","n","_isMaintainedNode","_isSizeNode","isSizeNode","_getMaintainedNode","_util_getMaintainedNode","_util_isMaintainedNode","_nodeChange_oneLine","_setCommonListStyle","_nodeChange_endLine","_nodeChange_middleLine","_nodeChange_startLine","childStyle","elStyle","_textTagsMap","fontWeight","fontStyle","color","fontSize","_stripRemoveNode","_isRemove","anchor","newInnerNode","parentCon","sameTag","z","nNodeArray","pNode","isSameNode","startPass","endPass","pCurrent","checkCss","recursionFunc","coverNode","prevNode","textNode","a","m","prevAnchorNode","substr","childNode","pop","anchors","concat","afterAnchorNode","aChildren","aLen","ancestorAnchorNode","textNode_s","textNode_e","rChildren","endConReset","newStartOffset","startPath","getNodePath","mergeEndCon","newEndOffset","endPath","newOffsets","getNodeFromPath","_endContainer","passNode","cloneChild","isTopNode","offsets","path","tempNode","newCssText","newClass","noneChange","actionCall","_showToolbarBalloon","_showToolbarInline","arrayIncludes","open","action","commandHandler","info","toggleCodeView","toggleFullScreen","indent","undo","redo","removeFormat","print","preview","toggleDisplayBlocks","setDir","callBackSave","getContents","save","setAttribute","nodesMap","cmd","cells","shift","marginDir","margin","setStyle","editInsideList","toggleClass","showBlocks","_resourcesStateChange","setDisabledButtons","_setCodeDataToEditor","code","codeMirrorEditor","mode","_arrow","_hideToolbar","codeView","_resetCachingButton","_setEditorDataToCodeView","scrollHeight","refresh","_checkPlaceholder","code_html","_getCodeView","fullPage","parseDocument","parseFromString","headChildren","head","tagName","headers","_setIframeCssTags","body","convertContentsForEditor","attrs","attributes","editableClasses","_editableClass","split","codeContents","convertHTMLForCodeView","codeValue","getAttributesToString","outerHTML","_setCodeView","editorArea","_var","wasToolbarHidden","toolbarContainer","relative","maxWidth","zIndex","_stickyDummy","overflow","fullScreenOffset","changeElement","reduction","_iframeAutoHeight","marginTop","fullScreen","_codeViewAutoHeight","stickyToolbar","onScroll_window","expansion","hide","contentsHTML","printTemplate","printDocument","getIframeDocument","wDoc","arrts","_printClass","write","links","getElementsByTagName","styles","linkHTML","isIE_Edge","documentMode","StyleMedia","contentWindow","previewTemplate","windowObject","mimeType","changeDir","align","exchangeDir","outdent","marginRight","marginLeft","textAlign","changeTxt","dir_ltr","dir_rtl","setContents","html","convertValue","_resetComponents","setIframeContents","ctx","onlyContents","contents","renderHTML","figcaptions","_makeLine","requireFormat","_disallowedTags","isAnchor","_HTMLConvertor","textArray","tLen","_allowHTMLComments","_tagConvertor","_deleteDisallowedTags","_cleanTags","lowLevelCheck","bAttr","wAttr","sv","toString","h","avw","avh","cleanHTML","whitelist","blacklist","dom","createContextualFragment","_consistencyCheckOfHTML","query","textCompList","initMethod","map","domTree","isTextStyleElement","htmlRemoveWhiteSpace","createTagsWhitelist","createTagsBlacklist","comp","returnHTML","brReg","isFormat","brChar","indentSize","Array","join","elementRegTest","elementIndent","lineBR","nodeRegTest","tag","tagIndent","XMLSerializer","serializeToString","listener","useCapture","removeEventListener","_charCount","inputText","maxCharCount","countType","charCounterType","nextCharCount","getCharLength","_setCharCount","over","count","getCharCount","slicePosition","_callCounterBlink","content","getByteLength","charCounter","charWrapper","_checkComponents","getDoc","setValue","getValue","ignoredList","key","hasOwn","OUTDENT","isImportantDisabled","INDENT","_init","reload","_initHTML","getComputedStyle","ShadowRoot","shadowRoot","disallowTextTags","Object","keys","allowTextTags","addTagsWhitelist","filter","getRegList","str","str2","defaultAttr","_editorTagsWhitelist","tagsBlacklist","pasteTagsWhitelist","pasteTagsBlacklist","regEndStr","_wAttr","attributesWhitelist","tagsAttr","allAttr","k","_bAttr","attributesBlacklist","_cachingButtons","managedClass","filePluginRegExp","checkFileInfo","resetFileInfo","isArray","fileTags","managedTags","method","_placeholder","placeholder","lineBreaker","_onChange_historyStack","contentDocument","_editorStyles","editor","_iframeAuto","_initWysiwygArea","SUB","SUP","toUpperCase","onChange","_allowedEmptyNodeList","innerText","_setDefaultFormat","formatName","fileComponent","isNotCheckingNode","_setOptionsInit","_getConstructed","_editorInit","_addEvent","_offStickyToolbar","onResize_window","onload","contextEl","_top","_relative","_toolBar","_editorArea","_wysiwygArea","_codeArea","_resizingBar","resizingBar","_navigation","navigation","_charCounter","_charWrapper","_loading","_lineBreaker_t","_lineBreaker_b","_resizeBack","resizeBackground","_IEisComposing","_lineBreakerBind","_responsiveCurrentSize","_responsiveButtonSize","_directionKeyCode","_nonTextKeyCode","_historyIgnoreKeyCode","_onButtonsCheck","_frontZeroWidthReg","_keyCodeShortcut","_shortcutCommand","keyStr","shortcutsDisable","classOnCheck","commandMapNodes","reverse","showPathLabel","_cancelCaptionEdit","_buttonsEventHandler","onClick_toolbar","disabled","onMouseDown_wysiwyg","onMouseDown","tableCell","tablePlugin","table","_fixedCell","_shift","onTableCellMultiSelect","onClick_wysiwyg","targetElement","href","onClick","figcaption","hideToolbar","oLi","prevLi","_balloonDelay","_showToolbarBalloonDelay","clearTimeout","rangeObj","isDirTop","rects","getClientRects","globalScroll","editorWidth","stickyTop","editorLeft","nodeOffset","right","bottom","noText","arrowMargin","Math","round","toolbarWidth","toolbarHeight","iframeRects","_setToolbarOffset","editorParent","padding","absoluteLeft","overRight","resetTop","space","_getPageBottomSpace","documentElement","floor","arrow_left","showInline","onInput_wysiwyg","go","getCurrentIndex","onInput","_isUneditableNode","isFront","siblingKey","isElement","siblingNode","_isUneditableNode_getSibling","selectNode","_onShortcutKey","onKeyDown_wysiwyg","shiftKey","ctrl","ctrlKey","metaKey","alt","altKey","onKeyDown","selectRange","fileComponentName","destroy","_hardDelete","isClosureFreeFormatElement","isClosureRangeFormatElement","defaultFormat","prev","prevLast","con","after","detach","sel","ignoreZWS","nextEl","cell","tabDisable","isEdge","lines","fc","lc","idx","prevIdx","nextIdx","moveCell","tabText","textRange","endChild","freeFormatEl","enterHTML","formatInners","temp","newFormat","innerNode","lineAttrReset","newEl","isMultiLine","resetAttr","selectionFormat","wSelection","insertHTML","wOffset","focusNext","brPrev","brNext","newListCell","compContext","_container","_element","_ref","isOSX_IOS","nbsp","textKey","onKeyUp_wysiwyg","oFormatTag","zeroWidthRegExp","isComposing","frontZeroWidthCnt","substring","onKeyUp","onScroll_wysiwyg","onScroll","onFocus_wysiwyg","onFocus","onBlur_wysiwyg","onBlur","onMouseDown_resizingBar","prevHeight","clientY","closureFunc","_resize_editor","onResizeEditor","resizeInterval","responsiveSize","responsiveWidth","setToolbarButtons","fileBrowser","area","maxHeight","header","editorHeight","y","scrollY","editorTop","inlineOffset","_onStickyToolbar","scroll","sCell","eCell","sIsCell","eIsCell","sComp","eComp","onPaste_wysiwyg","clipboardData","isIE","_dataTransferAction","_setClipboardComponent","setData","onCopy_wysiwyg","onCopy","onSave_wysiwyg","onSave","onCut_wysiwyg","onCut","onDrop_wysiwyg","dataTransfer","_setDropLocationSelection","rangeOffset","caretRangeFromPoint","clientX","plainText","cleanData","getData","tempDiv","tempRange","_setClipboardData","MSData","onlyText","onPaste","onDrop","files","image","insertImage","onMouseMove_wysiwyg","lineBreakerStyle","ctxEl","pageY","_onMouseDown_lineBreak","_onLineBreak","eventWysiwyg","b","passive","resizeEnable","_setResponsiveToolbar","_removeEvent","sizeArray","buttonsObj","default","size","buttonGroup","sort","imageUploadHandler","videoUploadHandler","audioUploadHandler","onImageUploadBefore","onVideoUploadBefore","onAudioUploadBefore","onImageUpload","onVideoUpload","onAudioUpload","onImageUploadError","onVideoUploadError","onAudioUploadError","onSetToolbarButtons","buttonList","newToolbar","_createToolBar","responsiveButtons","newContext","setOptions","_options","mergeOptions","reduce","init","option","val","cons","_setOptions","callButtons","_setIframeDocument","setDefaultStyle","newStyles","_setDefaultOptionStyle","frame","noticeOpen","message","noticeClose","close","getContext","getText","getImagesInfo","_infoList","getFilesInfo","submitAction","notCleaningData","rangeSelection","checkHTML","firstCon","appendContents","readOnly","modalForm","dialog","setOption","disable","enable","enabled","show","topAreaStyle","_destroy","cover","originEl","topEl"],"mappings":"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,IAtHN;;AAwHd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,mBAAmB,EAAE,IArJP;;AAsJd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,mBAAmB,EAAE,IAjLP;;AAkLd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,mBAAmB,EAAE,IA1MP;;AA4Md;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,aAAa,EAAE,IA5ND;;AA6Nb;AACT;AACA;AACA;AACQC,IAAAA,aAAa,EAAE,IAjOD;;AAkOb;AACT;AACA;AACA;AACQC,IAAAA,aAAa,EAAE,IAtOD;;AAwOd;AACR;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,kBAAkB,EAAE,IA/ON;;AAgPd;AACR;AACA;AACA;AACQC,IAAAA,kBAAkB,EAAE,IApPN;;AAqPd;AACR;AACA;AACA;AACQC,IAAAA,kBAAkB,EAAE,IAzPN;;AA2Pd;AACR;AACA;AACQlF,IAAAA,cAAc,EAAE,IA9PF;;AAgQd;AACR;AACA;AACA;AACA;AACA;AACQmF,IAAAA,mBAAmB,EAAE,IAtQP;;AAwQd;AACR;AACA;AACA;AACA;AACQ/E,IAAAA,iBAAiB,EAAE,UAAUgF,UAAV,EAAsB;AACrCxpC,MAAAA,IAAI,CAACkK,UAAL;AACAlK,MAAAA,IAAI,CAACiL,YAAL;AACAjL,MAAAA,IAAI,CAAC0K,YAAL;;AAEA,YAAM++B,UAAU,GAAG9qC,YAAY,CAAC+qC,cAAb,CAA4BpqC,EAA5B,EAAgCkqC,UAAhC,EAA4CxpC,IAAI,CAACd,OAAjD,EAA0DE,OAA1D,CAAnB;;AACAC,MAAAA,kBAAkB,GAAGoqC,UAAU,CAACE,iBAAhC;;AACAn+B,MAAAA,KAAK,CAAC28B,qBAAN;;AAEAnpC,MAAAA,OAAO,CAACO,OAAR,CAAgBqL,OAAhB,CAAwBzC,YAAxB,CAAqCshC,UAAU,CAAChiC,WAAhD,EAA6DzI,OAAO,CAACO,OAAR,CAAgBkI,WAA7E;;AACA,YAAMmiC,UAAU,GAAGhrC,QAAQ,CAACI,OAAO,CAACO,OAAR,CAAgBC,aAAjB,EAAgCQ,IAAI,CAAC24B,eAAL,CAAqB35B,OAAO,CAACO,OAA7B,CAAhC,EAAuEH,OAAvE,CAA3B;;AAEAJ,MAAAA,OAAO,CAACO,OAAR,GAAkBqqC,UAAU,CAACrqC,OAA7B;AACAP,MAAAA,OAAO,CAACoJ,IAAR,GAAewhC,UAAU,CAACxhC,IAA1B;AACA,UAAIhJ,OAAO,CAACiQ,MAAZ,EAAoBrQ,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,GAA0BpP,IAAI,CAACK,GAAL,CAASqrB,IAAnC;AAEpB1rB,MAAAA,IAAI,CAAC+H,mBAAL;;AAEA/H,MAAAA,IAAI,CAAC82B,eAAL;;AACA92B,MAAAA,IAAI,CAACY,OAAL,CAAa+pB,mBAAb;;AAEA,UAAI3qB,IAAI,CAACsC,QAAT,EAAmBkJ,KAAK,CAACgF,gBAAN;AACnB,UAAIxQ,IAAI,CAACwC,UAAT,EAAqB1C,IAAI,CAACqqB,kBAAL,CAAwB,IAAxB,EAA8BnqB,IAAI,CAAC6B,uBAAnC;AACrB,UAAI,OAAOpB,SAAS,CAAC8oC,mBAAjB,KAAyC,UAA7C,EAAyD9oC,SAAS,CAAC8oC,mBAAV,CAA8BE,UAAU,CAAChiC,WAAX,CAAuBC,gBAAvB,CAAwC,QAAxC,CAA9B,EAAiF1H,IAAjF;AAC5D,KArSa;;AAuSd;AACR;AACA;AACA;AACQ6pC,IAAAA,UAAU,EAAE,UAAUC,QAAV,EAAoB;AAC5Bt+B,MAAAA,KAAK,CAAC48B,YAAN;;AACApoC,MAAAA,IAAI,CAAC2vB,gBAAL;;AAEA7vB,MAAAA,IAAI,CAAC2K,WAAL,CAAiBzK,IAAI,CAAC8E,gBAAL,CAAsBmlB,UAAvC,EAAmD,QAAnD;AACAnqB,MAAAA,IAAI,CAAC2K,WAAL,CAAiBzK,IAAI,CAAC8E,gBAAL,CAAsB4lB,QAAvC,EAAiD,QAAjD;AACA1qB,MAAAA,IAAI,CAACyF,SAAL,CAAeE,UAAf,GAA4B,KAA5B;AACA3F,MAAAA,IAAI,CAAC83B,WAAL,GAAmB,IAAnB;AAEA93B,MAAAA,IAAI,CAACd,OAAL,GAAe4qC,QAAQ,CAAC5qC,OAAT,IAAoBc,IAAI,CAACd,OAAxC;AACA,YAAM6qC,YAAY,GAAG,CAAC3qC,OAAD,EAAU0qC,QAAV,EAAoBE,MAApB,CAA2B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACpE,aAAK,IAAIrV,GAAT,IAAgBqV,MAAhB,EAAwB;AACpB,cAAI,CAACpqC,IAAI,CAACg1B,MAAL,CAAYoV,MAAZ,EAAoBrV,GAApB,CAAL,EAA+B;;AAC/B,cAAIA,GAAG,KAAK,SAAR,IAAqBqV,MAAM,CAACrV,GAAD,CAA3B,IAAoCoV,IAAI,CAACpV,GAAD,CAA5C,EAAmD;AAC/C,gBAAIltB,CAAC,GAAGsiC,IAAI,CAACpV,GAAD,CAAZ;AAAA,gBAAmB/T,CAAC,GAAGopB,MAAM,CAACrV,GAAD,CAA7B;AACAltB,YAAAA,CAAC,GAAGA,CAAC,CAACE,MAAF,GAAWF,CAAX,GAAehI,EAAE,CAAC81B,MAAH,CAAUC,IAAV,CAAe/tB,CAAf,EAAkBmqB,GAAlB,CAAsB,UAAS5oB,IAAT,EAAe;AAAE,qBAAOvB,CAAC,CAACuB,IAAD,CAAR;AAAiB,aAAxD,CAAnB;AACA4X,YAAAA,CAAC,GAAGA,CAAC,CAACjZ,MAAF,GAAWiZ,CAAX,GAAenhB,EAAE,CAAC81B,MAAH,CAAUC,IAAV,CAAe5U,CAAf,EAAkBgR,GAAlB,CAAsB,UAAS5oB,IAAT,EAAe;AAAE,qBAAO4X,CAAC,CAAC5X,IAAD,CAAR;AAAiB,aAAxD,CAAnB;AACA+gC,YAAAA,IAAI,CAACpV,GAAD,CAAJ,GAAa/T,CAAC,CAAC+U,MAAF,CAAS,UAASsU,GAAT,EAAc;AAAE,qBAAOxiC,CAAC,CAACsF,OAAF,CAAUk9B,GAAV,MAAmB,CAAC,CAA3B;AAA+B,aAAxD,CAAD,CAA4D5jB,MAA5D,CAAmE5e,CAAnE,CAAZ;AACH,WALD,MAKO;AACHsiC,YAAAA,IAAI,CAACpV,GAAD,CAAJ,GAAYqV,MAAM,CAACrV,GAAD,CAAlB;AACH;AACJ;;AACD,eAAOoV,IAAP;AACH,OAboB,EAalB,EAbkB,CAArB;AAeA,YAAM3gC,EAAE,GAAGtK,OAAO,CAACO,OAAnB;AACA,YAAM61B,SAAS,GAAG9rB,EAAE,CAAC8F,OAAH,CAAWuE,SAA7B,CA1B4B,CA4B5B;;AACA,YAAMy2B,IAAI,GAAGzrC,YAAY,CAAC0rC,WAAb,CAAyBN,YAAzB,EAAuC/qC,OAAvC,EAAgDI,OAAhD,CAAb;;AAEA,UAAIgrC,IAAI,CAACE,WAAT,EAAsB;AAClBrrC,QAAAA,iBAAiB,GAAGmrC,IAAI,CAACE,WAAzB;AACAtqC,QAAAA,IAAI,CAACa,WAAL,GAAmB,EAAnB;AACH;;AAED,UAAIupC,IAAI,CAAClrC,OAAT,EAAkB;AACdc,QAAAA,IAAI,CAACd,OAAL,GAAeA,OAAO,GAAGkrC,IAAI,CAAClrC,OAA9B;AACH,OAtC2B,CAwC5B;;;AACA,UAAIoK,EAAE,CAACvI,SAAH,CAAa8O,QAAb,CAAsBhI,MAAtB,KAAiC,CAArC,EAAwC,KAAK9G,SAAL,GAAiB,EAAjB;AACxC1B,MAAAA,kBAAkB,GAAG+qC,IAAI,CAACx/B,OAAL,CAAa++B,iBAAlC;AACA3pC,MAAAA,IAAI,CAACZ,OAAL,GAAeA,OAAO,GAAG2qC,YAAzB;AACA/pC,MAAAA,IAAI,CAACb,IAAL,GAAYA,IAAI,GAAGC,OAAO,CAACD,IAA3B;;AAEA,UAAIC,OAAO,CAACiQ,MAAZ,EAAoB;AAChB/F,QAAAA,EAAE,CAACnD,YAAH,CAAgB+G,gBAAhB,CAAiC,MAAjC,EAAyC,YAAY;AACjDpN,UAAAA,IAAI,CAACyqC,kBAAL,CAAwB,IAAxB,EAA8BnrC,OAA9B;;AACAY,UAAAA,IAAI,CAAC04B,eAAL,CAAqBpvB,EAArB,EAAyB8rB,SAAzB;AACH,SAHD;AAIH;;AAED9rB,MAAAA,EAAE,CAACijB,UAAH,CAAc1iB,WAAd,CAA0BP,EAAE,CAACnD,YAA7B;;AAEA,UAAI,CAAC/G,OAAO,CAACiQ,MAAb,EAAqB;AACjBrP,QAAAA,IAAI,CAAC04B,eAAL,CAAqBpvB,EAArB,EAAyB8rB,SAAzB;AACH;AACJ,KArWa;;AAuWd;AACR;AACA;AACA;AACA;AACA;AACQoV,IAAAA,eAAe,EAAE,UAAUpkC,KAAV,EAAiB;AAC9B,YAAMqkC,SAAS,GAAGrrC,OAAO,CAACw4B,aAAR,GAAwB93B,IAAI,CAAC4qC,sBAAL,CAA4BtrC,OAA5B,EAAqCgH,KAArC,CAA1C;;AACA,YAAMkD,EAAE,GAAGtK,OAAO,CAACO,OAAnB,CAF8B,CAI9B;;AACA+J,MAAAA,EAAE,CAAC3C,OAAH,CAAWP,KAAX,CAAiBQ,OAAjB,GAA2B6jC,SAAS,CAACvnC,GAArC,CAL8B,CAM9B;;AACAoG,MAAAA,EAAE,CAAC+gB,IAAH,CAAQjkB,KAAR,CAAcQ,OAAd,GAAwBxH,OAAO,CAACw4B,aAAR,CAAsB+S,KAA9C;AACArhC,MAAAA,EAAE,CAAC+gB,IAAH,CAAQjkB,KAAR,CAAcoE,OAAd,GAAwB,MAAxB;;AACA,UAAIpL,OAAO,CAAC+L,MAAR,KAAmB,MAAvB,EAA+B;AAC3B7B,QAAAA,EAAE,CAAC+gB,IAAH,CAAQjkB,KAAR,CAAc2mB,QAAd,GAAyB,QAAzB;AACH,OAFD,MAEO;AACHzjB,QAAAA,EAAE,CAAC+gB,IAAH,CAAQjkB,KAAR,CAAc2mB,QAAd,GAAyB,EAAzB;AACH,OAb6B,CAc9B;;;AACA,UAAI,CAAC3tB,OAAO,CAACiQ,MAAb,EAAqB;AACjB/F,QAAAA,EAAE,CAACnD,YAAH,CAAgBC,KAAhB,CAAsBQ,OAAtB,GAAgC6jC,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAAC5S,MAA5D;AACH,OAFD,MAEO;AACHvuB,QAAAA,EAAE,CAACnD,YAAH,CAAgBC,KAAhB,CAAsBQ,OAAtB,GAAgC6jC,SAAS,CAACE,KAA1C;AACArhC,QAAAA,EAAE,CAAC8F,OAAH,CAAWhJ,KAAX,CAAiBQ,OAAjB,GAA2B6jC,SAAS,CAAC5S,MAArC;AACH;AACJ,KAlYa;;AAoYd;AACR;AACA;AACA;AACQ+S,IAAAA,UAAU,EAAE,UAAUC,OAAV,EAAmB;AAC3B7qC,MAAAA,IAAI,CAACW,MAAL,CAAY2nB,IAAZ,CAAiBhe,IAAjB,CAAsBtK,IAAtB,EAA4B6qC,OAA5B;AACH,KA1Ya;;AA4Yd;AACR;AACA;AACQC,IAAAA,WAAW,EAAE,YAAY;AACrB9qC,MAAAA,IAAI,CAACW,MAAL,CAAYoqC,KAAZ,CAAkBzgC,IAAlB,CAAuBtK,IAAvB;AACH,KAjZa;;AAmZd;AACR;AACA;AACQspB,IAAAA,IAAI,EAAE,YAAY;AACd,YAAMyG,QAAQ,GAAG/vB,IAAI,CAACqpB,WAAL,CAAiB,KAAjB,CAAjB;AACArqB,MAAAA,OAAO,CAACO,OAAR,CAAgBC,aAAhB,CAA8BoP,KAA9B,GAAsCmhB,QAAtC;AACAvkB,MAAAA,KAAK,CAAC06B,cAAN,CAAqBnW,QAArB,EAA+B/vB,IAA/B;AACH,KA1Za;;AA4Zd;AACR;AACA;AACA;AACQgrC,IAAAA,UAAU,EAAE,YAAY;AACpB,aAAOhsC,OAAP;AACH,KAlaa;;AAoad;AACR;AACA;AACA;AACA;AACQqqB,IAAAA,WAAW,EAAE,UAAUyG,YAAV,EAAwB;AACjC,aAAO9vB,IAAI,CAACqpB,WAAL,CAAiByG,YAAjB,CAAP;AACH,KA3aa;;AA6ad;AACR;AACA;AACA;AACQmb,IAAAA,OAAO,EAAE,YAAY;AACjB,aAAOjsC,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,CAAwB+B,WAA/B;AACH,KAnba;;AAqbd;AACR;AACA;AACA;AACA;AACA;AACA;AACQ8iB,IAAAA,YAAY,EAAE,UAAUN,eAAV,EAA2B;AACrCA,MAAAA,eAAe,GAAG,OAAOA,eAAP,KAA2B,QAA3B,GAAsCA,eAAtC,GAAwDv0B,OAAO,CAACu0B,eAAlF;AACA,aAAO3zB,IAAI,CAAC6zB,aAAL,CAAoB7zB,IAAI,CAAC8D,aAAL,GAAqB9E,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,CAAwBuE,SAA7C,GAAyD3U,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,CAAwB+B,WAArG,EAAmHwiB,eAAnH,CAAP;AACH,KA/ba;;AAicd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQuX,IAAAA,aAAa,EAAE,YAAY;AACvB,aAAOlsC,OAAO,CAACuoC,KAAR,GAAgBvoC,OAAO,CAACuoC,KAAR,CAAc4D,SAA9B,GAA0C,EAAjD;AACH,KA9ca;;AAgdd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAE,UAAU9iC,UAAV,EAAsB;AAChC,aAAOtJ,OAAO,CAACsJ,UAAD,CAAP,GAAsBtJ,OAAO,CAACsJ,UAAD,CAAP,CAAoB6iC,SAA1C,GAAsD,EAA7D;AACH,KAhea;;AAked;AACR;AACA;AACA;AACQ3D,IAAAA,WAAW,EAAE,UAAUF,KAAV,EAAiB;AAC1B,UAAI,CAACtnC,IAAI,CAACd,OAAL,CAAaqoC,KAAd,IAAuB,CAACD,KAA5B,EAAmC;AAEnC,UAAI,CAACtnC,IAAI,CAACa,WAAL,CAAiB0mC,KAAtB,EAA6BvnC,IAAI,CAACqI,UAAL,CAAgB,OAAhB,EAAyBrI,IAAI,CAACd,OAAL,CAAaqoC,KAAb,CAAmB8D,YAAnB,CAAgClhC,IAAhC,CAAqCnK,IAArC,EAA2CsnC,KAA3C,CAAzB,EAA4E,IAA5E,EAA7B,KACKtnC,IAAI,CAACd,OAAL,CAAaqoC,KAAb,CAAmB8D,YAAnB,CAAgC/gC,IAAhC,CAAqCtK,IAArC,EAA2CsnC,KAA3C;AACLtnC,MAAAA,IAAI,CAACmP,KAAL;AACH,KA5ea;;AA8ed;AACR;AACA;AACA;AACA;AACA;AACA;AACQkzB,IAAAA,UAAU,EAAE,UAAU5S,IAAV,EAAgB6b,eAAhB,EAAiCpzB,cAAjC,EAAiDqzB,cAAjD,EAAiE;AACzE,UAAI,OAAO9b,IAAP,KAAgB,QAApB,EAA8B;AAC1B,YAAI,CAAC6b,eAAL,EAAsB7b,IAAI,GAAGzvB,IAAI,CAACqxB,SAAL,CAAe5B,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAP;;AACtB,YAAI;AACA,gBAAM+B,GAAG,GAAGlyB,EAAE,CAACmS,WAAH,GAAiBggB,wBAAjB,CAA0ChC,IAA1C,CAAZ;;AACA,gBAAMsC,OAAO,GAAGP,GAAG,CAACvgB,UAApB;;AAEA,cAAIiH,cAAJ,EAAoB;AAChB,kBAAMzK,IAAI,GAAGzN,IAAI,CAAC8D,aAAL,GAAqB,WAArB,GAAmC,aAAhD;AACA,gBAAI0nC,SAAS,GAAG,EAAhB;;AACA,iBAAK,IAAI7jC,CAAC,GAAG,CAAR,EAAWqB,GAAG,GAAG+oB,OAAO,CAAClqB,MAA9B,EAAsCF,CAAC,GAAGqB,GAA1C,EAA+CrB,CAAC,EAAhD,EAAoD;AAChD6jC,cAAAA,SAAS,IAAIzZ,OAAO,CAACpqB,CAAD,CAAP,CAAW8F,IAAX,CAAb;AACH;;AACD,gBAAI,CAACzN,IAAI,CAACkY,cAAL,CAAoBszB,SAApB,EAA+B,IAA/B,CAAL,EAA2C;AAC9C;;AAED,cAAInxB,CAAJ,EAAO2L,CAAP,EAAU5c,CAAV,EAAag3B,IAAb,EAAmBqL,QAAnB;;AACA,iBAAQpxB,CAAC,GAAG0X,OAAO,CAAC,CAAD,CAAnB,EAAyB;AACrB,gBAAIqO,IAAI,IAAIA,IAAI,CAAClvB,QAAL,KAAkB,CAA1B,IAA+B8U,CAA/B,IAAoCA,CAAC,CAAC9U,QAAF,KAAe,CAAnD,IAAwDpR,IAAI,CAAC0U,OAAL,CAAa6F,CAAb,CAA5D,EAA6E;AACzE+lB,cAAAA,IAAI,GAAG/lB,CAAP;AACAva,cAAAA,IAAI,CAACsV,UAAL,CAAgBiF,CAAhB;AACA;AACH;;AACDjR,YAAAA,CAAC,GAAGpJ,IAAI,CAACwY,UAAL,CAAgB6B,CAAhB,EAAmB2L,CAAnB,EAAsB,KAAtB,CAAJ;AACAA,YAAAA,CAAC,GAAG5c,CAAC,CAAClI,SAAF,IAAekI,CAAnB;AACA,gBAAI,CAACqiC,QAAL,EAAeA,QAAQ,GAAGriC,CAAX;AACfg3B,YAAAA,IAAI,GAAG/lB,CAAP;AACH;;AAED,cAAI+lB,IAAI,CAAClvB,QAAL,KAAkB,CAAlB,IAAuB8U,CAAC,CAAC9U,QAAF,KAAe,CAA1C,EAA6C8U,CAAC,GAAGoa,IAAJ;AAC7C,gBAAMlyB,MAAM,GAAG8X,CAAC,CAAC9U,QAAF,KAAe,CAAf,GAAoB9H,CAAC,CAACmH,SAAF,IAAeyV,CAAC,CAAC7U,WAAF,CAActJ,MAAjD,GAA0Dme,CAAC,CAAC/U,UAAF,CAAapJ,MAAtF;AACA,cAAI0jC,cAAJ,EAAoBvrC,IAAI,CAACsQ,QAAL,CAAcm7B,QAAQ,CAACvqC,SAAT,IAAsBuqC,QAApC,EAA8CA,QAAQ,CAAC37B,WAAT,IAAwB,CAAtE,EAAyEkW,CAAzE,EAA4E9X,MAA5E,EAApB,KACKlO,IAAI,CAACsQ,QAAL,CAAc0V,CAAd,EAAiB9X,MAAjB,EAAyB8X,CAAzB,EAA4B9X,MAA5B;AACR,SA9BD,CA8BE,OAAO0D,KAAP,EAAc;AACZ,cAAI5R,IAAI,CAACuC,UAAL,IAAmBvC,IAAI,CAACwC,UAA5B,EAAwC;AACxCqP,UAAAA,OAAO,CAACC,IAAR,CAAa,iCAAiCF,KAA9C;AACA5R,UAAAA,IAAI,CAAC0O,WAAL,CAAiB,YAAjB,EAA+B,KAA/B,EAAsC+gB,IAAtC;AACH;AACJ,OArCD,MAqCO;AACH,YAAI3vB,IAAI,CAACkQ,WAAL,CAAiByf,IAAjB,CAAJ,EAA4B;AACxBzvB,UAAAA,IAAI,CAACgY,eAAL,CAAqByX,IAArB,EAA2B,KAA3B,EAAkCvX,cAAlC,EAAkD,KAAlD;AACH,SAFD,MAEO;AACH,cAAI2B,SAAS,GAAG,IAAhB;;AACA,cAAI/Z,IAAI,CAACiQ,eAAL,CAAqB0f,IAArB,KAA8B3vB,IAAI,CAACma,OAAL,CAAawV,IAAb,CAAlC,EAAsD;AAClD5V,YAAAA,SAAS,GAAG/Z,IAAI,CAAC6U,gBAAL,CAAsB3U,IAAI,CAACkP,gBAAL,EAAtB,EAA+C,IAA/C,CAAZ;AACH;;AACDlP,UAAAA,IAAI,CAACwY,UAAL,CAAgBiX,IAAhB,EAAsB5V,SAAtB,EAAiC3B,cAAjC;AACH;AACJ;;AAEDlY,MAAAA,IAAI,CAACgB,UAAL,GAAkB,IAAlB;AACAhB,MAAAA,IAAI,CAACmP,KAAL,GAnDyE,CAqDzE;;AACAnP,MAAAA,IAAI,CAACY,OAAL,CAAaiI,IAAb,CAAkB,KAAlB;AACH,KA5iBa;;AA8iBd;AACR;AACA;AACA;AACQ2mB,IAAAA,WAAW,EAAE,UAAUO,QAAV,EAAoB;AAC7B/vB,MAAAA,IAAI,CAACwvB,WAAL,CAAiBO,QAAjB;AACH,KApjBa;;AAsjBd;AACR;AACA;AACA;AACQ2b,IAAAA,cAAc,EAAE,UAAU3b,QAAV,EAAoB;AAChC,YAAML,YAAY,GAAG1vB,IAAI,CAAC2rB,wBAAL,CAA8BoE,QAA9B,CAArB;;AAEA,UAAI,CAAC/vB,IAAI,CAACyF,SAAL,CAAeE,UAApB,EAAgC;AAC5B,cAAMi8B,IAAI,GAAG9hC,IAAI,CAACoQ,aAAL,CAAmB,KAAnB,CAAb;AACA0xB,QAAAA,IAAI,CAACjuB,SAAL,GAAiB+b,YAAjB;AAEA,cAAMtgB,OAAO,GAAGpQ,OAAO,CAACO,OAAR,CAAgB6P,OAAhC;AACA,cAAMS,QAAQ,GAAG+xB,IAAI,CAAC/xB,QAAtB;;AACA,aAAK,IAAIlI,CAAC,GAAG,CAAR,EAAWqB,GAAG,GAAG6G,QAAQ,CAAChI,MAA/B,EAAuCF,CAAC,GAAGqB,GAA3C,EAAgDrB,CAAC,EAAjD,EAAqD;AACjDyH,UAAAA,OAAO,CAACvF,WAAR,CAAoBgG,QAAQ,CAAClI,CAAD,CAA5B;AACH;AACJ,OATD,MASO;AACH3H,QAAAA,IAAI,CAACssB,YAAL,CAAkBtsB,IAAI,CAACirB,YAAL,KAAsB,IAAtB,GAA6BjrB,IAAI,CAACksB,sBAAL,CAA4BwD,YAA5B,EAA0C,KAA1C,CAA/C;AACH,OAd+B,CAgBhC;;;AACA1vB,MAAAA,IAAI,CAACY,OAAL,CAAaiI,IAAb,CAAkB,KAAlB;AACH,KA5kBa;;AA8kBd;AACR;AACA;AACA;AACQ8iC,IAAAA,QAAQ,EAAE,UAAU/8B,KAAV,EAAiB;AACvB5O,MAAAA,IAAI,CAACwC,UAAL,GAAkBoM,KAAlB;AAEA9O,MAAAA,IAAI,CAACqqB,kBAAL,CAAwB,CAAC,CAACvb,KAA1B,EAAiC5O,IAAI,CAAC6B,uBAAtC;;AAEA,UAAI+M,KAAJ,EAAW;AACP;AACA5O,QAAAA,IAAI,CAAC+J,cAAL;AACA,YAAI/J,IAAI,CAACsB,mBAAL,IAA4BtB,IAAI,CAACsB,mBAAL,CAAyBi6B,QAAzD,EAAmEv7B,IAAI,CAACkK,UAAL;AACnE,YAAIlK,IAAI,CAAC8B,sBAAL,IAA+B9B,IAAI,CAAC8B,sBAAL,CAA4By5B,QAA/D,EAAyEv7B,IAAI,CAAC0K,YAAL;AACzE,YAAI1K,IAAI,CAACuB,qBAAL,IAA8BvB,IAAI,CAACuB,qBAAL,CAA2Bg6B,QAA7D,EAAuEv7B,IAAI,CAACiL,YAAL;AACvE,YAAIjL,IAAI,CAAC4rC,SAAT,EAAoB5rC,IAAI,CAACd,OAAL,CAAa2sC,MAAb,CAAoBd,KAApB,CAA0BzgC,IAA1B,CAA+BtK,IAA/B;AAEpBhB,QAAAA,OAAO,CAACO,OAAR,CAAgB8qB,IAAhB,CAAqBd,YAArB,CAAkC,UAAlC,EAA8C,MAA9C;AACH,OATD,MASO;AACHvqB,QAAAA,OAAO,CAACO,OAAR,CAAgB8qB,IAAhB,CAAqB/G,eAArB,CAAqC,UAArC;AACH;;AAED,UAAIlkB,OAAO,CAACkrB,gBAAZ,EAA8BlrB,OAAO,CAACkrB,gBAAR,CAAyBwhB,SAAzB,CAAmC,UAAnC,EAA+C,CAAC,CAACl9B,KAAjD;AACjC,KArmBa;;AAumBd;AACR;AACA;AACQm9B,IAAAA,OAAO,EAAE,YAAY;AACjB,WAAKnhC,OAAL,CAAamhC,OAAb;AACA,WAAK38B,OAAL,CAAa28B,OAAb;AACH,KA7mBa;;AA+mBd;AACR;AACA;AACSxQ,IAAAA,QAAQ,EAAE,YAAY;AACnB,WAAKwQ,OAAL;AACH,KApnBa;;AAsnBd;AACR;AACA;AACQC,IAAAA,MAAM,EAAE,YAAY;AAChB,WAAKphC,OAAL,CAAaohC,MAAb;AACA,WAAK58B,OAAL,CAAa48B,MAAb;AACH,KA5nBa;;AA8nBd;AACR;AACA;AACSC,IAAAA,OAAO,EAAE,YAAY;AAClB,WAAKD,MAAL;AACH,KAnoBa;;AAqoBd;AACR;AACA;AACQE,IAAAA,IAAI,EAAE,YAAY;AACd,YAAMC,YAAY,GAAGntC,OAAO,CAACO,OAAR,CAAgBoH,OAAhB,CAAwBP,KAA7C;AACA,UAAI+lC,YAAY,CAAC3hC,OAAb,KAAyB,MAA7B,EAAqC2hC,YAAY,CAAC3hC,OAAb,GAAuBpL,OAAO,CAACoL,OAA/B;AACxC,KA3oBa;;AA6oBd;AACR;AACA;AACQkjB,IAAAA,IAAI,EAAE,YAAY;AACd1uB,MAAAA,OAAO,CAACO,OAAR,CAAgBoH,OAAhB,CAAwBP,KAAxB,CAA8BoE,OAA9B,GAAwC,MAAxC;AACH,KAlpBa;;AAopBd;AACR;AACA;AACQu1B,IAAAA,OAAO,EAAE,YAAY;AACjB;AACA//B,MAAAA,IAAI,CAACkK,UAAL;AACAlK,MAAAA,IAAI,CAACiL,YAAL;AACAjL,MAAAA,IAAI,CAAC+J,cAAL;AACA,UAAI/J,IAAI,CAACW,MAAT,EAAiBX,IAAI,CAACW,MAAL,CAAYoqC,KAAZ,CAAkBzgC,IAAlB,CAAuBtK,IAAvB;AACjB,UAAIA,IAAI,CAAC4rC,SAAT,EAAoB5rC,IAAI,CAACd,OAAL,CAAa2sC,MAAb,CAAoBd,KAApB,CAA0BzgC,IAA1B,CAA+BtK,IAA/B;AAEpB;;AACAA,MAAAA,IAAI,CAACY,OAAL,CAAawrC,QAAb;AAEA;;;AACA5gC,MAAAA,KAAK,CAAC48B,YAAN;AAEA;;;AACAtoC,MAAAA,IAAI,CAACsV,UAAL,CAAgBpW,OAAO,CAACO,OAAR,CAAgBqL,OAAhC;AACA9K,MAAAA,IAAI,CAACsV,UAAL,CAAgBpW,OAAO,CAACO,OAAR,CAAgBoH,OAAhC;AAEA;;AACA,WAAK,IAAIgwB,CAAT,IAAc32B,IAAI,CAACS,SAAnB,EAA8B;AAAE,YAAIX,IAAI,CAACg1B,MAAL,CAAY90B,IAAZ,EAAkB22B,CAAlB,CAAJ,EAA0B,OAAO32B,IAAI,CAACS,SAAL,CAAek2B,CAAf,CAAP;AAA2B;;AACrF,WAAK,IAAIA,CAAT,IAAc32B,IAAd,EAAoB;AAAE,YAAIF,IAAI,CAACg1B,MAAL,CAAY90B,IAAZ,EAAkB22B,CAAlB,CAAJ,EAA0B,OAAO32B,IAAI,CAAC22B,CAAD,CAAX;AAAiB;;AACjE,WAAK,IAAIA,CAAT,IAAcnrB,KAAd,EAAqB;AAAE,YAAI1L,IAAI,CAACg1B,MAAL,CAAYtpB,KAAZ,EAAmBmrB,CAAnB,CAAJ,EAA2B,OAAOnrB,KAAK,CAACmrB,CAAD,CAAZ;AAAkB;;AACpE,WAAK,IAAIA,CAAT,IAAc33B,OAAd,EAAuB;AAAE,YAAIc,IAAI,CAACg1B,MAAL,CAAY91B,OAAZ,EAAqB23B,CAArB,CAAJ,EAA6B,OAAO33B,OAAO,CAAC23B,CAAD,CAAd;AAAoB;;AAC1E,WAAK,IAAIA,CAAT,IAAc13B,iBAAd,EAAiC;AAAE,YAAIa,IAAI,CAACg1B,MAAL,CAAY71B,iBAAZ,EAA+B03B,CAA/B,CAAJ,EAAuC,OAAO13B,iBAAiB,CAAC03B,CAAD,CAAxB;AAA8B;AAExG;;;AACA,WAAK,IAAIA,CAAT,IAAc,IAAd,EAAoB;AAAE,YAAI72B,IAAI,CAACg1B,MAAL,CAAY,IAAZ,EAAkB6B,CAAlB,CAAJ,EAA0B,OAAO,KAAKA,CAAL,CAAP;AAAiB;AACpE,KAlrBa;;AAorBd;AACR;AACA;AACQ/rB,IAAAA,OAAO,EAAE;AACL;AACZ;AACA;AACYmhC,MAAAA,OAAO,EAAE,YAAY;AACjB;AACA/rC,QAAAA,IAAI,CAACkK,UAAL;AACAlK,QAAAA,IAAI,CAAC0K,YAAL;AACA1K,QAAAA,IAAI,CAACiL,YAAL;AAEAjM,QAAAA,OAAO,CAACoJ,IAAR,CAAaikC,KAAb,CAAmBjmC,KAAnB,CAAyBoE,OAAzB,GAAmC,OAAnC;AACH,OAXI;;AAaL;AACZ;AACA;AACY+wB,MAAAA,QAAQ,EAAE,YAAY;AAClB,aAAKwQ,OAAL;AACH,OAlBI;;AAoBL;AACZ;AACA;AACYC,MAAAA,MAAM,EAAE,YAAY;AAChBhtC,QAAAA,OAAO,CAACoJ,IAAR,CAAaikC,KAAb,CAAmBjmC,KAAnB,CAAyBoE,OAAzB,GAAmC,MAAnC;AACH,OAzBI;;AA2BL;AACZ;AACA;AACayhC,MAAAA,OAAO,EAAE,YAAY;AAClB,aAAKD,MAAL;AACH,OAhCI;;AAkCL;AACZ;AACA;AACYE,MAAAA,IAAI,EAAE,YAAY;AACd,YAAIlsC,IAAI,CAAC8C,SAAT,EAAoB;AAChB0I,UAAAA,KAAK,CAAC4c,kBAAN;AACH,SAFD,MAEO;AACHppB,UAAAA,OAAO,CAACO,OAAR,CAAgBqL,OAAhB,CAAwBxE,KAAxB,CAA8BoE,OAA9B,GAAwC,EAAxC;AACAxL,UAAAA,OAAO,CAACO,OAAR,CAAgButB,YAAhB,CAA6B1mB,KAA7B,CAAmCoE,OAAnC,GAA6C,EAA7C;AACH;AACJ,OA5CI;;AA8CL;AACZ;AACA;AACYkjB,MAAAA,IAAI,EAAE,YAAY;AACd,YAAI1tB,IAAI,CAAC8C,SAAT,EAAoB;AAChB0I,UAAAA,KAAK,CAACif,YAAN;AACH,SAFD,MAEO;AACHzrB,UAAAA,OAAO,CAACO,OAAR,CAAgBqL,OAAhB,CAAwBxE,KAAxB,CAA8BoE,OAA9B,GAAwC,MAAxC;AACAxL,UAAAA,OAAO,CAACO,OAAR,CAAgButB,YAAhB,CAA6B1mB,KAA7B,CAAmCoE,OAAnC,GAA6C,MAA7C;AACH;AACJ;AAxDI,KAvrBK;;AAkvBd;AACR;AACA;AACS4E,IAAAA,OAAO,EAAE;AACN;AACZ;AACA;AACY28B,MAAAA,OAAO,EAAE,YAAY;AAClB;AACC/rC,QAAAA,IAAI,CAAC+J,cAAL;AACA,YAAI/J,IAAI,CAAC4rC,SAAT,EAAoB5rC,IAAI,CAACd,OAAL,CAAa2sC,MAAb,CAAoBd,KAApB,CAA0BzgC,IAA1B,CAA+BtK,IAA/B;AAEpBhB,QAAAA,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,CAAwBma,YAAxB,CAAqC,iBAArC,EAAwD,KAAxD;AACAvpB,QAAAA,IAAI,CAACuC,UAAL,GAAkB,IAAlB;;AAEA,YAAInD,OAAO,CAACkrB,gBAAZ,EAA8B;AAC1BlrB,UAAAA,OAAO,CAACkrB,gBAAR,CAAyBwhB,SAAzB,CAAmC,UAAnC,EAA+C,IAA/C;AACH,SAFD,MAEO;AACH9sC,UAAAA,OAAO,CAACO,OAAR,CAAgB8qB,IAAhB,CAAqBd,YAArB,CAAkC,UAAlC,EAA8C,UAA9C;AACH;AACJ,OAjBK;;AAmBN;AACZ;AACA;AACYyiB,MAAAA,MAAM,EAAE,YAAY;AAChBhtC,QAAAA,OAAO,CAACO,OAAR,CAAgB6P,OAAhB,CAAwBma,YAAxB,CAAqC,iBAArC,EAAwD,IAAxD;AACAvpB,QAAAA,IAAI,CAACuC,UAAL,GAAkB,KAAlB;;AAEA,YAAInD,OAAO,CAACkrB,gBAAZ,EAA8B;AAC1BlrB,UAAAA,OAAO,CAACkrB,gBAAR,CAAyBwhB,SAAzB,CAAmC,UAAnC,EAA+C,KAA/C;AACH,SAFD,MAEO;AACH9sC,UAAAA,OAAO,CAACO,OAAR,CAAgB8qB,IAAhB,CAAqB/G,eAArB,CAAqC,UAArC;AACH;AACJ;AA/BK;AArvBI,GAAlB;AAwxBA;AACA;;AACAtjB,EAAAA,IAAI,CAACS,SAAL,GAAiBA,SAAjB;AACAT,EAAAA,IAAI,CAACZ,OAAL,GAAeA,OAAf,CAlvQ6F,CAovQ7F;;AACA,MAAI65B,SAAS,GAAGj6B,OAAO,CAACO,OAAxB;AACA,MAAI+sC,QAAQ,GAAGrT,SAAS,CAACz5B,aAAzB;AACA,MAAI+sC,KAAK,GAAGtT,SAAS,CAACtyB,OAAtB;AACA2lC,EAAAA,QAAQ,CAAClmC,KAAT,CAAeoE,OAAf,GAAyB,MAAzB;AACA+hC,EAAAA,KAAK,CAACnmC,KAAN,CAAYoE,OAAZ,GAAsB,OAAtB,CAzvQ6F,CA2vQ7F;;AACA,MAAIpL,OAAO,CAACiQ,MAAZ,EAAoB;AAChB4pB,IAAAA,SAAS,CAAC9yB,YAAV,CAAuB+G,gBAAvB,CAAwC,MAAxC,EAAgD,YAAY;AACxDpN,MAAAA,IAAI,CAACyqC,kBAAL,CAAwB,IAAxB,EAA8BnrC,OAA9B;;AACAY,MAAAA,IAAI,CAAC44B,WAAL,CAAiB,KAAjB,EAAwBx5B,OAAO,CAACwP,KAAhC;;AACAxP,MAAAA,OAAO,CAACwP,KAAR,GAAgB,IAAhB;AACH,KAJD;AAKH,GAlwQ4F,CAowQ7F;;;AACA,MAAI,OAAO09B,QAAQ,CAAC14B,kBAAhB,KAAuC,QAA3C,EAAqD;AACjD04B,IAAAA,QAAQ,CAACx3B,UAAT,CAAoBzE,YAApB,CAAiCk8B,KAAjC,EAAwCD,QAAQ,CAAC14B,kBAAjD;AACH,GAFD,MAEO;AACH04B,IAAAA,QAAQ,CAACx3B,UAAT,CAAoBjL,WAApB,CAAgC0iC,KAAhC;AACH;;AAEDtT,EAAAA,SAAS,CAAC1M,UAAV,CAAqB1iB,WAArB,CAAiCovB,SAAS,CAAC9yB,YAA3C;AACA8yB,EAAAA,SAAS,GAAGqT,QAAQ,GAAGC,KAAK,GAAG,IAA/B,CA5wQ6F,CA8wQ7F;;AACA,MAAI,CAACntC,OAAO,CAACiQ,MAAb,EAAqB;AACjBrP,IAAAA,IAAI,CAAC44B,WAAL,CAAiB,KAAjB,EAAwBx5B,OAAO,CAACwP,KAAhC;;AACAxP,IAAAA,OAAO,CAACwP,KAAR,GAAgB,IAAhB;AACH;;AAED,SAAOnO,SAAP;AACH","sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport _Constructor from './constructor';\r\nimport _Context from './context';\r\nimport _history from './history';\r\nimport _util from './util';\r\nimport _notice from '../plugins/modules/_notice';\r\n\r\n/**\r\n * @description SunEditor constuctor function.\r\n * create core object and event registration.\r\n * core, event, functions\r\n * @param {Object} context\r\n * @param {Object} pluginCallButtons\r\n * @param {Object} plugins \r\n * @param {Object} lang\r\n * @param {Object} options\r\n * @param {Object} _responsiveButtons\r\n * @returns {Object} functions Object\r\n */\r\nexport default function (context, pluginCallButtons, plugins, lang, options, _responsiveButtons) {\r\n    const _d = context.element.originElement.ownerDocument || document;\r\n    const _w = _d.defaultView || window;\r\n    const util = _util;\r\n    const icons = options.icons;\r\n\r\n    /**\r\n     * @description editor core object\r\n     * should always bind this object when registering an event in the plug-in.\r\n     */\r\n    const core = {\r\n        _d: _d,\r\n        _w: _w,\r\n        _parser: new _w.DOMParser(),\r\n        _prevRtl: options.rtl,\r\n\r\n        /**\r\n         * @description Document object of the iframe if created as an iframe || _d\r\n         * @private\r\n         */\r\n        _wd: null,\r\n\r\n        /**\r\n         * @description Window object of the iframe if created as an iframe || _w\r\n         * @private\r\n         */\r\n        _ww: null,\r\n        \r\n        /**\r\n         * @description Closest ShadowRoot to editor if found\r\n         * @private\r\n         */\r\n        _shadowRoot: null,\r\n\r\n        /**\r\n         * @description Block controller mousedown events in \"shadowRoot\" environment\r\n         * @private\r\n         */\r\n        _shadowRootControllerEventTarget: null,\r\n\r\n        /**\r\n         * @description Util object\r\n         */\r\n        util: util,\r\n\r\n        /**\r\n         * @description Functions object\r\n         */\r\n        functions: null,\r\n\r\n        /**\r\n         * @description Editor options\r\n         */\r\n        options: null,\r\n\r\n        /**\r\n         * @description Computed style of the wysiwyg area (window.getComputedStyle(context.element.wysiwyg))\r\n         */\r\n        wwComputedStyle: null,\r\n\r\n        /**\r\n         * @description Notice object\r\n         */\r\n        notice: _notice,\r\n\r\n        /**\r\n         * @description Default icons object\r\n         */\r\n        icons: icons,\r\n\r\n        /**\r\n         * @description History object for undo, redo\r\n         */\r\n        history: null,\r\n        \r\n        /**\r\n         * @description Elements and user options parameters of the suneditor\r\n         */\r\n        context: context,\r\n\r\n        /**\r\n         * @description Plugin buttons\r\n         */\r\n        pluginCallButtons: pluginCallButtons,\r\n\r\n        /**\r\n         * @description Loaded plugins\r\n         */\r\n        plugins: plugins || {},\r\n\r\n        /**\r\n         * @description Whether the plugin is initialized\r\n         */\r\n        initPlugins: {},\r\n\r\n        /**\r\n         * @description Object for managing submenu elements\r\n         * @private\r\n         */\r\n        _targetPlugins: {},\r\n\r\n        /**\r\n         * @description Save rendered submenus and containers\r\n         * @private\r\n         */\r\n        _menuTray: {},\r\n\r\n        /**\r\n         * @description loaded language\r\n         */\r\n        lang: lang,\r\n\r\n        /**\r\n         * @description The selection node (core.getSelectionNode()) to which the effect was last applied\r\n         */\r\n        effectNode: null,\r\n\r\n        /**\r\n         * @description submenu element\r\n         */\r\n        submenu: null,\r\n\r\n        /**\r\n         * @description container element\r\n         */\r\n        container: null,\r\n\r\n        /**\r\n         * @description current subment name\r\n         * @private\r\n         */\r\n        _submenuName: '',\r\n\r\n        /**\r\n         * @description binded submenuOff method\r\n         * @private\r\n         */\r\n        _bindedSubmenuOff: null,\r\n\r\n        /**\r\n         * @description binded containerOff method\r\n         * @private\r\n         */\r\n        _bindedContainerOff: null,\r\n\r\n        /**\r\n         * @description active button element in submenu\r\n         */\r\n        submenuActiveButton: null,\r\n\r\n        /**\r\n         * @description active button element in container\r\n         */\r\n        containerActiveButton: null,\r\n\r\n        /**\r\n         * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n         */\r\n        controllerArray: [],\r\n\r\n        /**\r\n         * @description The name of the plugin that called the currently active controller\r\n         */\r\n        currentControllerName: '',\r\n\r\n        /**\r\n         * @description The target element of current controller\r\n         */\r\n        currentControllerTarget: null,\r\n\r\n        /**\r\n         * @description The file component object of current selected file tag (getFileComponent)\r\n         */\r\n        currentFileComponentInfo: null,\r\n\r\n        /**\r\n         * @description An array of buttons whose class name is not \"se-code-view-enabled\"\r\n         */\r\n        codeViewDisabledButtons: [],\r\n\r\n        /**\r\n         * @description An array of buttons whose class name is not \"se-resizing-enabled\"\r\n         */\r\n        resizingDisabledButtons: [],\r\n\r\n        /**\r\n         * @description active more layer element in submenu\r\n         * @private\r\n         */\r\n        _moreLayerActiveButton: null,\r\n\r\n        /**\r\n         * @description Tag whitelist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n         * ^(options._editorTagsWhitelist)$\r\n         * @private\r\n         */\r\n        _htmlCheckWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag blacklist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n         * @private\r\n         */\r\n         _htmlCheckBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description RegExp when using check disallowd tags. (b, i, ins, strike, s)\r\n         * @private\r\n         */\r\n        _disallowedTextTagsRegExp: null,\r\n\r\n        /**\r\n         * @description Editor tags whitelist (RegExp object)\r\n         * util.createTagsWhitelist(options._editorTagsWhitelist)\r\n         */\r\n        editorTagsWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Editor tags blacklist (RegExp object)\r\n         * util.createTagsBlacklist(options.tagsBlacklist)\r\n         */\r\n        editorTagsBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag whitelist when pasting (RegExp object)\r\n         * util.createTagsWhitelist(options.pasteTagsWhitelist)\r\n         */\r\n        pasteTagsWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag blacklist when pasting (RegExp object)\r\n         * util.createTagsBlacklist(options.pasteTagsBlacklist)\r\n         */\r\n        pasteTagsBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor has focus\r\n         */\r\n        hasFocus: false,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor is disabled\r\n         */\r\n        isDisabled: false,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor is readOnly\r\n         */\r\n        isReadOnly: false,\r\n\r\n        /**\r\n         * @description Attributes whitelist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Attributes blacklist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Attributes of tags whitelist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesTagsWhitelist: null,\r\n\r\n        /**\r\n         * @description Attributes of tags blacklist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesTagsBlacklist: null,\r\n\r\n        /**\r\n         * @description binded controllersOff method\r\n         * @private\r\n         */\r\n        _bindControllersOff: null,\r\n\r\n        /**\r\n         * @description Is inline mode?\r\n         * @private\r\n         */\r\n        _isInline: null,\r\n\r\n        /**\r\n         * @description Is balloon|balloon-always mode?\r\n         * @private\r\n         */\r\n        _isBalloon: null,\r\n\r\n        /**\r\n         * @description Is balloon-always mode?\r\n         * @private\r\n         */\r\n        _isBalloonAlways: null,\r\n\r\n        /**\r\n         * @description Required value when using inline mode to sticky toolbar\r\n         * @private\r\n         */\r\n        _inlineToolbarAttr: {top: '', width: '', isShow: false},\r\n\r\n        /**\r\n         * @description Variable that controls the \"blur\" event in the editor of inline or balloon mode when the focus is moved to submenu\r\n         * @private\r\n         */\r\n        _notHideToolbar: false,\r\n\r\n        /**\r\n         * @description Variable value that sticky toolbar mode\r\n         * @private\r\n         */\r\n        _sticky: false,\r\n\r\n        /**\r\n         * @description Variables for controlling focus and blur events\r\n         * @private\r\n         */\r\n        _antiBlur: false,\r\n\r\n        /**\r\n         * @description Component line breaker element\r\n         * @private\r\n         */\r\n        _lineBreaker: null,\r\n        _lineBreakerButton: null,\r\n\r\n        /**\r\n         * @description If true, (initialize, reset) all indexes of image, video information\r\n         * @private\r\n         */\r\n        _componentsInfoInit: true,\r\n        _componentsInfoReset: false,\r\n\r\n        /**\r\n         * @description Plugins array with \"active\" method.\r\n         * \"activePlugins\" runs the \"add\" method when creating the editor.\r\n         */\r\n        activePlugins: null,\r\n\r\n        /**\r\n         * @description Information of tags that should maintain HTML structure, style, class name, etc. (In use by \"math\" plugin)\r\n         * When inserting \"html\" such as paste, it is executed on the \"html\" to be inserted. (core.cleanHTML)\r\n         * Basic Editor Actions:\r\n         * 1. All classes not starting with \"__se__\" or \"se-\" in the editor are removed.\r\n         * 2. The style of all tags except the \"span\" tag is removed from the editor.\r\n         * \"managedTagsInfo\" structure ex:\r\n         * managedTagsInfo: {\r\n         *   query: '.__se__xxx, se-xxx'\r\n         *   map: {\r\n         *     '__se__xxx': method.bind(core),\r\n         *     'se-xxx': method.bind(core),\r\n         *   }\r\n         * }\r\n         * @example\r\n         * Define in the following return format in the \"managedTagInfo\" function of the plugin.\r\n         * managedTagInfo() => {\r\n         *  return {\r\n         *    className: 'string', // Class name to identify the tag. (\"__se__xxx\", \"se-xxx\")\r\n         *    // Change the html of the \"element\". (\"element\" is the element found with \"className\".)\r\n         *    // \"method\" is executed by binding \"core\".\r\n         *    method: function (element) {\r\n         *      // this === core\r\n         *      element.innerHTML = // (rendered html);\r\n         *    }\r\n         *  }\r\n         * }\r\n         */\r\n        managedTagsInfo: null,\r\n\r\n        /**\r\n         * @description cashing: options.charCounterType === 'byte-html'\r\n         * @private\r\n         */\r\n        _charTypeHTML: false,\r\n\r\n        /**\r\n         * @description Array of \"checkFileInfo\" functions with the core bound\r\n         * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n         * \"fileInfoPlugins\" runs the \"add\" method when creating the editor.\r\n         * \"checkFileInfo\" method is always call just before the \"change\" event.\r\n         * @private\r\n         */\r\n        _fileInfoPluginsCheck: null,\r\n\r\n        /**\r\n         * @description Array of \"resetFileInfo\" functions with the core bound\r\n         * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n         * \"checkFileInfo\" method is always call just before the \"functions.setOptions\" method.\r\n         * @private\r\n         */\r\n        _fileInfoPluginsReset: null,\r\n\r\n        /**\r\n         * @description Variables for file component management\r\n         * @private\r\n         */\r\n        _fileManager: {\r\n            tags: null,\r\n            regExp: null,\r\n            queryString: null,\r\n            pluginRegExp: null,\r\n            pluginMap: null\r\n        },\r\n\r\n        /**\r\n         * @description Elements that need to change text or className for each selection change\r\n         * After creating the editor, \"activePlugins\" are added.\r\n         * @property {Element} STRONG bold button\r\n         * @property {Element} U underline button\r\n         * @property {Element} EM italic button\r\n         * @property {Element} DEL strike button\r\n         * @property {Element} SUB subscript button\r\n         * @property {Element} SUP superscript button\r\n         * @property {Element} OUTDENT outdent button\r\n         * @property {Element} INDENT indent button\r\n         */\r\n        commandMap: null,\r\n\r\n        /**\r\n         * @description CSS properties related to style tags \r\n         * @private\r\n         */\r\n        _commandMapStyles: {\r\n            STRONG: ['font-weight'],\r\n            U: ['text-decoration'],\r\n            EM: ['font-style'],\r\n            DEL: ['text-decoration']\r\n        },\r\n\r\n        /**\r\n         * @description Contains pairs of all \"data-commands\" and \"elements\" setted in toolbar over time\r\n         * Used primarily to save and recover button states after the toolbar re-creation\r\n         * Updates each \"_cachingButtons()\" invocation  \r\n         */\r\n        allCommandButtons: null,\r\n\r\n        /**\r\n         * @description Style button related to edit area\r\n         * @property {Element} fullScreen fullScreen button element\r\n         * @property {Element} showBlocks showBlocks button element\r\n         * @property {Element} codeView codeView button element\r\n         * @private\r\n         */\r\n        _styleCommandMap: null,\r\n\r\n        /**\r\n         * @description Map of default command\r\n         * @private\r\n         */\r\n        _defaultCommand: {\r\n            bold: options.textTags.bold,\r\n            underline: options.textTags.underline,\r\n            italic: options.textTags.italic,\r\n            strike: options.textTags.strike,\r\n            subscript: options.textTags.sub,\r\n            superscript: options.textTags.sup\r\n        },\r\n\r\n        /**\r\n         * @description Variables used internally in editor operation\r\n         * @property {Boolean} isCodeView State of code view\r\n         * @property {Boolean} isFullScreen State of full screen\r\n         * @property {Number} innerHeight_fullScreen InnerHeight in editor when in full screen\r\n         * @property {Number} resizeClientY Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n         * @property {Number} tabSize Indent size of tab (4)\r\n         * @property {Number} codeIndent Indent size of Code view mode (2)\r\n         * @property {Number} minResizingSize Minimum size of editing area when resized {Number} (.se-wrapper-inner {min-height: 65px;} || 65)\r\n         * @property {Array} currentNodes  An array of the current cursor's node structure\r\n         * @private\r\n         */\r\n        _variable: {\r\n            isChanged: false,\r\n            isCodeView: false,\r\n            isFullScreen: false,\r\n            innerHeight_fullScreen: 0,\r\n            resizeClientY: 0,\r\n            tabSize: 4,\r\n            codeIndent: 2,\r\n            minResizingSize: util.getNumber((context.element.wysiwygFrame.style.minHeight || '65'), 0),\r\n            currentNodes: [],\r\n            currentNodesMap: [],\r\n            _range: null,\r\n            _selectionNode: null,\r\n            _originCssText: context.element.topArea.style.cssText,\r\n            _bodyOverflow: '',\r\n            _editorAreaOriginCssText: '',\r\n            _wysiwygOriginCssText: '',\r\n            _codeOriginCssText: '',\r\n            _fullScreenAttrs: {sticky: false, balloon: false, inline: false},\r\n            _lineBreakComp: null,\r\n            _lineBreakDir: ''\r\n        },\r\n\r\n        /**\r\n         * @description Save the current buttons states to \"allCommandButtons\" object\r\n         */\r\n        saveButtonStates: function () {\r\n            if (!this.allCommandButtons) this.allCommandButtons = {};\r\n\r\n            const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\r\n            for (let i = 0, element, command; i < currentButtons.length; i++) {\r\n                element = currentButtons[i];\r\n                command = element.getAttribute('data-command');\r\n\r\n                this.allCommandButtons[command] = element;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Recover the current buttons states from \"allCommandButtons\" object\r\n         */\r\n        recoverButtonStates: function () {\r\n            if (this.allCommandButtons) {\r\n                const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]'); \r\n                for (let i = 0, button, command, oldButton; i < currentButtons.length; i++) {\r\n                    button = currentButtons[i]; \r\n                    command = button.getAttribute('data-command');\r\n\r\n                    oldButton = this.allCommandButtons[command];\r\n                    if (oldButton) {\r\n                        button.parentElement.replaceChild(oldButton, button);\r\n                        if (this.context.tool[command]) this.context.tool[command] = oldButton;\r\n                    }\r\n                }   \r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n         * If the plugin is added call callBack function.\r\n         * @param {String} pluginName The name of the plugin to call\r\n         * @param {function} callBackFunction Function to be executed immediately after module call\r\n         * @param {Element|null} _target Plugin target button (This is not necessary if you have a button list when creating the editor)\r\n         */\r\n        callPlugin: function (pluginName, callBackFunction, _target) {\r\n            _target = _target || pluginCallButtons[pluginName];\r\n\r\n            if (!this.plugins[pluginName]) {\r\n                throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\r\n            } else if (!this.initPlugins[pluginName]) {\r\n                this.plugins[pluginName].add(this, _target);\r\n                this.initPlugins[pluginName] = true;\r\n            } else if (typeof this._targetPlugins[pluginName] === 'object' && !!_target) {\r\n                this.initMenuTarget(pluginName, _target, this._targetPlugins[pluginName]);\r\n            }\r\n\r\n            if (this.plugins[pluginName].active && !this.commandMap[pluginName] && !!_target) {\r\n                this.commandMap[pluginName] = _target;\r\n                this.activePlugins.push(pluginName);\r\n            }\r\n                \r\n            if (typeof callBackFunction === 'function') callBackFunction();\r\n        },\r\n\r\n        /**\r\n         * @description If the module is not added, add the module and call the 'add' function\r\n         * @param {Array} moduleArray module object's Array [dialog, resizing]\r\n         */\r\n        addModule: function (moduleArray) {\r\n            for (let i = 0, len = moduleArray.length, moduleName; i < len; i++) {\r\n                moduleName = moduleArray[i].name;\r\n                if (!this.plugins[moduleName]) {\r\n                    this.plugins[moduleName] = moduleArray[i];\r\n                }\r\n                if (!this.initPlugins[moduleName]) {\r\n                    this.initPlugins[moduleName] = true;\r\n                    if (typeof this.plugins[moduleName].add === 'function') this.plugins[moduleName].add(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current editor-relative scroll offset.\r\n         * @returns {Object} {top, left}\r\n         */\r\n        getGlobalScrollOffset: function () {\r\n            let t = 0, l = 0;\r\n            let el = context.element.topArea;\r\n            while (el) {\r\n                t += el.scrollTop;\r\n                l += el.scrollLeft;\r\n                el = el.parentElement;\r\n            }\r\n            \r\n            el = this._shadowRoot ? this._shadowRoot.host : null;\r\n            while (el) {\r\n                t += el.scrollTop;\r\n                l += el.scrollLeft;\r\n                el = el.parentElement;\r\n            }\r\n\r\n            return {\r\n                top: t,\r\n                left: l\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Method for managing submenu element.\r\n         * You must add the \"submenu\" element using the this method at custom plugin.\r\n         * @param {String} pluginName Plugin name\r\n         * @param {Element|null} target Target button\r\n         * @param {Element} menu Submenu element\r\n         */\r\n        initMenuTarget: function (pluginName, target, menu) {\r\n            if (!target) {\r\n                this._targetPlugins[pluginName] = menu;\r\n            } else {\r\n                context.element._menuTray.appendChild(menu);\r\n                this._targetPlugins[pluginName] = true;\r\n                this._menuTray[target.getAttribute('data-command')] = menu;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Enable submenu\r\n         * @param {Element} element Submenu's button element to call\r\n         */\r\n        submenuOn: function (element) {\r\n            if (this._bindedSubmenuOff) this._bindedSubmenuOff();\r\n            if (this._bindControllersOff) this.controllersOff();\r\n\r\n            const submenuName = this._submenuName = element.getAttribute('data-command');\r\n            const menu = this.submenu = this._menuTray[submenuName];\r\n            this.submenuActiveButton = element;\r\n            this._setMenuPosition(element, menu);\r\n            \r\n            this._bindedSubmenuOff = this.submenuOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindedSubmenuOff, false);\r\n\r\n            if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\r\n            this._antiBlur = true;\r\n        },\r\n\r\n        /**\r\n         * @description Disable submenu\r\n         */\r\n        submenuOff: function () {\r\n            this.removeDocEvent('mousedown', this._bindedSubmenuOff);\r\n            this._bindedSubmenuOff = null;\r\n\r\n            if (this.submenu) {\r\n                this._submenuName = '';\r\n                this.submenu.style.display = 'none';\r\n                this.submenu = null;\r\n                util.removeClass(this.submenuActiveButton, 'on');\r\n                this.submenuActiveButton = null;\r\n                this._notHideToolbar = false;\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Disable more layer\r\n         */\r\n        moreLayerOff: function() {\r\n            if (this._moreLayerActiveButton) {\r\n                const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\r\n                layer.style.display = 'none';\r\n                util.removeClass(this._moreLayerActiveButton, 'on');\r\n                this._moreLayerActiveButton = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Enable container\r\n         * @param {Element} element Container's button element to call\r\n         */\r\n        containerOn: function (element) {\r\n            if (this._bindedContainerOff) this._bindedContainerOff();\r\n\r\n            const containerName = this._containerName = element.getAttribute('data-command');\r\n            const menu = this.container = this._menuTray[containerName];\r\n            this.containerActiveButton = element;\r\n            this._setMenuPosition(element, menu);\r\n            \r\n            this._bindedContainerOff = this.containerOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindedContainerOff, false);\r\n\r\n            if (this.plugins[containerName].on) this.plugins[containerName].on.call(this);\r\n            this._antiBlur = true;\r\n        },\r\n\r\n        /**\r\n         * @description Disable container\r\n         */\r\n        containerOff: function () {\r\n            this.removeDocEvent('mousedown', this._bindedContainerOff);\r\n            this._bindedContainerOff = null;\r\n\r\n            if (this.container) {\r\n                this._containerName = '';\r\n                this.container.style.display = 'none';\r\n                this.container = null;\r\n                util.removeClass(this.containerActiveButton, 'on');\r\n                this.containerActiveButton = null;\r\n                this._notHideToolbar = false;\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Set the menu position. (submenu, container)\r\n         * @param {*} element Button element\r\n         * @param {*} menu Menu element\r\n         * @private\r\n         */\r\n        _setMenuPosition: function (element, menu) {\r\n            menu.style.visibility = 'hidden';\r\n            menu.style.display = 'block';\r\n            menu.style.height = '';\r\n            util.addClass(element, 'on');\r\n\r\n            const toolbar = this.context.element.toolbar;\r\n            const toolbarW = toolbar.offsetWidth;\r\n            const toolbarOffset = event._getEditorOffsets(context.element.toolbar);\r\n            const menuW = menu.offsetWidth;\r\n            const l = element.parentElement.offsetLeft + 3;\r\n\r\n            // rtl\r\n            if (options.rtl) {\r\n                const elementW = element.offsetWidth;\r\n                const rtlW = menuW > elementW ? menuW - elementW : 0;\r\n                const rtlL = rtlW > 0 ? 0 : elementW - menuW;\r\n                menu.style.left = (l - rtlW + rtlL) + 'px';\r\n                if (toolbarOffset.left > event._getEditorOffsets(menu).left) {\r\n                    menu.style.left = '0px';\r\n                }\r\n            } else {\r\n                const overLeft = toolbarW <= menuW ? 0 : toolbarW - (l + menuW);\r\n                if (overLeft < 0) menu.style.left = (l + overLeft) + 'px';\r\n                else menu.style.left = l + 'px';\r\n            }\r\n\r\n            // get element top\r\n            let t = 0;\r\n            let offsetEl = element;\r\n            while (offsetEl && offsetEl !== toolbar) {\r\n                t += offsetEl.offsetTop;\r\n                offsetEl = offsetEl.offsetParent;\r\n            }\r\n\r\n            const bt = t;\r\n            if (this._isBalloon) {\r\n                t += toolbar.offsetTop + element.offsetHeight;\r\n            } else {\r\n                t -= element.offsetHeight;\r\n            }\r\n\r\n            // set menu position\r\n            const toolbarTop = toolbarOffset.top;\r\n            const menuHeight = menu.offsetHeight;\r\n            const scrollTop = this.getGlobalScrollOffset().top;\r\n\r\n            const menuHeight_bottom = _w.innerHeight - (toolbarTop - scrollTop + bt + element.parentElement.offsetHeight);\r\n            if (menuHeight_bottom < menuHeight) {\r\n                let menuTop = -1 * (menuHeight - bt + 3);\r\n                const insTop = toolbarTop - scrollTop + menuTop;\r\n                const menuHeight_top = menuHeight + (insTop < 0 ? insTop : 0);\r\n                \r\n                if (menuHeight_top > menuHeight_bottom) {\r\n                    menu.style.height = menuHeight_top + 'px';\r\n                    menuTop = -1 * (menuHeight_top - bt + 3);\r\n                } else {\r\n                    menu.style.height = menuHeight_bottom + 'px';\r\n                    menuTop = bt + element.parentElement.offsetHeight;\r\n                }\r\n\r\n                menu.style.top = menuTop + 'px';\r\n            } else {\r\n                menu.style.top = (bt + element.parentElement.offsetHeight) + 'px';\r\n            }\r\n\r\n            menu.style.visibility = '';\r\n        },\r\n\r\n        /**\r\n         * @description Show controller at editor area (controller elements, function, \"controller target element(@Required)\", \"controller name(@Required)\", etc..)\r\n         * @param {*} arguments controller elements, functions..\r\n         */\r\n        controllersOn: function () {\r\n            if (this._bindControllersOff) this._bindControllersOff();\r\n            this.controllerArray = [];\r\n\r\n            for (let i = 0, arg; i < arguments.length; i++) {\r\n                arg = arguments[i];\r\n                if (!arg) continue;\r\n                \r\n                if (typeof arg === 'string') {\r\n                    this.currentControllerName = arg;\r\n                    continue;\r\n                }\r\n                if (typeof arg === 'function') {\r\n                    this.controllerArray.push(arg);\r\n                    continue;\r\n                }\r\n                if (!util.hasClass(arg, 'se-controller')) {\r\n                    this.currentControllerTarget = arg;\r\n                    this.currentFileComponentInfo = this.getFileComponent(arg);\r\n                    continue;\r\n                }\r\n                if (arg.style) {\r\n                    arg.style.display = 'block';\r\n                    if (this._shadowRoot && this._shadowRootControllerEventTarget.indexOf(arg) === -1) {\r\n                        arg.addEventListener('mousedown', function (e) { e.preventDefault(); e.stopPropagation(); });\r\n                        this._shadowRootControllerEventTarget.push(arg);\r\n                    }\r\n                }\r\n                this.controllerArray.push(arg);\r\n            }\r\n\r\n            this._bindControllersOff = this.controllersOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindControllersOff, false);\r\n            this.addDocEvent('keydown', this._bindControllersOff, false);\r\n            this._antiBlur = true;\r\n\r\n            if (typeof functions.showController === 'function') functions.showController(this.currentControllerName, this.controllerArray, this);\r\n        },\r\n\r\n        /**\r\n         * @description Hide controller at editor area (link button, image resize button..)\r\n         * @param {KeyboardEvent|MouseEvent|null} e Event object when called from mousedown and keydown events registered in \"core.controllersOn\"\r\n         */\r\n        controllersOff: function (e) {\r\n            this._lineBreaker.style.display = 'none';\r\n            const len = this.controllerArray.length;\r\n\r\n            if (e && e.target && len > 0) {\r\n                for (let i = 0; i < len; i++) {\r\n                    if (typeof this.controllerArray[i].contains === 'function' && this.controllerArray[i].contains(e.target)) return;\r\n                }\r\n            }\r\n            \r\n            if (this._fileManager.pluginRegExp.test(this.currentControllerName) && e && e.type === 'keydown' && e.keyCode !== 27) return;\r\n            context.element.lineBreaker_t.style.display = context.element.lineBreaker_b.style.display = 'none';\r\n            this._variable._lineBreakComp = null;\r\n\r\n            this.currentControllerName = '';\r\n            this.currentControllerTarget = null;\r\n            this.currentFileComponentInfo = null;\r\n            this.effectNode = null;\r\n            if (!this._bindControllersOff) return;\r\n\r\n            this.removeDocEvent('mousedown', this._bindControllersOff);\r\n            this.removeDocEvent('keydown', this._bindControllersOff);\r\n            this._bindControllersOff = null;\r\n\r\n            if (len > 0) {\r\n                for (let i = 0; i < len; i++) {\r\n                    if (typeof this.controllerArray[i] === 'function') this.controllerArray[i]();\r\n                    else this.controllerArray[i].style.display = 'none';\r\n                }\r\n\r\n                this.controllerArray = [];\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Specify the position of the controller.\r\n         * @param {Element} controller Controller element.\r\n         * @param {Element} referEl Element that is the basis of the controller's position.\r\n         * @param {String} position Type of position (\"top\" | \"bottom\")\r\n         * When using the \"top\" position, there should not be an arrow on the controller.\r\n         * When using the \"bottom\" position there should be an arrow on the controller.\r\n         * @param {Object} addOffset These are the left and top values that need to be added specially. \r\n         * This argument is required. - {left: 0, top: 0}\r\n         * Please enter the value based on ltr mode.\r\n         * Calculated automatically in rtl mode.\r\n         */\r\n        setControllerPosition: function (controller, referEl, position, addOffset) {\r\n            if (options.rtl) addOffset.left *= -1;\r\n\r\n            const offset = util.getOffset(referEl, context.element.wysiwygFrame);\r\n            controller.style.visibility = 'hidden';\r\n            controller.style.display = 'block';\r\n\r\n            // Height value of the arrow element is 11px\r\n            const topMargin = position === 'top' ? -(controller.offsetHeight + 2) : (referEl.offsetHeight + 12);\r\n            controller.style.top = (offset.top + topMargin + addOffset.top) + 'px';\r\n\r\n            const l = offset.left - context.element.wysiwygFrame.scrollLeft + addOffset.left;\r\n            const controllerW = controller.offsetWidth;\r\n            const referElW = referEl.offsetWidth;\r\n            \r\n            const allow = util.hasClass(controller.firstElementChild, 'se-arrow') ? controller.firstElementChild : null;\r\n\r\n            // rtl (Width value of the arrow element is 22px)\r\n            if (options.rtl) {\r\n                const rtlW = (controllerW > referElW) ? controllerW - referElW : 0;\r\n                const rtlL = rtlW > 0 ? 0 : referElW - controllerW;\r\n                controller.style.left = (l - rtlW + rtlL) + 'px';\r\n                \r\n                if (rtlW > 0) {\r\n                    if (allow) allow.style.left = ((controllerW - 14 < 10 + rtlW) ? (controllerW - 14) : (10 + rtlW)) + 'px';\r\n                }\r\n                \r\n                const overSize = context.element.wysiwygFrame.offsetLeft - controller.offsetLeft;\r\n                if (overSize > 0) {\r\n                    controller.style.left = '0px';\r\n                    if (allow) allow.style.left = overSize + 'px';\r\n                }\r\n            } else {\r\n                controller.style.left = l + 'px';\r\n\r\n                const overSize = context.element.wysiwygFrame.offsetWidth - (controller.offsetLeft + controllerW);\r\n                if (overSize < 0) {\r\n                    controller.style.left = (controller.offsetLeft + overSize) + 'px';\r\n                    if (allow) allow.style.left = (20 - overSize) + 'px';\r\n                } else {\r\n                    if (allow) allow.style.left = '20px';\r\n                }\r\n            }\r\n\r\n            controller.style.visibility = '';\r\n        },\r\n\r\n        /**\r\n         * @description javascript execCommand\r\n         * @param {String} command javascript execCommand function property\r\n         * @param {Boolean|undefined} showDefaultUI javascript execCommand function property\r\n         * @param {String|undefined} value javascript execCommand function property\r\n         */\r\n        execCommand: function (command, showDefaultUI, value) {\r\n            this._wd.execCommand(command, showDefaultUI, (command === 'formatBlock' ? '<' + value + '>' : value));\r\n            // history stack\r\n            this.history.push(true);\r\n        },\r\n\r\n        /**\r\n         * @description Focus to wysiwyg area using \"native focus function\"\r\n         */\r\n        nativeFocus: function () {\r\n            this.__focus();\r\n            this._editorRange();\r\n        },\r\n\r\n        /**\r\n         * @description Focus method\r\n         * @private\r\n         */\r\n        __focus: function () {\r\n            const caption = util.getParentElement(this.getSelectionNode(), 'figcaption');\r\n            if (caption) {\r\n                caption.focus();\r\n            } else {\r\n                context.element.wysiwyg.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Focus to wysiwyg area\r\n         */\r\n        focus: function () {\r\n            if (context.element.wysiwygFrame.style.display === 'none') return;\r\n\r\n            if (options.iframe) {\r\n                this.nativeFocus();\r\n            } else {\r\n                try {\r\n                    const range = this.getRange();\r\n                    if (range.startContainer === range.endContainer && util.isWysiwygDiv(range.startContainer)) {\r\n                        const currentNode = range.commonAncestorContainer.children[range.startOffset];\r\n                        if (!util.isFormatElement(currentNode) && !util.isComponent(currentNode)) {\r\n                            const format = util.createElement(options.defaultTag);\r\n                            const br = util.createElement('BR');\r\n                            format.appendChild(br);\r\n                            context.element.wysiwyg.insertBefore(format, currentNode);\r\n                            this.setRange(br, 0, br, 0);\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.setRange(range.startContainer, range.startOffset, range.endContainer, range.endOffset);\r\n                } catch (e) {\r\n                    this.nativeFocus();\r\n                }\r\n            }\r\n\r\n            event._applyTagEffects();\r\n            if (this._isBalloon) event._toggleToolbarBalloon();\r\n        },\r\n\r\n        /**\r\n         * @description If \"focusEl\" is a component, then that component is selected; if it is a format element, the last text is selected\r\n         * If \"focusEdge\" is null, then selected last element\r\n         * @param {Element|null} focusEl Focus element\r\n         */\r\n        focusEdge: function (focusEl) {\r\n            if (!focusEl) focusEl = context.element.wysiwyg.lastElementChild;\r\n\r\n            const fileComponentInfo = this.getFileComponent(focusEl);\r\n            if (fileComponentInfo) {\r\n                this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n            } else if (focusEl) {\r\n                focusEl = util.getChildElement(focusEl, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, true);\r\n                if (!focusEl) this.nativeFocus();\r\n                else this.setRange(focusEl, focusEl.textContent.length, focusEl, focusEl.textContent.length);\r\n            } else {\r\n                this.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Focusout to wysiwyg area (.blur())\r\n         */\r\n        blur: function () {\r\n            if (options.iframe) {\r\n                context.element.wysiwygFrame.blur();\r\n            } else {\r\n                context.element.wysiwyg.blur();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set current editor's range object and return.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @returns {Object} Range object.\r\n         */\r\n        setRange: function (startCon, startOff, endCon, endOff) {\r\n            if (!startCon || !endCon) return;\r\n            if (startOff > startCon.textContent.length) startOff = startCon.textContent.length;\r\n            if (endOff > endCon.textContent.length) endOff = endCon.textContent.length;\r\n            if (util.isFormatElement(startCon)) {\r\n                startCon = startCon.childNodes[startOff] || startCon;\r\n                startOff = 0;\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon;\r\n                endOff = startOff > 1 ? startOff : 0;\r\n            }\r\n            \r\n            const range = this._wd.createRange();\r\n\r\n            try {\r\n                range.setStart(startCon, startOff);\r\n                range.setEnd(endCon, endOff);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.core.focus.error] ' + error);\r\n                this.nativeFocus();\r\n                return;\r\n            }\r\n\r\n            const selection = this.getSelection();\r\n\r\n            if (selection.removeAllRanges) {\r\n                selection.removeAllRanges();\r\n            }\r\n\r\n            selection.addRange(range);\r\n            this._rangeInfo(range, this.getSelection());\r\n            if (options.iframe) this.__focus();\r\n\r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Remove range object and button effect\r\n         */\r\n        removeRange: function () {\r\n            this._variable._range = null;\r\n            this._variable._selectionNode = null;\r\n            if (this.hasFocus) this.getSelection().removeAllRanges();\r\n            this._setKeyEffect([]);\r\n        },\r\n\r\n        /**\r\n         * @description Get current editor's range object\r\n         * @returns {Object}\r\n         */\r\n        getRange: function () {\r\n            const range = this._variable._range || this._createDefaultRange();\r\n            const selection = this.getSelection();\r\n            if (range.collapsed === selection.isCollapsed || !context.element.wysiwyg.contains(selection.focusNode)) return range;\r\n            \r\n            if (selection.rangeCount > 0) {\r\n                this._variable._range = selection.getRangeAt(0);\r\n                return this._variable._range;\r\n            } else {\r\n                const sc = selection.anchorNode, ec = selection.focusNode, so = selection.anchorOffset, eo = selection.focusOffset;\r\n                const compareValue = util.compareElements(sc, ec);\r\n                const rightDir = compareValue.ancestor && (compareValue.result === 0 ? so <= eo : compareValue.result > 1 ? true : false);\r\n                return this.setRange(\r\n                    rightDir ? sc : ec,\r\n                    rightDir ? so : eo,\r\n                    rightDir ? ec : sc,\r\n                    rightDir ? eo : so\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If the \"range\" object is a non-editable area, add a line at the top of the editor and update the \"range\" object.\r\n         * Returns a new \"range\" or argument \"range\".\r\n         * @param {Object} range core.getRange()\r\n         * @param {Element|null} container If there is \"container\" argument, it creates a line in front of the container.\r\n         * @returns {Object} range\r\n         */\r\n        getRange_addLine: function (range, container) {\r\n            if (this._selectionVoid(range)) {\r\n                const wysiwyg = context.element.wysiwyg;\r\n                const op = util.createElement(options.defaultTag);\r\n                op.innerHTML = '<br>';\r\n                wysiwyg.insertBefore(op, container && container !== wysiwyg ? container.nextElementSibling : wysiwyg.firstElementChild);\r\n                this.setRange(op.firstElementChild, 0, op.firstElementChild, 1);\r\n                range = this._variable._range;\r\n            }\r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Get window selection obejct\r\n         * @returns {Object}\r\n         */\r\n        getSelection: function () {\r\n            return this._shadowRoot && this._shadowRoot.getSelection ? this._shadowRoot.getSelection() : this._ww.getSelection();\r\n        },\r\n\r\n        /**\r\n         * @description Get current select node\r\n         * @returns {Node}\r\n         */\r\n        getSelectionNode: function () {\r\n            if (!context.element.wysiwyg.contains(this._variable._selectionNode)) this._editorRange();\r\n            if (!this._variable._selectionNode) {\r\n                const selectionNode = util.getChildElement(context.element.wysiwyg.firstChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, false);\r\n                if (!selectionNode) {\r\n                    this._editorRange();\r\n                } else {\r\n                    this._variable._selectionNode = selectionNode;\r\n                    return selectionNode;\r\n                }\r\n            }\r\n            return this._variable._selectionNode;\r\n        },\r\n\r\n        /**\r\n         * @description Saving the range object and the currently selected node of editor\r\n         * @private\r\n         */\r\n        _editorRange: function () {\r\n            const selection = this.getSelection();\r\n            if (!selection) return null;\r\n            let range = null;\r\n\r\n            if (selection.rangeCount > 0) {\r\n                range = selection.getRangeAt(0);\r\n            } else {\r\n                range = this._createDefaultRange();\r\n            }\r\n\r\n            if (util.isFormatElement(range.endContainer) && range.endOffset === 0) {\r\n                range = this.setRange(range.startContainer, range.startOffset, range.startContainer, range.startContainer.length);\r\n            }\r\n\r\n            this._rangeInfo(range, selection);\r\n        },\r\n\r\n        /**\r\n         * @description Set \"range\" and \"selection\" info.\r\n         * @param {Object} range range object.\r\n         * @param {Object} selection selection object.\r\n         */\r\n        _rangeInfo: function (range, selection) {\r\n            let selectionNode = null;\r\n            this._variable._range = range;\r\n\r\n            if (range.collapsed) {\r\n                if (util.isWysiwygDiv(range.commonAncestorContainer)) selectionNode = range.commonAncestorContainer.children[range.startOffset] || range.commonAncestorContainer;\r\n                else selectionNode = range.commonAncestorContainer;\r\n            } else {\r\n                selectionNode = selection.extentNode || selection.anchorNode;\r\n            }\r\n\r\n            this._variable._selectionNode = selectionNode;\r\n        },\r\n\r\n        /**\r\n         * @description Return the range object of editor's first child node\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _createDefaultRange: function () {\r\n            const wysiwyg = context.element.wysiwyg;\r\n            wysiwyg.focus();\r\n            const range = this._wd.createRange();\r\n\r\n            let focusEl = wysiwyg.firstElementChild;\r\n            if (!focusEl) {\r\n                focusEl = util.createElement(options.defaultTag);\r\n                focusEl.innerHTML = '<br>';\r\n                wysiwyg.appendChild(focusEl);\r\n            }\r\n\r\n            range.setStart(focusEl, 0);\r\n            range.setEnd(focusEl, 0);\r\n            \r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Returns true if there is no valid \"selection\".\r\n         * @param {Object} range core.getRange()\r\n         * @returns {Object} range\r\n         * @private\r\n         */\r\n        _selectionVoid: function (range) {\r\n            const comm = range.commonAncestorContainer;\r\n            return (util.isWysiwygDiv(range.startContainer) && util.isWysiwygDiv(range.endContainer)) || /FIGURE/i.test(comm.nodeName) || this._fileManager.regExp.test(comm.nodeName) || util.isMediaComponent(comm);\r\n        },\r\n\r\n        /**\r\n         * @description Reset range object to text node selected status.\r\n         * @returns {Boolean} Returns false if there is no valid selection.\r\n         * @private\r\n         */\r\n        _resetRangeToTextNode: function () {\r\n            const range = this.getRange();\r\n            if (this._selectionVoid(range)) return false;\r\n            \r\n            let startCon = range.startContainer;\r\n            let startOff = range.startOffset;\r\n            let endCon = range.endContainer;\r\n            let endOff = range.endOffset;\r\n            let tempCon, tempOffset, tempChild;\r\n\r\n            if (util.isFormatElement(startCon)) {\r\n                if (!startCon.childNodes[startOff]) {\r\n                    startCon = startCon.lastChild || startCon;\r\n                    startOff = startCon.textContent.length;\r\n                } else {\r\n                    startCon = startCon.childNodes[startOff] || startCon;\r\n                    startOff = 0;\r\n                }\r\n                while (startCon && startCon.nodeType === 1 && startCon.firstChild) {\r\n                    startCon = startCon.firstChild || startCon;\r\n                    startOff = 0;\r\n                }\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon.lastChild || endCon;\r\n                while (endCon && endCon.nodeType === 1 && endCon.lastChild) {\r\n                    endCon = endCon.lastChild;\r\n                }\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            // startContainer\r\n            tempCon = util.isWysiwygDiv(startCon) ? context.element.wysiwyg.firstChild : startCon;\r\n            tempOffset = startOff;\r\n\r\n            if (util.isBreak(tempCon) || (tempCon.nodeType === 1 && tempCon.childNodes.length > 0)) {\r\n                const onlyBreak = util.isBreak(tempCon);\r\n                if (!onlyBreak) {\r\n                    while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                        tempCon = tempCon.childNodes[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\r\n                        tempOffset = 0;\r\n                    }\r\n    \r\n                    let format = util.getFormatElement(tempCon, null);\r\n                    if (format === util.getRangeFormatElement(format, null)) {\r\n                        format = util.createElement(util.getParentElement(tempCon, util.isCell) ? 'DIV' : options.defaultTag);\r\n                        tempCon.parentNode.insertBefore(format, tempCon);\r\n                        format.appendChild(tempCon);\r\n                    }\r\n                }\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                    if (onlyBreak) {\r\n                        if (startCon === endCon) {\r\n                            endCon = tempCon;\r\n                            endOff = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set startContainer\r\n            startCon = tempCon;\r\n            startOff = tempOffset;\r\n\r\n            // endContainer\r\n            tempCon = util.isWysiwygDiv(endCon) ? context.element.wysiwyg.lastChild : endCon;\r\n            tempOffset = endOff;\r\n\r\n            if (util.isBreak(tempCon) || (tempCon.nodeType === 1 && tempCon.childNodes.length > 0)) {\r\n                const onlyBreak = util.isBreak(tempCon);\r\n                if (!onlyBreak) {\r\n                    while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                        tempChild = tempCon.childNodes;\r\n                        if (tempChild.length === 0) break;\r\n                        tempCon = tempChild[tempOffset > 0 ? tempOffset - 1 : tempOffset] || !/FIGURE/i.test(tempChild[0].nodeName) ? tempChild[0] : (tempCon.previousElementSibling || tempCon.previousSibling || startCon);\r\n                        tempOffset = tempOffset > 0 ? tempCon.textContent.length : tempOffset;\r\n                    }\r\n    \r\n                    let format = util.getFormatElement(tempCon, null);\r\n                    if (format === util.getRangeFormatElement(format, null)) {\r\n                        format = util.createElement(util.isCell(format) ? 'DIV' : options.defaultTag);\r\n                        tempCon.parentNode.insertBefore(format, tempCon);\r\n                        format.appendChild(tempCon);\r\n                    }\r\n                }\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                    tempOffset = 1;\r\n                    if (onlyBreak && !tempCon.previousSibling) {\r\n                        util.removeItem(endCon);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set endContainer\r\n            endCon = tempCon;\r\n            endOff = tempOffset;\r\n\r\n            // set Range\r\n            this.setRange(startCon, startOff, endCon, endOff);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description Returns a \"formatElement\"(util.isFormatElement) array from the currently selected range.\r\n         * @param {Function|null} validation The validation function. (Replaces the default validation function-util.isFormatElement(current))\r\n         * @returns {Array}\r\n         */\r\n        getSelectedElements: function (validation) {\r\n            if (!this._resetRangeToTextNode()) return [];\r\n            let range = this.getRange();\r\n\r\n            if (util.isWysiwygDiv(range.startContainer)) {\r\n                const children = context.element.wysiwyg.children;\r\n                if (children.length === 0) return [];\r\n                this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.trim().length);\r\n                range = this.getRange();\r\n            }\r\n\r\n            const startCon = range.startContainer;\r\n            const endCon = range.endContainer;\r\n            const commonCon = range.commonAncestorContainer;\r\n\r\n            // get line nodes\r\n            const lineNodes = util.getListChildren(commonCon, function (current) {\r\n                return validation ? validation(current) : util.isFormatElement(current);\r\n            });\r\n\r\n            if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) lineNodes.unshift(util.getFormatElement(commonCon, null));\r\n            if (startCon === endCon || lineNodes.length === 1) return lineNodes;\r\n\r\n            let startLine = util.getFormatElement(startCon, null);\r\n            let endLine = util.getFormatElement(endCon, null);\r\n            let startIdx = null;\r\n            let endIdx = null;\r\n            \r\n            const onlyTable = function (current) {\r\n                return util.isTable(current) ? /^TABLE$/i.test(current.nodeName) : true;\r\n            };\r\n\r\n            let startRangeEl = util.getRangeFormatElement(startLine, onlyTable);\r\n            let endRangeEl = util.getRangeFormatElement(endLine, onlyTable);\r\n            if (util.isTable(startRangeEl) && util.isListCell(startRangeEl.parentNode)) startRangeEl = startRangeEl.parentNode;\r\n            if (util.isTable(endRangeEl) && util.isListCell(endRangeEl.parentNode)) endRangeEl = endRangeEl.parentNode;\r\n            \r\n            const sameRange = startRangeEl === endRangeEl;\r\n            for (let i = 0, len = lineNodes.length, line; i < len; i++) {\r\n                line = lineNodes[i];\r\n\r\n                if (startLine === line || (!sameRange && line === startRangeEl)) {\r\n                    startIdx = i;\r\n                    continue;\r\n                }\r\n\r\n                if (endLine === line || (!sameRange && line === endRangeEl)) {\r\n                    endIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startIdx === null) startIdx = 0;\r\n            if (endIdx === null) endIdx = lineNodes.length - 1;\r\n\r\n            return lineNodes.slice(startIdx, endIdx + 1);\r\n        },\r\n\r\n        /**\r\n         * @description Get format elements and components from the selected area. (P, DIV, H[1-6], OL, UL, TABLE..)\r\n         * If some of the component are included in the selection, get the entire that component.\r\n         * @param {Boolean} removeDuplicate If true, if there is a parent and child tag among the selected elements, the child tag is excluded.\r\n         * @returns {Array}\r\n         */\r\n        getSelectedElementsAndComponents: function (removeDuplicate) {\r\n            const commonCon = this.getRange().commonAncestorContainer;\r\n            const myComponent = util.getParentElement(commonCon, util.isComponent);\r\n            const selectedLines = util.isTable(commonCon) ? \r\n                this.getSelectedElements(null) :\r\n                this.getSelectedElements(function (current) {\r\n                    const component = this.getParentElement(current, this.isComponent);\r\n                    return (this.isFormatElement(current) && (!component || component === myComponent)) || (this.isComponent(current) && !this.getFormatElement(current));\r\n                }.bind(util));\r\n            \r\n            if (removeDuplicate) {\r\n                for (let i = 0, len = selectedLines.length; i < len; i++) {\r\n                    for (let j = i - 1; j >= 0; j--) {\r\n                        if (selectedLines[j].contains(selectedLines[i])) {\r\n                            selectedLines.splice(i, 1);\r\n                            i--; len--;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return selectedLines;\r\n        },\r\n\r\n        /**\r\n         * @description Determine if this offset is the edge offset of container\r\n         * @param {Node} container The node of the selection object. (range.startContainer..)\r\n         * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n         * @param {String|undefined} dir Select check point - Both edge, Front edge or End edge. (\"front\": Front edge, \"end\": End edge, undefined: Both edge)\r\n         * @returns {Boolean}\r\n         */\r\n        isEdgePoint: function (container, offset, dir) {\r\n            return (dir !== 'end' && offset === 0) || ((!dir || dir !== 'front') && !container.nodeValue && offset === 1) || ((!dir || dir === 'end') && !!container.nodeValue && offset === container.nodeValue.length);\r\n        },\r\n\r\n        /**\r\n         * @description Check if the container and offset values are the edges of the format tag\r\n         * @param {Node} container The node of the selection object. (range.startContainer..)\r\n         * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n         * @param {String} dir Select check point - \"front\": Front edge, \"end\": End edge, undefined: Both edge.\r\n         * @returns {Array|null}\r\n         * @private\r\n         */\r\n        _isEdgeFormat: function (node, offset, dir) {\r\n            if (!this.isEdgePoint(node, offset, dir)) return false;\r\n\r\n            const result = [];\r\n            dir = dir === 'front' ? 'previousSibling' : 'nextSibling';\r\n            while (node && !util.isFormatElement(node) && !util.isWysiwygDiv(node)) {\r\n                if (!node[dir] || (util.isBreak(node[dir]) && !node[dir][dir])) {\r\n                    if (node.nodeType === 1) result.push(node.cloneNode(false));\r\n                    node = node.parentNode;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @description Show loading box\r\n         */\r\n        showLoading: function () {\r\n            context.element.loading.style.display = 'block';\r\n        },\r\n\r\n        /**\r\n         * @description Close loading box\r\n         */\r\n        closeLoading: function () {\r\n            context.element.loading.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Append format element to sibling node of argument element.\r\n         * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n         * If not, the currently selected format tag is inserted.\r\n         * @param {Element} element Insert as siblings of that element\r\n         * @param {String|Element|null} formatNode Node name or node obejct to be inserted\r\n         * @returns {Element}\r\n         */\r\n        appendFormatTag: function (element, formatNode) {\r\n            if (!element || !element.parentNode) return null;\r\n\r\n            const currentFormatEl = util.getFormatElement(this.getSelectionNode(), null);\r\n            let oFormat = null;\r\n            if (util.isFreeFormatElement(currentFormatEl || element.parentNode)) {\r\n                oFormat = util.createElement('BR');\r\n            } else {\r\n                const oFormatName = formatNode ? (typeof formatNode === 'string' ? formatNode : formatNode.nodeName) : (util.isFormatElement(currentFormatEl) && !util.isRangeFormatElement(currentFormatEl) && !util.isFreeFormatElement(currentFormatEl)) ? currentFormatEl.nodeName : options.defaultTag;\r\n                oFormat = util.createElement(oFormatName);\r\n                oFormat.innerHTML = '<br>';\r\n                if ((formatNode && typeof formatNode !== 'string') || (!formatNode && util.isFormatElement(currentFormatEl))) {\r\n                    util.copyTagAttributes(oFormat, formatNode || currentFormatEl);\r\n                }\r\n            }\r\n\r\n            if (util.isCell(element)) element.insertBefore(oFormat, element.nextElementSibling);\r\n            else element.parentNode.insertBefore(oFormat, element.nextElementSibling);\r\n\r\n            return oFormat;\r\n        },\r\n\r\n        /**\r\n         * @description The method to insert a element and return. (used elements : table, hr, image, video)\r\n         * If \"element\" is \"HR\", insert and return the new line.\r\n         * @param {Element} element Element to be inserted\r\n         * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @param {Boolean} notSelect If true, Do not automatically select the inserted component.\r\n         * @returns {Element}\r\n         */\r\n        insertComponent: function (element, notHistoryPush, checkCharCount, notSelect) {\r\n            if (this.isReadOnly || (checkCharCount && !this.checkCharCount(element, null))) {\r\n                return null;\r\n            }\r\n\r\n            const r = this.removeNode();\r\n            this.getRange_addLine(this.getRange(), r.container);\r\n            let oNode = null;\r\n            let selectionNode = this.getSelectionNode();\r\n            let formatEl = util.getFormatElement(selectionNode, null);\r\n\r\n            if (util.isListCell(formatEl)) {\r\n                this.insertNode(element, selectionNode === formatEl ? null : r.container.nextSibling, false);\r\n                if (!element.nextSibling) element.parentNode.appendChild(util.createElement('BR'));\r\n            } else {\r\n                if (this.getRange().collapsed && (r.container.nodeType === 3 || util.isBreak(r.container))) {\r\n                    const depthFormat = util.getParentElement(r.container, function (current) { return this.isRangeFormatElement(current); }.bind(util));\r\n                    oNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                    if (oNode) formatEl = oNode.previousSibling;\r\n                }\r\n                this.insertNode(element, util.isRangeFormatElement(formatEl) ? null : formatEl, false);\r\n                if (formatEl && util.onlyZeroWidthSpace(formatEl)) util.removeItem(formatEl);\r\n            }\r\n\r\n            if (!notSelect) {\r\n                this.setRange(element, 0, element, 0);\r\n                \r\n                const fileComponentInfo = this.getFileComponent(element);\r\n                if (fileComponentInfo) {\r\n                    this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n                } else if (oNode) {\r\n                    oNode = util.getEdgeChildNodes(oNode, null).sc || oNode;\r\n                    this.setRange(oNode, 0, oNode, 0);\r\n                }\r\n            }\r\n\r\n            // history stack\r\n            if (!notHistoryPush) this.history.push(1);\r\n\r\n            return oNode || element;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the file component and that plugin name\r\n         * return: {target, component, pluginName} | null\r\n         * @param {Element} element Target element (figure tag, component div, file tag)\r\n         * @returns {Object|null}\r\n         */\r\n        getFileComponent: function (element) {\r\n            if (!this._fileManager.queryString || !element) return null;\r\n\r\n            let target, pluginName;\r\n            if (/^FIGURE$/i.test(element.nodeName) || /se-component/.test(element.className)) {\r\n                target = element.querySelector(this._fileManager.queryString);\r\n            }\r\n            if (!target && element.nodeName && this._fileManager.regExp.test(element.nodeName)) {\r\n                target = element;\r\n            }\r\n\r\n            if (target) {\r\n                pluginName = this._fileManager.pluginMap[target.nodeName.toLowerCase()];\r\n                if (pluginName) {\r\n                    return {\r\n                        target: target,\r\n                        component: util.getParentElement(target, util.isComponent),\r\n                        pluginName: pluginName\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * @description The component(image, video) is selected and the resizing module is called.\r\n         * @param {Element} element Element tag (img, iframe, video)\r\n         * @param {String} pluginName Plugin name (image, video)\r\n         */\r\n        selectComponent: function (element, pluginName) {\r\n            if (util.isUneditableComponent(util.getParentElement(element, util.isComponent)) || util.isUneditableComponent(element)) return false;\r\n            if (!this.hasFocus) this.focus();\r\n            const plugin = this.plugins[pluginName];\r\n            if (!plugin) return;\r\n            _w.setTimeout(function () {\r\n                if (typeof plugin.select === 'function') this.callPlugin(pluginName, plugin.select.bind(this, element), null);\r\n                this._setComponentLineBreaker(element);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * @description Set line breaker of component\r\n         * @param {Element} element Element tag (img, iframe, video)\r\n         * @private\r\n         */\r\n        _setComponentLineBreaker: function (element) {\r\n            // line breaker\r\n            this._lineBreaker.style.display = 'none';\r\n            const container = util.getParentElement(element, util.isComponent);\r\n            const t_style = context.element.lineBreaker_t.style;\r\n            const b_style = context.element.lineBreaker_b.style;\r\n            const target = this.context.resizing.resizeContainer.style.display === 'block' ? this.context.resizing.resizeContainer : element;\r\n\r\n            const isList = util.isListCell(container.parentNode);\r\n            let componentTop, wScroll, w;\r\n            // top\r\n            if (isList ? !container.previousSibling : !util.isFormatElement(container.previousElementSibling)) {\r\n                this._variable._lineBreakComp = container;\r\n                wScroll = context.element.wysiwyg.scrollTop;\r\n                componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\r\n                w = (target.offsetWidth / 2) / 2;\r\n\r\n                t_style.top = (componentTop - wScroll - 12) + 'px';\r\n                t_style.left = (util.getOffset(target).left + w) + 'px';\r\n                t_style.display = 'block';\r\n            } else {\r\n                t_style.display = 'none';\r\n            }\r\n            // bottom\r\n            if (isList ? !container.nextSibling : !util.isFormatElement(container.nextElementSibling)) {\r\n                if (!componentTop) {\r\n                    this._variable._lineBreakComp = container;\r\n                    wScroll = context.element.wysiwyg.scrollTop;\r\n                    componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\r\n                    w = (target.offsetWidth / 2) / 2;\r\n                }\r\n\r\n                b_style.top = (componentTop + target.offsetHeight - wScroll - 12) + 'px';\r\n                b_style.left = (util.getOffset(target).left + target.offsetWidth - w - 24) + 'px';\r\n                b_style.display = 'block';\r\n            } else {\r\n                b_style.display = 'none';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Delete selected node and insert argument value node and return.\r\n         * If the \"afterNode\" exists, it is inserted after the \"afterNode\"\r\n         * Inserting a text node merges with both text nodes on both sides and returns a new \"{ container, startOffset, endOffset }\".\r\n         * @param {Node} oNode Element to be inserted\r\n         * @param {Node|null} afterNode If the node exists, it is inserted after the node\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @returns {Object|Node|null}\r\n         */\r\n        insertNode: function (oNode, afterNode, checkCharCount) {\r\n            if (this.isReadOnly || (checkCharCount && !this.checkCharCount(oNode, null))) {\r\n                return null;\r\n            }\r\n\r\n            const freeFormat = util.getFreeFormatElement(this.getSelectionNode(), null);\r\n            const isFormats = (!freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) || util.isComponent(oNode);\r\n\r\n            if (!afterNode && (isFormats || util.isComponent(oNode) || util.isMedia(oNode))) {\r\n                const r = this.removeNode();\r\n                if (r.container.nodeType === 3 || util.isBreak(r.container)) {\r\n                    const depthFormat = util.getParentElement(r.container, function (current) { return this.isRangeFormatElement(current) || this.isListCell(current); }.bind(util));\r\n                    afterNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                    if (afterNode) afterNode = afterNode.previousSibling;\r\n                }\r\n            }\r\n\r\n            const range = (!afterNode && !isFormats) ? this.getRange_addLine(this.getRange(), null) : this.getRange();\r\n            const commonCon = range.commonAncestorContainer;\r\n            const startOff = range.startOffset;\r\n            const endOff = range.endOffset;\r\n            const formatRange = range.startContainer === commonCon && util.isFormatElement(commonCon);\r\n            const startCon = formatRange ? (commonCon.childNodes[startOff] || commonCon.childNodes[0] || range.startContainer) : range.startContainer;\r\n            const endCon = formatRange ? (commonCon.childNodes[endOff] || commonCon.childNodes[commonCon.childNodes.length - 1] || range.endContainer) : range.endContainer;\r\n            let parentNode, originAfter = null;\r\n\r\n            if (!afterNode) {\r\n                parentNode = startCon;\r\n                if (startCon.nodeType === 3) {\r\n                    parentNode = startCon.parentNode;\r\n                }\r\n\r\n                /** No Select range node */\r\n                if (range.collapsed) {\r\n                    if (commonCon.nodeType === 3) {\r\n                        if (commonCon.textContent.length > endOff) afterNode = commonCon.splitText(endOff);\r\n                        else afterNode = commonCon.nextSibling;\r\n                    } else {\r\n                        if (!util.isBreak(parentNode)) {\r\n                            let c = parentNode.childNodes[startOff];\r\n                            const focusNode = (c && c.nodeType === 3 && util.onlyZeroWidthSpace(c) && util.isBreak(c.nextSibling)) ? c.nextSibling : c;\r\n                            if (focusNode) {\r\n                                if (!focusNode.nextSibling) {\r\n                                    parentNode.removeChild(focusNode);\r\n                                    afterNode = null;\r\n                                } else {\r\n                                    afterNode = (util.isBreak(focusNode) && !util.isBreak(oNode)) ? focusNode : focusNode.nextSibling;\r\n                                }\r\n                            } else {\r\n                                afterNode = null;\r\n                            }\r\n                        } else {\r\n                            afterNode = parentNode;\r\n                            parentNode = parentNode.parentNode;\r\n                        }\r\n                    }\r\n                } else { /** Select range nodes */\r\n                    const isSameContainer = startCon === endCon;\r\n\r\n                    if (isSameContainer) {\r\n                        if (this.isEdgePoint(endCon, endOff)) afterNode = endCon.nextSibling;\r\n                        else afterNode = endCon.splitText(endOff);\r\n\r\n                        let removeNode = startCon;\r\n                        if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\r\n\r\n                        parentNode.removeChild(removeNode);\r\n                        if (parentNode.childNodes.length === 0 && isFormats) {\r\n                            parentNode.innerHTML = '<br>';\r\n                        }\r\n                    }\r\n                    else {\r\n                        const removedTag = this.removeNode();\r\n                        const container = removedTag.container;\r\n                        const prevContainer = removedTag.prevContainer;\r\n                        if (container && container.childNodes.length === 0 && isFormats) {\r\n                            if (util.isFormatElement(container)) {\r\n                                container.innerHTML = '<br>';\r\n                            } else if (util.isRangeFormatElement(container)) {\r\n                                container.innerHTML = '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n                            }\r\n                        }\r\n\r\n                        if (!isFormats && prevContainer) {\r\n                            parentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\r\n                            if (parentNode.contains(container)) {\r\n                                let sameParent = true;\r\n                                afterNode = container;\r\n                                while (afterNode.parentNode !== parentNode) {\r\n                                    afterNode = afterNode.parentNode;\r\n                                    sameParent = false;\r\n                                }\r\n                                if (sameParent && container === prevContainer) afterNode = afterNode.nextSibling;\r\n                            } else {\r\n                                afterNode = null;\r\n                            }\r\n                        } else {\r\n                            afterNode = isFormats ? endCon : container === prevContainer ? container.nextSibling : container;\r\n                            parentNode = (!afterNode || !afterNode.parentNode) ? commonCon : afterNode.parentNode;\r\n                        }\r\n\r\n                        while (afterNode && !util.isFormatElement(afterNode) && afterNode.parentNode !== commonCon) {\r\n                            afterNode = afterNode.parentNode;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // has afterNode\r\n            else {\r\n                parentNode = afterNode.parentNode;\r\n                afterNode = afterNode.nextSibling;\r\n                originAfter = true;\r\n            }\r\n\r\n            // --- insert node ---\r\n            try {\r\n                if (util.isWysiwygDiv(afterNode) || parentNode === context.element.wysiwyg.parentNode) {\r\n                    parentNode = context.element.wysiwyg;\r\n                    afterNode = null;\r\n                }\r\n\r\n                if (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode) || (!util.isListCell(parentNode) && util.isComponent(oNode))) {\r\n                    const oldParent = parentNode;\r\n                    if (util.isList(afterNode)) {\r\n                        parentNode = afterNode;\r\n                        afterNode = null;\r\n                    } else if (util.isListCell(afterNode)) {\r\n                        parentNode = afterNode.previousElementSibling || afterNode;\r\n                    } else if (!originAfter && !afterNode) {\r\n                        const r = this.removeNode();\r\n                        const container = r.container.nodeType === 3 ? (util.isListCell(util.getFormatElement(r.container, null)) ? r.container : (util.getFormatElement(r.container, null) || r.container.parentNode)) : r.container;\r\n                        const rangeCon = util.isWysiwygDiv(container) || util.isRangeFormatElement(container);\r\n                        parentNode = rangeCon ? container : container.parentNode;\r\n                        afterNode = rangeCon ? null : container.nextSibling;\r\n                    }\r\n\r\n                    if (oldParent.childNodes.length === 0 && parentNode !== oldParent) util.removeItem(oldParent);\r\n                }\r\n\r\n                if (isFormats && !freeFormat && !util.isRangeFormatElement(parentNode) && !util.isListCell(parentNode) && !util.isWysiwygDiv(parentNode)) {\r\n                    afterNode = parentNode.nextElementSibling;\r\n                    parentNode = parentNode.parentNode;\r\n                }\r\n\r\n                if (util.isWysiwygDiv(parentNode) && (oNode.nodeType === 3 || util.isBreak(oNode))) {\r\n                    const fNode = util.createElement(options.defaultTag);\r\n                    fNode.appendChild(oNode);\r\n                    oNode = fNode;\r\n                }\r\n\r\n                parentNode.insertBefore(oNode, parentNode === afterNode ? parentNode.lastChild : afterNode);\r\n            } catch (e) {\r\n                parentNode.appendChild(oNode);\r\n            } finally {\r\n                if ((util.isFormatElement(oNode) || util.isComponent(oNode)) && startCon === endCon) {\r\n                    const cItem = util.getFormatElement(commonCon, null);\r\n                    if (cItem && cItem.nodeType === 1 && util.isEmptyLine(cItem)) {\r\n                        util.removeItem(cItem);\r\n                    }\r\n                }\r\n\r\n                if (freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) {\r\n                    oNode = this._setIntoFreeFormat(oNode);\r\n                }\r\n\r\n                if (!util.isComponent(oNode)) {\r\n                    let offset = 1;\r\n                    if (oNode.nodeType === 3) {\r\n                        const previous = oNode.previousSibling;\r\n                        const next = oNode.nextSibling;\r\n                        const previousText = (!previous ||  previous.nodeType === 1 || util.onlyZeroWidthSpace(previous)) ? '' : previous.textContent;\r\n                        const nextText = (!next || next.nodeType === 1 || util.onlyZeroWidthSpace(next)) ? '' : next.textContent;\r\n        \r\n                        if (previous && previousText.length > 0) {\r\n                            oNode.textContent = previousText + oNode.textContent;\r\n                            util.removeItem(previous);\r\n                        }\r\n        \r\n                        if (next && next.length > 0) {\r\n                            oNode.textContent += nextText;\r\n                            util.removeItem(next);\r\n                        }\r\n\r\n                        const newRange = {\r\n                            container: oNode,\r\n                            startOffset: previousText.length,\r\n                            endOffset: oNode.textContent.length - nextText.length\r\n                        };\r\n\r\n                        this.setRange(oNode, newRange.startOffset, oNode, newRange.endOffset);\r\n    \r\n                        return newRange;\r\n                    } else if (!util.isBreak(oNode) && util.isFormatElement(parentNode)) {\r\n                        let zeroWidth = null;\r\n                        if (!oNode.previousSibling || util.isBreak(oNode.previousSibling)) {\r\n                            zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                            oNode.parentNode.insertBefore(zeroWidth, oNode);\r\n                        }\r\n                        \r\n                        if (!oNode.nextSibling || util.isBreak(oNode.nextSibling)) {\r\n                            zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                            oNode.parentNode.insertBefore(zeroWidth, oNode.nextSibling);\r\n                        }\r\n    \r\n                        if (util._isIgnoreNodeChange(oNode)) {\r\n                            oNode = oNode.nextSibling;\r\n                            offset = 0;\r\n                        }\r\n                    }\r\n    \r\n                    this.setRange(oNode, offset, oNode, offset);\r\n                }\r\n\r\n                // history stack\r\n                this.history.push(true);\r\n\r\n                return oNode;\r\n            }\r\n        },\r\n\r\n        _setIntoFreeFormat: function (oNode) {\r\n            const parentNode = oNode.parentNode;\r\n            let oNodeChildren, lastONode;\r\n            \r\n            while (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) {\r\n                oNodeChildren = oNode.childNodes;\r\n                lastONode = null;\r\n                \r\n                while (oNodeChildren[0]) {\r\n                    lastONode = oNodeChildren[0];\r\n                    if (util.isFormatElement(lastONode) || util.isRangeFormatElement(lastONode)) {\r\n                        this._setIntoFreeFormat(lastONode);\r\n                        if (!oNode.parentNode) break;\r\n                        oNodeChildren = oNode.childNodes;\r\n                        continue;\r\n                    }\r\n                    \r\n                    parentNode.insertBefore(lastONode, oNode);\r\n                }\r\n                \r\n                if (oNode.childNodes.length === 0) util.removeItem(oNode);\r\n                oNode = util.createElement('BR');\r\n                parentNode.insertBefore(oNode, lastONode.nextSibling);\r\n            }\r\n\r\n            return oNode;\r\n        },\r\n\r\n        /**\r\n         * @description Delete the currently selected nodes and reset selection range\r\n         * Returns {container: \"the last element after deletion\", offset: \"offset\", prevContainer: \"previousElementSibling Of the deleted area\"}\r\n         * @returns {Object}\r\n         */\r\n        removeNode: function () {\r\n            this._resetRangeToTextNode();\r\n\r\n            const range = this.getRange();\r\n            let container, offset = 0;\r\n            let startCon = range.startContainer;\r\n            let endCon = range.endContainer;\r\n            let startOff = range.startOffset;\r\n            let endOff = range.endOffset;\r\n            const commonCon = (range.commonAncestorContainer.nodeType === 3 && range.commonAncestorContainer.parentNode === startCon.parentNode) ? startCon.parentNode : range.commonAncestorContainer;\r\n            if (commonCon === startCon && commonCon === endCon) {\r\n                startCon = commonCon.children[startOff];\r\n                endCon = commonCon.children[endOff];\r\n                startOff = endOff = 0;\r\n            }\r\n\r\n            let beforeNode = null;\r\n            let afterNode = null;\r\n\r\n            const childNodes = util.getListChildNodes(commonCon, null);\r\n            let startIndex = util.getArrayIndex(childNodes, startCon);\r\n            let endIndex = util.getArrayIndex(childNodes, endCon);\r\n\r\n            if (childNodes.length > 0 && startIndex > -1 && endIndex > -1) {\r\n                for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\r\n                    if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\r\n                        startIndex = i;\r\n                        startNode = startNode.parentNode;\r\n                    }\r\n                }\r\n    \r\n                for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\r\n                    if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\r\n                        childNodes.splice(i, 1);\r\n                        endNode = endNode.parentNode;\r\n                        --endIndex;\r\n                    }\r\n                }\r\n            } else {\r\n                if (childNodes.length === 0) {\r\n                    if (util.isFormatElement(commonCon) || util.isRangeFormatElement(commonCon) || util.isWysiwygDiv(commonCon) || util.isBreak(commonCon) || util.isMedia(commonCon)) {\r\n                        return {\r\n                            container: commonCon,\r\n                            offset: 0\r\n                        };\r\n                    } else if (commonCon.nodeType === 3) {\r\n                        return {\r\n                            container: commonCon,\r\n                            offset: endOff\r\n                        };\r\n                    }\r\n                    childNodes.push(commonCon);\r\n                    startCon = endCon = commonCon;\r\n                } else {\r\n                    startCon = endCon = childNodes[0];\r\n                    if (util.isBreak(startCon) || util.onlyZeroWidthSpace(startCon)) {\r\n                        return {\r\n                            container: util.isMedia(commonCon) ? commonCon : startCon,\r\n                            offset: 0\r\n                        };\r\n                    }\r\n                }\r\n\r\n                startIndex = endIndex = 0;\r\n            }\r\n\r\n            function remove (item) {\r\n                const format = util.getFormatElement(item, null);\r\n                util.removeItem(item);\r\n\r\n                if(util.isListCell(format)) {\r\n                    const list = util.getArrayItem(format.children, util.isList, false);\r\n                    if (list) {\r\n                        const child = list.firstElementChild;\r\n                        const children = child.childNodes;\r\n                        while (children[0]) {\r\n                            format.insertBefore(children[0], list);\r\n                        }\r\n                        util.removeItemAllParents(child, null, null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                const item = childNodes[i];\r\n\r\n                if (item.length === 0 || (item.nodeType === 3 && item.data === undefined)) {\r\n                    remove(item);\r\n                    continue;\r\n                }\r\n\r\n                if (item === startCon) {\r\n                    if (startCon.nodeType === 1) {\r\n                        if (util.isComponent(startCon)) continue;\r\n                        else beforeNode = util.createTextNode(startCon.textContent);\r\n                    } else {\r\n                        if (item === endCon) {\r\n                            beforeNode = util.createTextNode(startCon.substringData(0, startOff) + endCon.substringData(endOff, (endCon.length - endOff)));\r\n                            offset = startOff;\r\n                        } else {\r\n                            beforeNode = util.createTextNode(startCon.substringData(0, startOff));\r\n                        }\r\n                    }\r\n\r\n                    if (beforeNode.length > 0) {\r\n                        startCon.data = beforeNode.data;\r\n                    } else {\r\n                        remove(startCon);\r\n                    }\r\n\r\n                    if (item === endCon) break;\r\n                    continue;\r\n                }\r\n\r\n                if (item === endCon) {\r\n                    if (endCon.nodeType === 1) {\r\n                        if (util.isComponent(endCon)) continue;\r\n                        else afterNode = util.createTextNode(endCon.textContent);\r\n                    } else {\r\n                        afterNode = util.createTextNode(endCon.substringData(endOff, (endCon.length - endOff)));\r\n                    }\r\n\r\n                    if (afterNode.length > 0) {\r\n                        endCon.data = afterNode.data;\r\n                    } else {\r\n                        remove(endCon);\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                remove(item);\r\n            }\r\n\r\n            container = endCon && endCon.parentNode ? endCon : startCon && startCon.parentNode ? startCon : (range.endContainer || range.startContainer);\r\n            \r\n            if (!util.isWysiwygDiv(container) && container.childNodes.length === 0) {\r\n                const rc = util.removeItemAllParents(container, function (current) {\r\n                    if (this.isComponent(current)) return false;\r\n                    const text = current.textContent;\r\n                    return text.length === 0 || /^(\\n|\\u200B)+$/.test(text);\r\n                }.bind(util), null);\r\n                \r\n                if (rc) container = rc.sc || rc.ec || context.element.wysiwyg;\r\n            }\r\n\r\n            // set range\r\n            this.setRange(container, offset, container, offset);\r\n            // history stack\r\n            this.history.push(true);\r\n\r\n            return {\r\n                container: container,\r\n                offset: offset,\r\n                prevContainer: startCon && startCon.parentNode ? startCon : null\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Appended all selected format Element to the argument element and insert\r\n         * @param {Element} rangeElement Element of wrap the arguments (BLOCKQUOTE...)\r\n         */\r\n        applyRangeFormatElement: function (rangeElement) {\r\n            this.getRange_addLine(this.getRange(), null);\r\n            const rangeLines = this.getSelectedElementsAndComponents(false);\r\n            if (!rangeLines || rangeLines.length === 0) return;\r\n\r\n            linesLoop:\r\n            for (let i = 0, len = rangeLines.length, line, nested, fEl, lEl, f, l; i < len; i++) {\r\n                line = rangeLines[i];\r\n                if (!util.isListCell(line)) continue;\r\n\r\n                nested = line.lastElementChild;\r\n                if (nested && util.isListCell(line.nextElementSibling) && rangeLines.indexOf(line.nextElementSibling) > -1) {\r\n                    lEl = nested.lastElementChild;\r\n                    if (rangeLines.indexOf(lEl) > -1) {\r\n                        let list = null;\r\n                        while ((list = lEl.lastElementChild)) {\r\n                            if (util.isList(list)) {\r\n                                if (rangeLines.indexOf(list.lastElementChild) > -1) {\r\n                                    lEl = list.lastElementChild;\r\n                                } else {\r\n                                    continue linesLoop;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        fEl = nested.firstElementChild;\r\n                        f = rangeLines.indexOf(fEl);\r\n                        l = rangeLines.indexOf(lEl);\r\n                        rangeLines.splice(f, (l - f) + 1);\r\n                        len = rangeLines.length;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let last  = rangeLines[rangeLines.length - 1];\r\n            let standTag, beforeTag, pElement;\r\n\r\n            if (util.isRangeFormatElement(last) || util.isFormatElement(last)) {\r\n                standTag = last;\r\n            } else {\r\n                standTag = util.getRangeFormatElement(last, null) || util.getFormatElement(last, null);\r\n            }\r\n\r\n            if (util.isCell(standTag)) {\r\n                beforeTag = null;\r\n                pElement = standTag;\r\n            } else {\r\n                beforeTag = standTag.nextSibling;\r\n                pElement = standTag.parentNode;\r\n            }\r\n            \r\n            let parentDepth = util.getElementDepth(standTag);\r\n            let listParent = null;\r\n            const lineArr = [];\r\n            const removeItems = function (parent, origin, before) {\r\n                let cc = null;\r\n                if (parent !== origin && !util.isTable(origin)) {\r\n                    if (origin && util.getElementDepth(parent) === util.getElementDepth(origin)) return before;\r\n                    cc = util.removeItemAllParents(origin, null, parent);\r\n                }\r\n\r\n                return cc ? cc.ec : before;\r\n            };\r\n            \r\n            for (let i = 0, len = rangeLines.length, line, originParent, depth, before, nextLine, nextList, nested; i < len; i++) {\r\n                line = rangeLines[i];\r\n                originParent = line.parentNode;\r\n                if (!originParent || rangeElement.contains(originParent)) continue;\r\n\r\n                depth = util.getElementDepth(line);\r\n\r\n                if (util.isList(originParent)) {\r\n                    if (listParent === null) {\r\n                        if (nextList) {\r\n                            listParent = nextList;\r\n                            nested = true;\r\n                            nextList = null;\r\n                        } else {\r\n                            listParent = originParent.cloneNode(false);\r\n                        }\r\n                    }\r\n\r\n                    lineArr.push(line);\r\n                    nextLine = rangeLines[i + 1];\r\n\r\n                    if (i === len - 1 || (nextLine && nextLine.parentNode !== originParent)) {\r\n                        // nested list\r\n                        if (nextLine && line.contains(nextLine.parentNode)) {\r\n                            nextList = nextLine.parentNode.cloneNode(false);\r\n                        }\r\n\r\n                        let list = originParent.parentNode, p;\r\n                        while (util.isList(list)) {\r\n                            p = util.createElement(list.nodeName);\r\n                            p.appendChild(listParent);\r\n                            listParent = p;\r\n                            list = list.parentNode;\r\n                        }\r\n\r\n                        const edge = this.detachRangeFormatElement(originParent, lineArr, null, true, true);\r\n\r\n                        if (parentDepth >= depth) {\r\n                            parentDepth = depth;\r\n                            pElement = edge.cc;\r\n                            beforeTag = removeItems(pElement, originParent, edge.ec);\r\n                            if (beforeTag) pElement = beforeTag.parentNode;\r\n                        } else if (pElement === edge.cc) {\r\n                            beforeTag = edge.ec;\r\n                        }\r\n\r\n                        if (pElement !== edge.cc) {\r\n                            before = removeItems(pElement, edge.cc, before);\r\n                            if (before !== undefined) beforeTag = before;\r\n                            else beforeTag = edge.cc;\r\n                        }\r\n\r\n                        for (let c = 0, cLen = edge.removeArray.length; c < cLen; c++) {\r\n                            listParent.appendChild(edge.removeArray[c]);\r\n                        }\r\n\r\n                        if (!nested) rangeElement.appendChild(listParent);\r\n                        if (nextList) edge.removeArray[edge.removeArray.length - 1].appendChild(nextList);\r\n                        listParent = null;\r\n                        nested = false;\r\n                    }\r\n                } else {\r\n                    if (parentDepth >= depth) {\r\n                        parentDepth = depth;\r\n                        pElement = originParent;\r\n                        beforeTag = line.nextSibling;\r\n                    }\r\n                    \r\n                    rangeElement.appendChild(line);\r\n\r\n                    if (pElement !== originParent) {\r\n                        before = removeItems(pElement, originParent);\r\n                        if (before !== undefined) beforeTag = before;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.effectNode = null;\r\n            util.mergeSameTags(rangeElement, null, false);\r\n            util.mergeNestedTags(rangeElement, function (current) { return this.isList(current); }.bind(util));\r\n\r\n            // Nested list\r\n            if (beforeTag && util.getElementDepth(beforeTag) > 0 && (util.isList(beforeTag.parentNode) || util.isList(beforeTag.parentNode.parentNode))) {\r\n                const depthFormat = util.getParentElement(beforeTag, function (current) { return this.isRangeFormatElement(current) && !this.isList(current); }.bind(util));\r\n                const splitRange = util.splitElement(beforeTag, null, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                splitRange.parentNode.insertBefore(rangeElement, splitRange);\r\n            } else { // basic\r\n                pElement.insertBefore(rangeElement, beforeTag);\r\n                removeItems(rangeElement, beforeTag);\r\n            }\r\n\r\n            const edge = util.getEdgeChildNodes(rangeElement.firstElementChild, rangeElement.lastElementChild);\r\n            if (rangeLines.length > 1) {\r\n                this.setRange(edge.sc, 0, edge.ec, edge.ec.textContent.length);\r\n            } else {\r\n                this.setRange(edge.ec, edge.ec.textContent.length, edge.ec, edge.ec.textContent.length);\r\n            }\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description The elements of the \"selectedFormats\" array are detached from the \"rangeElement\" element. (\"LI\" tags are converted to \"P\" tags)\r\n         * When \"selectedFormats\" is null, all elements are detached and return {cc: parentNode, sc: nextSibling, ec: previousSibling, removeArray: [Array of removed elements]}.\r\n         * @param {Element} rangeElement Range format element (PRE, BLOCKQUOTE, OL, UL...)\r\n         * @param {Array|null} selectedFormats Array of format elements (P, DIV, LI...) to remove.\r\n         * If null, Applies to all elements and return {cc: parentNode, sc: nextSibling, ec: previousSibling}\r\n         * @param {Element|null} newRangeElement The node(rangeElement) to replace the currently wrapped node.\r\n         * @param {Boolean} remove If true, deleted without detached.\r\n         * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n         * @returns {Object}\r\n         */\r\n        detachRangeFormatElement: function (rangeElement, selectedFormats, newRangeElement, remove, notHistoryPush) {\r\n            const range = this.getRange();\r\n            const so = range.startOffset;\r\n            const eo = range.endOffset;\r\n\r\n            let children = util.getListChildNodes(rangeElement, function (current) { return current.parentNode === rangeElement; });\r\n            let parent = rangeElement.parentNode;\r\n            let firstNode = null;\r\n            let lastNode = null;\r\n            let rangeEl = rangeElement.cloneNode(false);\r\n            \r\n            const removeArray = [];\r\n            const newList = util.isList(newRangeElement);\r\n            let insertedNew = false;\r\n            let reset = false;\r\n            let moveComplete = false;\r\n\r\n            function appendNode (parent, insNode, sibling, originNode) {\r\n                if (util.onlyZeroWidthSpace(insNode)) insNode.innerHTML = util.zeroWidthSpace;\r\n\r\n                if (insNode.nodeType === 3) {\r\n                    parent.insertBefore(insNode, sibling);\r\n                    return insNode;\r\n                }\r\n                \r\n                const insChildren = (moveComplete ? insNode : originNode).childNodes;\r\n                let format = insNode.cloneNode(false);\r\n                let first = null;\r\n                let c = null;\r\n\r\n                while (insChildren[0]) {\r\n                    c = insChildren[0];\r\n                    if (util._notTextNode(c) && !util.isBreak(c) && !util.isListCell(format)) {\r\n                        if (format.childNodes.length > 0) {\r\n                            if (!first) first = format;\r\n                            parent.insertBefore(format, sibling);\r\n                            format = insNode.cloneNode(false);\r\n                        }\r\n                        parent.insertBefore(c, sibling);\r\n                        if (!first) first = c;\r\n                    } else {\r\n                        format.appendChild(c);\r\n                    }\r\n                }\r\n\r\n                if (format.childNodes.length > 0) {\r\n                    if (util.isListCell(parent) && util.isListCell(format) && util.isList(sibling)) {\r\n                        if (newList) {\r\n                            first = sibling;\r\n                            while(sibling) {\r\n                                format.appendChild(sibling);\r\n                                sibling = sibling.nextSibling;\r\n                            }\r\n                            parent.parentNode.insertBefore(format, parent.nextElementSibling);\r\n                        } else {\r\n                            const originNext = originNode.nextElementSibling;\r\n                            const detachRange = util.detachNestedList(originNode, false);\r\n                            if ((rangeElement !== detachRange) || (originNext !== originNode.nextElementSibling)) {\r\n                                const fChildren = format.childNodes;\r\n                                while (fChildren[0]) {\r\n                                    originNode.appendChild(fChildren[0]);\r\n                                }\r\n\r\n                                rangeElement = detachRange;\r\n                                reset = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        parent.insertBefore(format, sibling);\r\n                    }\r\n\r\n                    if (!first) first = format;\r\n                }\r\n\r\n                return first;\r\n            }\r\n\r\n            // detach loop\r\n            for (let i = 0, len = children.length, insNode, lineIndex, next; i < len; i++) {\r\n                insNode = children[i];\r\n                if (insNode.nodeType === 3 && util.isList(rangeEl)) continue;\r\n                \r\n                moveComplete = false;\r\n                if (remove && i === 0) {\r\n                    if (!selectedFormats || selectedFormats.length === len || selectedFormats[0] === insNode) {\r\n                        firstNode = rangeElement.previousSibling;\r\n                    } else {\r\n                        firstNode = rangeEl;\r\n                    }\r\n                }\r\n\r\n                if (selectedFormats) lineIndex = selectedFormats.indexOf(insNode);\r\n                if (selectedFormats && lineIndex === -1) {\r\n                    if (!rangeEl) rangeEl = rangeElement.cloneNode(false);\r\n                    rangeEl.appendChild(insNode);\r\n                } else {\r\n                    if (selectedFormats) next = selectedFormats[lineIndex + 1];\r\n                    if (rangeEl && rangeEl.children.length > 0) {\r\n                        parent.insertBefore(rangeEl, rangeElement);\r\n                        rangeEl = null;\r\n                    }\r\n\r\n                    if (!newList && util.isListCell(insNode)) {\r\n                        if (next && util.getElementDepth(insNode) !== util.getElementDepth(next) && (util.isListCell(parent) || util.getArrayItem(insNode.children, util.isList, false))) {\r\n                            const insNext = insNode.nextElementSibling;\r\n                            const detachRange = util.detachNestedList(insNode, false);\r\n                            if ((rangeElement !== detachRange) || insNext !== insNode.nextElementSibling) {\r\n                                rangeElement = detachRange;\r\n                                reset = true;\r\n                            }\r\n                        } else {\r\n                            const inner = insNode;\r\n                            insNode = util.createElement(remove ? inner.nodeName : (util.isList(rangeElement.parentNode) || util.isListCell(rangeElement.parentNode)) ? 'LI' : util.isCell(rangeElement.parentNode) ? 'DIV' : options.defaultTag);\r\n                            const isCell = util.isListCell(insNode);\r\n                            const innerChildren = inner.childNodes;\r\n                            while (innerChildren[0]) {\r\n                                if (util.isList(innerChildren[0]) && !isCell) break;\r\n                                insNode.appendChild(innerChildren[0]);\r\n                            }\r\n                            util.copyFormatAttributes(insNode, inner);\r\n                            moveComplete = true;\r\n                        }\r\n                    } else {\r\n                        insNode = insNode.cloneNode(false);\r\n                    }\r\n\r\n                    if (!reset) {\r\n                        if (!remove) {\r\n                            if (newRangeElement) {\r\n                                if (!insertedNew) {\r\n                                    parent.insertBefore(newRangeElement, rangeElement);\r\n                                    insertedNew = true;\r\n                                }\r\n                                insNode = appendNode(newRangeElement, insNode, null, children[i]);\r\n                            } else {\r\n                                insNode = appendNode(parent, insNode, rangeElement, children[i]);\r\n                            }\r\n    \r\n                            if (!reset) {\r\n                                if (selectedFormats) {\r\n                                    lastNode = insNode;\r\n                                    if (!firstNode) {\r\n                                        firstNode = insNode;\r\n                                    }\r\n                                } else if (!firstNode) {\r\n                                    firstNode = lastNode = insNode;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            removeArray.push(insNode);\r\n                            util.removeItem(children[i]);\r\n                        }\r\n\r\n                        if (reset) {\r\n                            reset = moveComplete = false;\r\n                            children = util.getListChildNodes(rangeElement, function (current) { return current.parentNode === rangeElement; });\r\n                            rangeEl = rangeElement.cloneNode(false);\r\n                            parent = rangeElement.parentNode;\r\n                            i = -1;\r\n                            len = children.length;\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const rangeParent = rangeElement.parentNode;\r\n            let rangeRight = rangeElement.nextSibling;\r\n            if (rangeEl && rangeEl.children.length > 0) {\r\n                rangeParent.insertBefore(rangeEl, rangeRight);\r\n            }\r\n            \r\n            if (newRangeElement) firstNode = newRangeElement.previousSibling;\r\n            else if (!firstNode) firstNode = rangeElement.previousSibling;\r\n            rangeRight = rangeElement.nextSibling !== rangeEl ? rangeElement.nextSibling : rangeEl ? rangeEl.nextSibling : null;\r\n\r\n            if (rangeElement.children.length === 0 || rangeElement.textContent.length === 0) {\r\n                util.removeItem(rangeElement);\r\n            } else {\r\n                util.removeEmptyNode(rangeElement, null);\r\n            }\r\n\r\n            let edge = null;\r\n            if (remove) {\r\n                edge = {\r\n                    cc: rangeParent,\r\n                    sc: firstNode,\r\n                    ec: rangeRight,\r\n                    removeArray: removeArray\r\n                };\r\n            } else {\r\n                if (!firstNode) firstNode = lastNode;\r\n                if (!lastNode) lastNode = firstNode;\r\n                const childEdge = util.getEdgeChildNodes(firstNode, (lastNode.parentNode ? firstNode : lastNode));\r\n                edge = {\r\n                    cc: (childEdge.sc || childEdge.ec).parentNode,\r\n                    sc: childEdge.sc,\r\n                    ec: childEdge.ec\r\n                };\r\n            }\r\n\r\n            this.effectNode = null;\r\n            if (notHistoryPush) return edge;\r\n            \r\n            if (!remove && edge) {\r\n                if (!selectedFormats) {\r\n                    this.setRange(edge.sc, 0, edge.sc, 0);\r\n                } else {\r\n                    this.setRange(edge.sc, so, edge.ec, eo);\r\n                }\r\n            }\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description \"selectedFormats\" array are detached from the list element.\r\n         * The return value is applied when the first and last lines of \"selectedFormats\" are \"LI\" respectively.\r\n         * @param {Array} selectedFormats Array of format elements (LI, P...) to remove.\r\n         * @param {Boolean} remove If true, deleted without detached.\r\n         * @returns {Object} {sc: <LI>, ec: <LI>}.\r\n         */\r\n        detachList: function (selectedFormats, remove) {\r\n            let rangeArr = {};\r\n            let listFirst = false;\r\n            let listLast = false;\r\n            let first = null;\r\n            let last = null;\r\n            const passComponent = function (current) { return !this.isComponent(current); }.bind(util);\r\n\r\n            for (let i = 0, len = selectedFormats.length, r, o, lastIndex, isList; i < len; i++) {\r\n                lastIndex = i === len - 1;\r\n                o = util.getRangeFormatElement(selectedFormats[i], passComponent);\r\n                isList = util.isList(o);\r\n                if (!r && isList) {\r\n                    r = o;\r\n                    rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\r\n                    if (i === 0) listFirst = true;\r\n                } else if (r && isList) {\r\n                    if (r !== o) {\r\n                        const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\r\n                        o = selectedFormats[i].parentNode;\r\n                        if (listFirst) {\r\n                            first = edge.sc;\r\n                            listFirst = false;\r\n                        }\r\n                        if (lastIndex) last = edge.ec;\r\n\r\n                        if (isList) {\r\n                            r = o;\r\n                            rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\r\n                            if (lastIndex) listLast = true;\r\n                        } else {\r\n                            r = null;\r\n                        }\r\n                    } else {\r\n                        rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\r\n                        if (lastIndex) listLast = true;\r\n                    }\r\n                }\r\n\r\n                if (lastIndex && util.isList(r)) {\r\n                    const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\r\n                    if (listLast || len === 1) last = edge.ec;\r\n                    if (listFirst) first = edge.sc || last;\r\n                }\r\n            }\r\n\r\n            return {\r\n                sc: first,\r\n                ec: last\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Add, update, and delete nodes from selected text.\r\n         * 1. If there is a node in the \"appendNode\" argument, a node with the same tags and attributes as \"appendNode\" is added to the selection text.\r\n         * 2. If it is in the same tag, only the tag's attributes are changed without adding a tag.\r\n         * 3. If the \"appendNode\" argument is null, the node of the selection is update or remove without adding a new node.\r\n         * 4. The same style as the style attribute of the \"styleArray\" argument is deleted.\r\n         *    (Styles should be put with attribute names from css. [\"background-color\"])\r\n         * 5. The same class name as the class attribute of the \"styleArray\" argument is deleted.\r\n         *    (The class name is preceded by \".\" [\".className\"])\r\n         * 6. Use a list of styles and classes of \"appendNode\" in \"styleArray\" to avoid duplicate property values.\r\n         * 7. If a node with all styles and classes removed has the same tag name as \"appendNode\" or \"removeNodeArray\", or \"appendNode\" is null, that node is deleted.\r\n         * 8. Regardless of the style and class of the node, the tag with the same name as the \"removeNodeArray\" argument value is deleted.\r\n         * 9. If the \"strictRemove\" argument is true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n         *10. It won't work if the parent node has the same class and same value style.\r\n         *    However, if there is a value in \"removeNodeArray\", it works and the text node is separated even if there is no node to replace.\r\n         * @param {Element|null} appendNode The element to be added to the selection. If it is null, only delete the node.\r\n         * @param {Array|null} styleArray The style or className attribute name Array to check (['font-size'], ['.className'], ['font-family', 'color', '.className']...])\r\n         * @param {Array|null} removeNodeArray An array of node names to remove types from, remove all formats when \"appendNode\" is null and there is an empty array or null value. (['span'], ['strong', 'em'] ...])\r\n         * @param {Boolean|null} strictRemove If true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n         */\r\n        nodeChange: function (appendNode, styleArray, removeNodeArray, strictRemove) {\r\n            this._resetRangeToTextNode();\r\n            let range = this.getRange_addLine(this.getRange(), null);\r\n            styleArray = styleArray && styleArray.length > 0 ? styleArray : false;\r\n            removeNodeArray = removeNodeArray && removeNodeArray.length > 0 ? removeNodeArray : false;\r\n            \r\n            const isRemoveNode = !appendNode;\r\n            const isRemoveFormat = isRemoveNode && !removeNodeArray && !styleArray;\r\n            let startCon = range.startContainer;\r\n            let startOff = range.startOffset;\r\n            let endCon = range.endContainer;\r\n            let endOff = range.endOffset;\r\n\r\n            if ((isRemoveFormat && range.collapsed && util.isFormatElement(startCon.parentNode) && util.isFormatElement(endCon.parentNode)) || (startCon === endCon && startCon.nodeType === 1 && util.isNonEditable(startCon))) {\r\n                return;\r\n            }\r\n\r\n            if (range.collapsed && !isRemoveFormat) {\r\n                if (startCon.nodeType === 1 && !util.isBreak(startCon) && !util.isComponent(startCon)) {\r\n                    let afterNode = null;\r\n                    const focusNode = startCon.childNodes[startOff];\r\n\r\n                    if (focusNode) {\r\n                        if (!focusNode.nextSibling) {\r\n                            afterNode = null;\r\n                        } else {\r\n                            afterNode = util.isBreak(focusNode) ? focusNode : focusNode.nextSibling;\r\n                        }\r\n                    }\r\n\r\n                    const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                    startCon.insertBefore(zeroWidth, afterNode);\r\n                    this.setRange(zeroWidth, 1, zeroWidth, 1);\r\n\r\n                    range = this.getRange();\r\n                    startCon = range.startContainer;\r\n                    startOff = range.startOffset;\r\n                    endCon = range.endContainer;\r\n                    endOff = range.endOffset;\r\n                }\r\n            }\r\n\r\n            if (util.isFormatElement(startCon)) {\r\n                startCon = startCon.childNodes[startOff] || startCon.firstChild;\r\n                startOff = 0;\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon.lastChild;\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            if (isRemoveNode) {\r\n                appendNode = util.createElement('DIV');\r\n            }\r\n\r\n            const wRegExp = _w.RegExp;\r\n            const newNodeName = appendNode.nodeName;\r\n\r\n            /* checked same style property */\r\n            if (!isRemoveFormat && startCon === endCon && !removeNodeArray && appendNode) {\r\n                let sNode = startCon;\r\n                let checkCnt = 0;\r\n                const checkAttrs = [];\r\n                \r\n                const checkStyles = appendNode.style;\r\n                for (let i = 0, len = checkStyles.length; i < len; i++) {\r\n                    checkAttrs.push(checkStyles[i]);\r\n                }\r\n\r\n                const ckeckClasses = appendNode.classList;\r\n                for (let i = 0, len = ckeckClasses.length; i < len; i++) {\r\n                    checkAttrs.push('.' + ckeckClasses[i]);\r\n                }\r\n\r\n                if (checkAttrs.length > 0) {\r\n                    while(!util.isFormatElement(sNode) && !util.isWysiwygDiv(sNode)) {\r\n                        for (let i = 0; i < checkAttrs.length; i++) {\r\n                            if (sNode.nodeType === 1) {\r\n                                const s = checkAttrs[i];\r\n                                const classReg = /^\\./.test(s) ? new wRegExp('\\\\s*' + s.replace(/^\\./, '') + '(\\\\s+|$)', 'ig') : false;\r\n    \r\n                                const styleCheck = isRemoveNode ? !!sNode.style[s] : (!!sNode.style[s] && !!appendNode.style[s] && sNode.style[s] === appendNode.style[s]);\r\n                                const classCheck = classReg === false ? false : isRemoveNode ? !!sNode.className.match(classReg) : !!sNode.className.match(classReg) && !!appendNode.className.match(classReg);\r\n                                if (styleCheck || classCheck) {\r\n                                    checkCnt++;\r\n                                }\r\n                            }\r\n                        }\r\n                        sNode = sNode.parentNode;\r\n                    }\r\n    \r\n                    if (checkCnt >= checkAttrs.length) return;\r\n                }\r\n            }\r\n\r\n            let start = {}, end = {};\r\n            let newNode, styleRegExp = '', classRegExp = '', removeNodeRegExp = '';\r\n\r\n            if (styleArray) {\r\n                for (let i = 0, len = styleArray.length, s; i < len; i++) {\r\n                    s = styleArray[i];\r\n                    if (/^\\./.test(s)) {\r\n                        classRegExp += (classRegExp ? '|' : '\\\\s*(?:') + s.replace(/^\\./, '');\r\n                    } else {\r\n                        styleRegExp += (styleRegExp ? '|' : '(?:;|^|\\\\s)(?:') + s;\r\n                    }\r\n                }\r\n\r\n                if (styleRegExp) {\r\n                    styleRegExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\r\n                    styleRegExp = new wRegExp(styleRegExp, 'ig');\r\n                }\r\n\r\n                if (classRegExp) {\r\n                    classRegExp += ')(?=\\\\s+|$)';\r\n                    classRegExp = new wRegExp(classRegExp, 'ig');\r\n                }\r\n            }\r\n\r\n            if (removeNodeArray) {\r\n                removeNodeRegExp = '^(?:' + removeNodeArray[0];\r\n                for (let i = 1; i < removeNodeArray.length; i++) {\r\n                    removeNodeRegExp += '|' + removeNodeArray[i];\r\n                }\r\n                removeNodeRegExp += ')$';\r\n                removeNodeRegExp = new wRegExp(removeNodeRegExp, 'i');\r\n            }\r\n\r\n            /** validation check function*/\r\n            const wBoolean = _w.Boolean;\r\n            const _removeCheck = {v: false};\r\n            const validation = function (checkNode) {\r\n                const vNode = checkNode.cloneNode(false);\r\n\r\n                // all path\r\n                if (vNode.nodeType === 3 || util.isBreak(vNode)) return vNode;\r\n                // all remove\r\n                if (isRemoveFormat) return null;\r\n\r\n                // remove node check\r\n                const tagRemove = (!removeNodeRegExp && isRemoveNode) || (removeNodeRegExp && removeNodeRegExp.test(vNode.nodeName));\r\n\r\n                // tag remove\r\n                if (tagRemove && !strictRemove) {\r\n                    _removeCheck.v = true;\r\n                    return null;\r\n                }\r\n\r\n                // style regexp\r\n                const originStyle = vNode.style.cssText;\r\n                let style = '';\r\n                if (styleRegExp && originStyle.length > 0) {\r\n                    style = originStyle.replace(styleRegExp, '').trim();\r\n                    if (style !== originStyle) _removeCheck.v = true;\r\n                }\r\n\r\n                // class check\r\n                const originClasses = vNode.className;\r\n                let classes = '';\r\n                if (classRegExp && originClasses.length > 0) {\r\n                    classes = originClasses.replace(classRegExp, '').trim();\r\n                    if (classes !== originClasses) _removeCheck.v = true;\r\n                }\r\n\r\n                // remove only\r\n                if (isRemoveNode) {\r\n                    if ((classRegExp || !originClasses) && (styleRegExp || !originStyle) && !style && !classes && tagRemove) {\r\n                        _removeCheck.v = true;\r\n                        return null;\r\n                    }\r\n                }\r\n\r\n                // change\r\n                if (style || classes || vNode.nodeName !== newNodeName || (wBoolean(styleRegExp) !== wBoolean(originStyle)) || (wBoolean(classRegExp) !== wBoolean(originClasses))) {\r\n                    if (styleRegExp && originStyle.length > 0) vNode.style.cssText = style;\r\n                    if (!vNode.style.cssText) {\r\n                        vNode.removeAttribute('style');\r\n                    }\r\n\r\n                    if (classRegExp && originClasses.length > 0) vNode.className = classes.trim();\r\n                    if (!vNode.className.trim()) {\r\n                        vNode.removeAttribute('class');\r\n                    }\r\n\r\n                    if (!vNode.style.cssText && !vNode.className && (vNode.nodeName === newNodeName || tagRemove)) {\r\n                        _removeCheck.v = true;\r\n                        return null;\r\n                    }\r\n\r\n                    return vNode;\r\n                }\r\n\r\n                _removeCheck.v = true;\r\n                return null;\r\n            };\r\n\r\n            // get line nodes\r\n            const lineNodes = this.getSelectedElements(null);\r\n            range = this.getRange();\r\n            startCon = range.startContainer;\r\n            startOff = range.startOffset;\r\n            endCon = range.endContainer;\r\n            endOff = range.endOffset;\r\n\r\n            if (!util.getFormatElement(startCon, null)) {\r\n                startCon = util.getChildElement(lineNodes[0], function (current) { return current.nodeType === 3; }, false);\r\n                startOff = 0;\r\n            }\r\n\r\n            if (!util.getFormatElement(endCon, null)) {\r\n                endCon = util.getChildElement(lineNodes[lineNodes.length - 1], function (current) { return current.nodeType === 3; }, false);\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            \r\n            const oneLine = util.getFormatElement(startCon, null) === util.getFormatElement(endCon, null);\r\n            const endLength = lineNodes.length - (oneLine ? 0 : 1);\r\n\r\n            // node Changes\r\n            newNode = appendNode.cloneNode(false);\r\n\r\n            const isRemoveAnchor = isRemoveFormat || (isRemoveNode && (function (arr) {\r\n                for (let n = 0, len = arr.length; n < len; n++) {\r\n                    if (util._isMaintainedNode(arr[n]) || util._isSizeNode(arr[n])) return true;\r\n                }\r\n                return false;\r\n            })(removeNodeArray));\r\n\r\n            const isSizeNode = isRemoveNode || util._isSizeNode(newNode);\r\n            const _getMaintainedNode = this._util_getMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\r\n            const _isMaintainedNode = this._util_isMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\r\n\r\n            // one line\r\n            if (oneLine) {\r\n                const newRange = this._nodeChange_oneLine(lineNodes[0], newNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, range.collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode);\r\n                start.container = newRange.startContainer;\r\n                start.offset = newRange.startOffset;\r\n                end.container = newRange.endContainer;\r\n                end.offset = newRange.endOffset;\r\n                if (start.container === end.container && util.onlyZeroWidthSpace(start.container)) {\r\n                    start.offset = end.offset = 1;\r\n                }\r\n                this._setCommonListStyle(newRange.ancestor, null);\r\n            } else { // multi line \r\n                // end\r\n                if (endLength > 0) {\r\n                    newNode = appendNode.cloneNode(false);\r\n                    end = this._nodeChange_endLine(lineNodes[endLength], newNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode);\r\n                }\r\n\r\n                // mid\r\n                for (let i = endLength - 1, newRange; i > 0; i--) {\r\n                    newNode = appendNode.cloneNode(false);\r\n                    newRange = this._nodeChange_middleLine(lineNodes[i], newNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, end.container);\r\n                    if (newRange.endContainer && newRange.ancestor.contains(newRange.endContainer)) {\r\n                        end.ancestor = null;\r\n                        end.container = newRange.endContainer;\r\n                    }\r\n                    this._setCommonListStyle(newRange.ancestor, null);\r\n                }\r\n\r\n                // start\r\n                newNode = appendNode.cloneNode(false);\r\n                start = this._nodeChange_startLine(lineNodes[0], newNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, end.container);\r\n\r\n                if (start.endContainer) {\r\n                    end.ancestor = null;\r\n                    end.container = start.endContainer;\r\n                }\r\n\r\n                if (endLength <= 0) {\r\n                    end = start;\r\n                } else if (!end.container) {\r\n                    end.ancestor = null;\r\n                    end.container = start.container;\r\n                    end.offset = start.container.textContent.length;\r\n                }\r\n\r\n                this._setCommonListStyle(start.ancestor, null);\r\n                this._setCommonListStyle(end.ancestor || util.getFormatElement(end.container), null);\r\n            }\r\n\r\n            // set range\r\n            this.controllersOff();\r\n            this.setRange(start.container, start.offset, end.container, end.offset);\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description If certain styles are applied to all child nodes of the list cell, the style of the list cell is also changed. (bold, color, size)\r\n         * @param {Element} el List cell element. <li>\r\n         * @param {Element|null} child Variable for recursive call. (\"null\" on the first call)\r\n         * @private\r\n         */\r\n        _setCommonListStyle: function (el, child) {\r\n            if (!util.isListCell(el)) return;\r\n            if (!child) el.removeAttribute('style');\r\n            \r\n            const children = util.getArrayItem((child || el).childNodes, function (current) { return !util.isBreak(current); }, true);\r\n            if (children[0] && children.length === 1){\r\n                child = children[0];\r\n                if (!child || child.nodeType !== 1) return;\r\n\r\n                const childStyle = child.style;\r\n                const elStyle = el.style;\r\n\r\n                // bold, italic\r\n                if (options._textTagsMap[child.nodeName.toLowerCase()] === this._defaultCommand.bold.toLowerCase()) elStyle.fontWeight = 'bold'; // bold\r\n                else if (childStyle.fontWeight) elStyle.fontWeight = childStyle.fontWeight;\r\n                if (options._textTagsMap[child.nodeName.toLowerCase()] === this._defaultCommand.italic.toLowerCase()) elStyle.fontStyle = 'italic'; // italic\r\n                else if (childStyle.fontStyle) elStyle.fontStyle = childStyle.fontStyle;\r\n\r\n                // styles\r\n                if (childStyle.color) elStyle.color = childStyle.color; // color\r\n                if (childStyle.fontSize) elStyle.fontSize = childStyle.fontSize; // size\r\n\r\n                this._setCommonListStyle(el, child);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Strip remove node\r\n         * @param {Node} removeNode The remove node\r\n         * @private\r\n         */\r\n        _stripRemoveNode: function (removeNode) {\r\n            const element = removeNode.parentNode;\r\n            if (!removeNode || removeNode.nodeType === 3 || !element) return;\r\n            \r\n            const children = removeNode.childNodes;\r\n            while (children[0]) {\r\n                element.insertBefore(children[0], removeNode);\r\n            }\r\n\r\n            element.removeChild(removeNode);\r\n        },\r\n\r\n        /**\r\n         * @description Return the parent maintained tag. (bind and use a util object)\r\n         * @param {Element} element Element\r\n         * @returns {Element}\r\n         * @private\r\n         */\r\n        _util_getMaintainedNode: function (_isRemove, _isSizeNode, element) {\r\n            if (!element || _isRemove) return null;\r\n            return this.getParentElement(element, this._isMaintainedNode.bind(this)) || (!_isSizeNode ? this.getParentElement(element, this._isSizeNode.bind(this)) : null);\r\n        },\r\n\r\n        /**\r\n         * @description Check if element is a tag that should be persisted. (bind and use a util object)\r\n         * @param {Element} element Element\r\n         * @returns {Element}\r\n         * @private\r\n         */\r\n        _util_isMaintainedNode: function (_isRemove, _isSizeNode, element) {\r\n            if (!element || _isRemove || element.nodeType !== 1) return false;\r\n            const anchor = this._isMaintainedNode(element);\r\n            return this.getParentElement(element, this._isMaintainedNode.bind(this)) ? anchor : (anchor || (!_isSizeNode ? this._isSizeNode(element) : false));\r\n        },\r\n\r\n        /**\r\n         * @description wraps text nodes of line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @param {Boolean} collapsed range.collapsed\r\n         * @returns {{ancestor: *, startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n         * @private\r\n         */\r\n        _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\r\n            // not add tag\r\n            let parentCon = startCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n\r\n            if (!isRemoveNode && parentCon === endCon.parentNode && parentCon.nodeName === newInnerNode.nodeName) {\r\n                if (util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff)) && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\r\n                    const children = parentCon.childNodes;\r\n                    let sameTag = true;\r\n    \r\n                    for (let i = 0, len = children.length, c, s, e, z; i < len; i++) {\r\n                        c = children[i];\r\n                        z = !util.onlyZeroWidthSpace(c);\r\n                        if (c === startCon) {\r\n                            s = true;\r\n                            continue;\r\n                        }\r\n                        if (c === endCon) {\r\n                            e = true;\r\n                            continue;\r\n                        }\r\n                        if ((!s && z) || (s && e && z)) {\r\n                            sameTag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n    \r\n                    if (sameTag) {\r\n                        util.copyTagAttributes(parentCon, newInnerNode);\r\n        \r\n                        return {\r\n                            startContainer: startCon,\r\n                            startOffset: startOff,\r\n                            endContainer: endCon,\r\n                            endOffset: endOff\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n            const isSameNode = startCon === endCon;\r\n            let startContainer = startCon;\r\n            let startOffset = startOff;\r\n            let endContainer = endCon;\r\n            let endOffset = endOff;\r\n            let startPass = false;\r\n            let endPass = false;\r\n            let pCurrent, newNode, appendNode, cssText, anchorNode;\r\n\r\n            const wRegExp = _w.RegExp;\r\n            function checkCss (vNode) {\r\n                const regExp = new wRegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\r\n                let style = '';\r\n\r\n                if (regExp && vNode.style.cssText.length > 0) {\r\n                    style = regExp.test(vNode.style.cssText);\r\n                }\r\n            \r\n                return !style;\r\n            }\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode; i < len; i++) {\r\n                    let child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n                    let cloneNode;\r\n\r\n                    // startContainer\r\n                    if (!startPass && child === startContainer) {\r\n                        let line = pNode;\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const prevNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\r\n                        const textNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, \r\n                                isSameNode ? \r\n                                (endOffset >= startOffset ? endOffset - startOffset : startContainer.data.length - startOffset) : \r\n                                startContainer.data.length - startOffset)\r\n                            );\r\n\r\n                        if (anchorNode) {\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== line) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== line) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.appendChild(a);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        }\r\n                        \r\n                        if (!util.onlyZeroWidthSpace(prevNode)) {\r\n                            ancestor.appendChild(prevNode);\r\n                        }\r\n\r\n                        const prevAnchorNode = _getMaintainedNode(ancestor);\r\n                        if (!!prevAnchorNode) anchorNode = prevAnchorNode;\r\n                        if (anchorNode) line = anchorNode;\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== line && newNode !== el && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(vNode);\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        newInnerNode.appendChild(childNode);\r\n                        line.appendChild(newInnerNode);\r\n\r\n                        if (anchorNode && !_getMaintainedNode(endContainer)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        startContainer = textNode;\r\n                        startOffset = 0;\r\n                        startPass = true;\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(startContainer);\r\n                        if (!isSameNode) continue;\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!endPass && child === endContainer) {\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const afterNode = util.createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, (endContainer.length - endOffset)));\r\n                        const textNode = util.createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\r\n\r\n                        if (anchorNode) {\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(afterNode)) {\r\n                            newNode = child;\r\n                            cssText = '';\r\n                            pCurrent = [];\r\n                            const anchors = [];\r\n                            while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                                if (newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                    if (_isMaintainedNode(newNode)) anchors.push(newNode.cloneNode(false));\r\n                                    else pCurrent.push(newNode.cloneNode(false));\r\n                                    cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                                }\r\n                                newNode = newNode.parentNode;\r\n                            }\r\n                            pCurrent = pCurrent.concat(anchors);\r\n\r\n                            cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\r\n                            while (pCurrent.length > 0) {\r\n                                newNode = pCurrent.pop();\r\n                                appendNode.appendChild(newNode);\r\n                                appendNode = newNode;\r\n                            }\r\n\r\n                            pNode.appendChild(cloneNode);\r\n                            newNode.textContent = afterNode.data;\r\n                        }\r\n\r\n                        if (anchorNode && cloneNode) {\r\n                            const afterAnchorNode = _getMaintainedNode(cloneNode);\r\n                            if (afterAnchorNode) {\r\n                                anchorNode = afterAnchorNode;\r\n                            }\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(vNode);\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            newInnerNode.appendChild(childNode);\r\n                            anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\r\n                            pNode.appendChild(anchorNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                            anchorNode = null;\r\n                        } else {\r\n                            newInnerNode.appendChild(childNode);\r\n                        }\r\n\r\n                        endContainer = textNode;\r\n                        endOffset = textNode.data.length;\r\n                        endPass = true;\r\n\r\n                        if (!isRemoveFormat && collapsed) {\r\n                            newInnerNode = textNode;\r\n                            textNode.textContent = util.zeroWidthSpace;\r\n                        }\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(endContainer);\r\n                        continue;\r\n                    }\r\n\r\n                    // other\r\n                    if (startPass) {\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                pNode.appendChild(child.cloneNode(true));\r\n                                if (!collapsed) {\r\n                                    newInnerNode = newInnerNode.cloneNode(false);\r\n                                    pNode.appendChild(newInnerNode);\r\n                                    nNodeArray.push(newInnerNode);\r\n                                }\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = endPass ? newNode.cloneNode(false) : validation(newNode);\r\n                            if (newNode.nodeType === 1 && !util.isBreak(child) && vNode && checkCss(newNode)) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n                        \r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode) && !util.onlyZeroWidthSpace(newInnerNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n                        \r\n                        if (!endPass && !anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.appendChild(childNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                            if (newInnerNode.children.length > 0) ancestor = newNode;\r\n                            else ancestor = newInnerNode;\r\n                        } else if (childNode === child) {\r\n                            if (!endPass) ancestor = newInnerNode;\r\n                            else ancestor = pNode;\r\n                        } else if (endPass) {\r\n                            pNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.appendChild(newInnerNode);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cloneNode = child.cloneNode(false);\r\n                    ancestor.appendChild(cloneNode);\r\n                    if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    startContainer: startCon,\r\n                    startOffset: startOff,\r\n                    endContainer: endCon,\r\n                    endOffset: endOff\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    let textNode, textNode_s, textNode_e;\r\n                    \r\n                    if (collapsed) {\r\n                        textNode = util.createTextNode(util.zeroWidthSpace);\r\n                        pNode.replaceChild(textNode, removeNode);\r\n                    } else {\r\n                        const rChildren = removeNode.childNodes;\r\n                        textNode_s = rChildren[0];\r\n                        while (rChildren[0]) {\r\n                            textNode_e = rChildren[0];\r\n                            pNode.insertBefore(textNode_e, removeNode);\r\n                        }\r\n                        util.removeItem(removeNode);\r\n                    }\r\n\r\n                    if (i === 0) {\r\n                        if (collapsed) {\r\n                            startContainer = endContainer = textNode;\r\n                        } else {\r\n                            startContainer = textNode_s;\r\n                            endContainer = textNode_e;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (isRemoveNode) {\r\n                    for (let i = 0; i < nNodeArray.length; i++) {\r\n                        this._stripRemoveNode(nNodeArray[i]);\r\n                    }\r\n                }\r\n                \r\n                if (collapsed) {\r\n                    startContainer = endContainer = newInnerNode;\r\n                }\r\n            }\r\n\r\n            util.removeEmptyNode(pNode, newInnerNode);\r\n\r\n            if (collapsed) {\r\n                startOffset = startContainer.textContent.length;\r\n                endOffset = endContainer.textContent.length;\r\n            }\r\n\r\n            // endContainer reset\r\n            const endConReset = isRemoveFormat || endContainer.textContent.length === 0;\r\n\r\n            if (!util.isBreak(endContainer) && endContainer.textContent.length === 0) {\r\n                util.removeItem(endContainer);\r\n                endContainer = startContainer;\r\n            }\r\n            endOffset = endConReset ? endContainer.textContent.length : endOffset;\r\n\r\n            // node change\r\n            const newStartOffset = {s: 0, e: 0};\r\n            const startPath = util.getNodePath(startContainer, pNode, newStartOffset);\r\n\r\n            const mergeEndCon = !endContainer.parentNode;\r\n            if (mergeEndCon) endContainer = startContainer;\r\n            const newEndOffset = {s: 0, e: 0};\r\n            const endPath = util.getNodePath(endContainer , pNode, (!mergeEndCon && !endConReset) ? newEndOffset : null);\r\n\r\n            startOffset += newStartOffset.s;\r\n            endOffset = (collapsed ? startOffset : mergeEndCon ? startContainer.textContent.length : endConReset ? endOffset + newStartOffset.s : endOffset + newEndOffset.s);\r\n\r\n            // tag merge\r\n            const newOffsets = util.mergeSameTags(pNode, [startPath, endPath], true);\r\n\r\n            element.parentNode.replaceChild(pNode, element);\r\n\r\n            startContainer = util.getNodeFromPath(startPath, pNode);\r\n            endContainer = util.getNodeFromPath(endPath, pNode);\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                startContainer: startContainer,\r\n                startOffset: startOffset + newOffsets[0],\r\n                endContainer: endContainer,\r\n                endOffset: endOffset + newOffsets[1]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps first line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @returns {null|Node} If end container is renewed, returned renewed node\r\n         * @returns {Object} { ancestor, container, offset, endContainer }\r\n         * @private\r\n         */\r\n        _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, _endContainer) {\r\n            // not add tag\r\n            let parentCon = startCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n\r\n            if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.nextSibling && util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff))) {\r\n                let sameTag = true;\r\n                let s = startCon.previousSibling;\r\n                while (s) {\r\n                    if (!util.onlyZeroWidthSpace(s)) {\r\n                        sameTag = false;\r\n                        break;\r\n                    }\r\n                    s = s.previousSibling;\r\n                }\r\n\r\n                if (sameTag) {\r\n                    util.copyTagAttributes(parentCon, newInnerNode);\r\n    \r\n                    return {\r\n                        ancestor: element,\r\n                        container: startCon,\r\n                        offset: startOff\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = startCon;\r\n            let offset = startOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode, anchorNode;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\r\n                    const child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                newInnerNode = newInnerNode.cloneNode(false);\r\n                                cloneChild = child.cloneNode(true);\r\n                                pNode.appendChild(cloneChild);\r\n                                pNode.appendChild(newInnerNode);\r\n                                nNodeArray.push(newInnerNode);\r\n\r\n                                // end container\r\n                                if (_endContainer && child.contains(_endContainer)) {\r\n                                    const endPath = util.getNodePath(_endContainer, child);\r\n                                    _endContainer = util.getNodeFromPath(endPath, cloneChild);\r\n                                }\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = validation(newNode);\r\n                            if (newNode.nodeType === 1 && vNode) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const isTopNode = pCurrent.length > 0;\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n                        \r\n                        if (!anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.appendChild(childNode);\r\n                            ancestor = !_isMaintainedNode(newNode) ? newNode : newInnerNode;\r\n                            nNodeArray.push(newInnerNode);\r\n                        } else if (isTopNode) {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.appendChild(newInnerNode);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // startContainer\r\n                    if (!passNode && child === container) {\r\n                        let line = pNode;\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const prevNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n\r\n                        if (anchorNode) {\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== line) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== line) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.appendChild(a);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(prevNode)) {\r\n                            ancestor.appendChild(prevNode);\r\n                        }\r\n\r\n                        const prevAnchorNode = _getMaintainedNode(ancestor);\r\n                        if (!!prevAnchorNode) anchorNode = prevAnchorNode;\r\n                        if (anchorNode) line = anchorNode;\r\n\r\n                        newNode = ancestor;\r\n                        pCurrent = [];\r\n                        while (newNode !== line && newNode !== null) {\r\n                            vNode = validation(newNode);\r\n                            if (newNode.nodeType === 1 && vNode) {\r\n                                pCurrent.push(vNode);\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || ancestor;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== ancestor) {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n                        line.appendChild(newInnerNode);\r\n\r\n                        container = textNode;\r\n                        offset = 0;\r\n                        passNode = true;\r\n\r\n                        ancestor.appendChild(container);\r\n                        continue;\r\n                    }\r\n\r\n                    vNode = !passNode ? child.cloneNode(false) : validation(child);\r\n                    if (vNode) {\r\n                        ancestor.appendChild(vNode);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    container: startCon,\r\n                    offset: startOff,\r\n                    endContainer: _endContainer\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n\r\n                    const rChildren = removeNode.childNodes;\r\n                    const textNode = rChildren[0];\r\n                    while (rChildren[0]) {\r\n                        pNode.insertBefore(rChildren[0], removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n\r\n                    if (i === 0) container = textNode;\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.childNodes.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                util.removeEmptyNode(pNode, newInnerNode);\r\n\r\n                if (util.onlyZeroWidthSpace(pNode.textContent)) {\r\n                    container = pNode.firstChild;\r\n                    offset = 0;\r\n                }\r\n\r\n                // node change\r\n                const offsets = {s: 0, e: 0};\r\n                const path = util.getNodePath(container, pNode, offsets);\r\n                offset += offsets.s;\r\n\r\n                // tag merge\r\n                const newOffsets = util.mergeSameTags(pNode, [path], true);\r\n\r\n                element.parentNode.replaceChild(pNode, element);\r\n\r\n                container = util.getNodeFromPath(path, pNode);\r\n                offset += newOffsets[0];\r\n            }\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                container: container,\r\n                offset: offset,\r\n                endContainer: _endContainer\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps mid lines selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @param {Node} _endContainer Offset node of last line already modified (end.container)\r\n         * @returns {Object} { ancestor, endContainer: \"If end container is renewed, returned renewed node\" }\r\n         * @private\r\n         */\r\n        _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, _endContainer) {\r\n            // not add tag\r\n            if (!isRemoveNode) {\r\n                // end container path\r\n                let endPath = null;\r\n                if (_endContainer && element.contains(_endContainer)) endPath = util.getNodePath(_endContainer, element);\r\n\r\n                const tempNode = element.cloneNode(true);\r\n                const newNodeName = newInnerNode.nodeName;\r\n                const newCssText = newInnerNode.style.cssText;\r\n                const newClass = newInnerNode.className;\r\n\r\n                let children = tempNode.childNodes;\r\n                let i = 0, len = children.length;\r\n                for (let child; i < len; i++) {\r\n                    child = children[i];\r\n                    if (child.nodeType === 3) break;\r\n                    if (child.nodeName === newNodeName) {\r\n                        child.style.cssText += newCssText;\r\n                        util.addClass(child, newClass);\r\n                    } else if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\r\n                        continue;\r\n                    } else if (len === 1) {\r\n                        children = child.childNodes;\r\n                        len = children.length;\r\n                        i = -1;\r\n                        continue;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (len > 0 && i === len) {\r\n                    element.innerHTML = tempNode.innerHTML;\r\n                    return {\r\n                        ancestor: element,\r\n                        endContainer: endPath ? util.getNodeFromPath(endPath, element) : null\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const pNode = element.cloneNode(false);\r\n            const nNodeArray = [newInnerNode];\r\n            let noneChange = true;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\r\n                    let child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\r\n                        if (newInnerNode.childNodes.length > 0) {\r\n                            pNode.appendChild(newInnerNode);\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                        }\r\n                        \r\n                        cloneChild = child.cloneNode(true);\r\n                        pNode.appendChild(cloneChild);\r\n                        pNode.appendChild(newInnerNode);\r\n                        nNodeArray.push(newInnerNode);\r\n                        ancestor = newInnerNode;\r\n\r\n                        // end container\r\n                        if (_endContainer && child.contains(_endContainer)) {\r\n                            const endPath = util.getNodePath(_endContainer, child);\r\n                            _endContainer = util.getNodeFromPath(endPath, cloneChild);\r\n                        }\r\n\r\n                        continue;\r\n                    } else {\r\n                        vNode = validation(child);\r\n                        if (vNode) {\r\n                            noneChange = false;\r\n                            ancestor.appendChild(vNode);\r\n                            if (child.nodeType === 1) coverNode = vNode;\r\n                        }\r\n                    }\r\n\r\n                    if (!util.isBreak(child)) recursionFunc(child, coverNode);\r\n                }\r\n            })(element, newInnerNode);\r\n\r\n            // not remove tag\r\n            if (noneChange || (isRemoveNode && !isRemoveFormat && !_removeCheck.v)) return { ancestor: element, endContainer: _endContainer };\r\n\r\n            pNode.appendChild(newInnerNode);\r\n\r\n            if (isRemoveFormat && isRemoveNode) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    \r\n                    const rChildren = removeNode.childNodes;\r\n                    while (rChildren[0]) {\r\n                        pNode.insertBefore(rChildren[0], removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            util.removeEmptyNode(pNode, newInnerNode);\r\n            util.mergeSameTags(pNode, null, true);\r\n\r\n            // node change\r\n            element.parentNode.replaceChild(pNode, element);\r\n            return { ancestor: pNode, endContainer: _endContainer };\r\n        },\r\n\r\n        /**\r\n         * @description wraps last line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @returns {Object} { ancestor, container, offset }\r\n         * @private\r\n         */\r\n        _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\r\n            // not add tag\r\n            let parentCon = endCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n            \r\n            if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.previousSibling && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\r\n                let sameTag = true;\r\n                let e = endCon.nextSibling;\r\n                while (e) {\r\n                    if (!util.onlyZeroWidthSpace(e)) {\r\n                        sameTag = false;\r\n                        break;\r\n                    }\r\n                    e = e.nextSibling;\r\n                }\r\n\r\n                if (sameTag) {\r\n                    util.copyTagAttributes(parentCon, newInnerNode);\r\n    \r\n                    return {\r\n                        ancestor: element,\r\n                        container: endCon,\r\n                        offset: endOff\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = endCon;\r\n            let offset = endOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode, anchorNode;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = childNodes.length - 1, vNode; 0 <= i; i--) {\r\n                    const child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                newInnerNode = newInnerNode.cloneNode(false);\r\n                                const cloneChild = child.cloneNode(true);\r\n                                pNode.insertBefore(cloneChild, ancestor);\r\n                                pNode.insertBefore(newInnerNode, cloneChild);\r\n                                nNodeArray.push(newInnerNode);\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const isTopNode = pCurrent.length > 0;\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.insertBefore(childNode, pNode.firstChild);\r\n                            nNodeArray.push(newInnerNode);\r\n                            if (newInnerNode.children.length > 0) ancestor = newNode;\r\n                            else ancestor = newInnerNode;\r\n                        } else if (isTopNode) {\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!passNode && child === container) {\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const afterNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n\r\n                        if (anchorNode) {\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== pNode) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== pNode) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.insertBefore(a, m.parentNode.firstChild);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(afterNode)) {\r\n                            ancestor.insertBefore(afterNode, ancestor.firstChild);\r\n                        }\r\n\r\n                        newNode = ancestor;\r\n                        pCurrent = [];\r\n                        while (newNode !== pNode && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1) {\r\n                                pCurrent.push(vNode);\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || ancestor;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== ancestor) {\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n                        \r\n                        if (anchorNode) {\r\n                            anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\r\n                            pNode.insertBefore(anchorNode, pNode.firstChild);\r\n                            anchorNode = null;\r\n                        } else {\r\n                            pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                        }\r\n\r\n                        container = textNode;\r\n                        offset = textNode.data.length;\r\n                        passNode = true;\r\n\r\n                        ancestor.insertBefore(container, ancestor.firstChild);\r\n                        continue;\r\n                    }\r\n\r\n                    vNode = !passNode ? child.cloneNode(false) : validation(child);\r\n                    if (vNode) {\r\n                        ancestor.insertBefore(vNode, ancestor.firstChild);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    container: endCon,\r\n                    offset: endOff\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    \r\n                    const rChildren = removeNode.childNodes;\r\n                    let textNode = null;\r\n                    while (rChildren[0]) {\r\n                        textNode = rChildren[0];\r\n                        pNode.insertBefore(textNode, removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n\r\n                    if (i === nNodeArray.length - 1) {\r\n                        container = textNode;\r\n                        offset = textNode.textContent.length;\r\n                    }\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.childNodes.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                if (!isRemoveNode && newInnerNode.textContent.length === 0) {\r\n                    util.removeEmptyNode(pNode, null);\r\n                    return {\r\n                        ancestor: null,\r\n                        container: null,\r\n                        offset: 0\r\n                    };\r\n                }\r\n\r\n                util.removeEmptyNode(pNode, newInnerNode);\r\n\r\n                if (util.onlyZeroWidthSpace(pNode.textContent)) {\r\n                    container = pNode.firstChild;\r\n                    offset = container.textContent.length;\r\n                } else if (util.onlyZeroWidthSpace(container)) {\r\n                    container = newInnerNode;\r\n                    offset = 1;\r\n                }\r\n                \r\n                // node change\r\n                const offsets = {s: 0, e: 0};\r\n                const path = util.getNodePath(container, pNode, offsets);\r\n                offset += offsets.s;\r\n\r\n                // tag merge\r\n                const newOffsets = util.mergeSameTags(pNode, [path], true);\r\n\r\n                element.parentNode.replaceChild(pNode, element);\r\n\r\n                container = util.getNodeFromPath(path, pNode);\r\n                offset += newOffsets[0];\r\n            }\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                container: container,\r\n                offset: container.nodeType === 1 && offset === 1 ? container.childNodes.length : offset\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Run plugin calls and basic commands.\r\n         * @param {String} command Command string\r\n         * @param {String} display Display type string ('command', 'submenu', 'dialog', 'container')\r\n         * @param {Element} target The element of command button\r\n         */\r\n        actionCall: function (command, display, target) {\r\n            // call plugins\r\n            if (display) {\r\n                if (/more/i.test(display)) {\r\n                    if (target !== this._moreLayerActiveButton) {\r\n                        const layer = context.element.toolbar.querySelector('.' + command);\r\n                        if (layer) {\r\n                            if (this._moreLayerActiveButton) this.moreLayerOff();\r\n\r\n                            this._moreLayerActiveButton = target;\r\n                            layer.style.display = 'block';\r\n\r\n                            event._showToolbarBalloon();\r\n                            event._showToolbarInline();\r\n                        }\r\n                        util.addClass(target, 'on');\r\n                    } else {\r\n                        const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\r\n                        if (layer) {\r\n                            this.moreLayerOff();\r\n\r\n                            event._showToolbarBalloon();\r\n                            event._showToolbarInline();\r\n                        }        \r\n                    }\r\n                    return;\r\n                }\r\n                \r\n                if (/container/.test(display) && (this._menuTray[command] === null || target !== this.containerActiveButton)) {\r\n                    this.callPlugin(command, this.containerOn.bind(this, target), target);\r\n                    return;\r\n                } \r\n                \r\n                if (this.isReadOnly && util.arrayIncludes(this.resizingDisabledButtons, target)) return;\r\n                if (/submenu/.test(display) && (this._menuTray[command] === null || target !== this.submenuActiveButton)) {\r\n                    this.callPlugin(command, this.submenuOn.bind(this, target), target);\r\n                    return;\r\n                } else if (/dialog/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].open.bind(this), target);\r\n                    return;\r\n                } else if (/command/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].action.bind(this), target);\r\n                } else if (/fileBrowser/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].open.bind(this, null), target);\r\n                }\r\n            } // default command\r\n            else if (command) {\r\n                this.commandHandler(target, command);\r\n            }\r\n\r\n            if (/submenu/.test(display)) {\r\n                this.submenuOff();\r\n            } else if (!/command/.test(display)) {\r\n                this.submenuOff();\r\n                this.containerOff();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Execute command of command button(All Buttons except submenu and dialog)\r\n         * (selectAll, codeView, fullScreen, indent, outdent, undo, redo, removeFormat, print, preview, showBlocks, save, bold, underline, italic, strike, subscript, superscript, copy, cut, paste)\r\n         * @param {Element|null} target The element of command button\r\n         * @param {String} command Property of command button (data-value)\r\n         */\r\n        commandHandler: function (target, command) {\r\n            if (core.isReadOnly && !/copy|cut|selectAll|codeView|fullScreen|print|preview|showBlocks/.test(command)) return;\r\n            switch (command) {\r\n                case 'copy':\r\n                case 'cut':\r\n                    this.execCommand(command);\r\n                    break;\r\n                case 'paste':\r\n                    break;\r\n                case 'selectAll':\r\n                    this.containerOff();\r\n                    const wysiwyg = context.element.wysiwyg;\r\n                    let first = util.getChildElement(wysiwyg.firstChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, false) || wysiwyg.firstChild;\r\n                    let last = util.getChildElement(wysiwyg.lastChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, true) || wysiwyg.lastChild;\r\n                    if (!first || !last) return;\r\n                    if (util.isMedia(first)) {\r\n                        const info = this.getFileComponent(first);\r\n                        const br = util.createElement('BR');\r\n                        const format = util.createElement(options.defaultTag);\r\n                        format.appendChild(br);\r\n                        first = info ? info.component : first;\r\n                        first.parentNode.insertBefore(format, first);\r\n                        first = br;\r\n                    }\r\n                    if (util.isMedia(last)) {\r\n                        const br = util.createElement('BR');\r\n                        const format = util.createElement(options.defaultTag);\r\n                        format.appendChild(br);\r\n                        wysiwyg.appendChild(format);\r\n                        last = br;\r\n                    }\r\n                    this.setRange(first, 0, last, last.textContent.length);\r\n                    break;\r\n                case 'codeView':\r\n                    this.toggleCodeView();\r\n                    break;\r\n                case 'fullScreen':\r\n                    this.toggleFullScreen(target);\r\n                    break;\r\n                case 'indent':\r\n                case 'outdent':\r\n                    this.indent(command);\r\n                    break;\r\n                case 'undo':\r\n                    this.history.undo();\r\n                    break;\r\n                case 'redo':\r\n                    this.history.redo();\r\n                    break;\r\n                case 'removeFormat':\r\n                    this.removeFormat();\r\n                    this.focus();\r\n                    break;\r\n                case 'print':\r\n                    this.print();\r\n                    break;\r\n                case 'preview':\r\n                    this.preview();\r\n                    break;\r\n                case 'showBlocks':\r\n                    this.toggleDisplayBlocks();\r\n                    break;\r\n                case 'dir':\r\n                    this.setDir(options.rtl ? 'ltr' : 'rtl');\r\n                    break;\r\n                case 'dir_ltr':\r\n                    this.setDir('ltr');\r\n                    break;\r\n                case 'dir_rtl':\r\n                    this.setDir('rtl');\r\n                    break;\r\n                case 'save':\r\n                    if (typeof options.callBackSave === 'function') {\r\n                        options.callBackSave(this.getContents(false), this._variable.isChanged);\r\n                    } else if (this._variable.isChanged && typeof functions.save === 'function') {\r\n                        functions.save();\r\n                    } else {\r\n                        throw Error('[SUNEDITOR.core.commandHandler.fail] Please register call back function in creation option. (callBackSave : Function)');\r\n                    }\r\n\r\n                    this._variable.isChanged = false;\r\n                    if (context.tool.save) context.tool.save.setAttribute('disabled', true);\r\n                    break;\r\n                default : // 'STRONG', 'U', 'EM', 'DEL', 'SUB', 'SUP'..\r\n                    command = this._defaultCommand[command.toLowerCase()] || command;\r\n                    if (!this.commandMap[command]) this.commandMap[command] = target;\r\n\r\n                    const nodesMap = this._variable.currentNodesMap;\r\n                    const cmd = nodesMap.indexOf(command) > -1 ? null : util.createElement(command);\r\n                    let removeNode = command;\r\n\r\n                    if (/^SUB$/i.test(command) && nodesMap.indexOf('SUP') > -1) {\r\n                        removeNode = 'SUP';\r\n                    } else if (/^SUP$/i.test(command) && nodesMap.indexOf('SUB') > -1) {\r\n                        removeNode = 'SUB';\r\n                    }\r\n\r\n                    this.nodeChange(cmd, this._commandMapStyles[command] || null, [removeNode], false);\r\n                    this.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Remove format of the currently selected range\r\n         */\r\n        removeFormat: function () {\r\n            this.nodeChange(null, null, null, null);\r\n        },\r\n\r\n        /**\r\n         * @description This method implements indentation to selected range.\r\n         * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n         * @param {String} command Separator (\"indent\" or \"outdent\")\r\n         */\r\n        indent: function (command) {\r\n            const range = this.getRange();\r\n            const rangeLines = this.getSelectedElements(null);\r\n            const cells = [];\r\n            const shift = 'indent' !== command;\r\n            const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\r\n            let sc = range.startContainer;\r\n            let ec = range.endContainer;\r\n            let so = range.startOffset;\r\n            let eo = range.endOffset;\r\n\r\n            for (let i = 0, len = rangeLines.length, f, margin; i < len; i++) {\r\n                f = rangeLines[i];\r\n                if (!util.isListCell(f) || !this.plugins.list) {\r\n                    margin = /\\d+/.test(f.style[marginDir]) ? util.getNumber(f.style[marginDir], 0) : 0;\r\n                    if (shift) {\r\n                        margin -= 25;\r\n                    } else {\r\n                        margin += 25;\r\n                    }\r\n                    util.setStyle(f, marginDir, (margin <= 0 ? '' : margin + 'px'));\r\n                } else {\r\n                    if (shift || f.previousElementSibling) {\r\n                        cells.push(f);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // list cells\r\n            if (cells.length > 0) {\r\n                this.plugins.list.editInsideList.call(this, shift, cells);\r\n            }\r\n\r\n            this.effectNode = null;\r\n            this.setRange(sc, so, ec, eo);\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Add or remove the class name of \"body\" so that the code block is visible\r\n         */\r\n        toggleDisplayBlocks: function () {\r\n            const wysiwyg = context.element.wysiwyg;\r\n            util.toggleClass(wysiwyg, 'se-show-block');\r\n            if (util.hasClass(wysiwyg, 'se-show-block')) {\r\n                util.addClass(this._styleCommandMap.showBlocks, 'active');\r\n            } else {\r\n                util.removeClass(this._styleCommandMap.showBlocks, 'active');\r\n            }\r\n            this._resourcesStateChange();\r\n        },\r\n\r\n        /**\r\n         * @description Changes to code view or wysiwyg view\r\n         */\r\n        toggleCodeView: function () {\r\n            const isCodeView = this._variable.isCodeView;\r\n            this.controllersOff();\r\n            util.setDisabledButtons(!isCodeView, this.codeViewDisabledButtons);\r\n\r\n            if (isCodeView) {\r\n                if (!util.isNonEditable(context.element.wysiwygFrame)) this._setCodeDataToEditor();\r\n                context.element.wysiwygFrame.scrollTop = 0;\r\n                context.element.code.style.display = 'none';\r\n                context.element.wysiwygFrame.style.display = 'block';\r\n\r\n                this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\r\n                this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\r\n\r\n                if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = '0px';\r\n                \r\n                this._variable.isCodeView = false;\r\n                \r\n                if (!this._variable.isFullScreen) {\r\n                    this._notHideToolbar = false;\r\n                    if (/balloon|balloon-always/i.test(options.mode)) {\r\n                        context.element._arrow.style.display = '';\r\n                        this._isInline = false;\r\n                        this._isBalloon = true;\r\n                        event._hideToolbar();    \r\n                    }\r\n                }\r\n\r\n                this.nativeFocus();\r\n                util.removeClass(this._styleCommandMap.codeView, 'active');\r\n\r\n                // history stack\r\n                if (!util.isNonEditable(context.element.wysiwygFrame)) {\r\n                    this.history.push(false);\r\n                    this.history._resetCachingButton();\r\n                }\r\n            } else {\r\n                this._setEditorDataToCodeView();\r\n                this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\r\n                this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\r\n\r\n                if (this._variable.isFullScreen) context.element.code.style.height = '100%';\r\n                else if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = context.element.code.scrollHeight > 0 ? (context.element.code.scrollHeight + 'px') : 'auto';\r\n                \r\n                if (options.codeMirrorEditor) options.codeMirrorEditor.refresh();\r\n                \r\n                this._variable.isCodeView = true;\r\n\r\n                if (!this._variable.isFullScreen) {\r\n                    this._notHideToolbar = true;\r\n                    if (this._isBalloon) {\r\n                        context.element._arrow.style.display = 'none';\r\n                        context.element.toolbar.style.left = '';\r\n                        this._isInline = true;\r\n                        this._isBalloon = false;\r\n                        event._showToolbarInline();\r\n                    }\r\n                }\r\n                \r\n                this._variable._range = null;\r\n                context.element.code.focus();\r\n                util.addClass(this._styleCommandMap.codeView, 'active');\r\n            }\r\n\r\n            this._checkPlaceholder();\r\n            if (this.isReadOnly) util.setDisabledButtons(true, this.resizingDisabledButtons);\r\n\r\n            // user event\r\n            if (typeof functions.toggleCodeView === 'function') functions.toggleCodeView(this._variable.isCodeView, this);\r\n        },\r\n\r\n        /**\r\n         * @description Convert the data of the code view and put it in the WYSIWYG area.\r\n         * @private\r\n         */\r\n        _setCodeDataToEditor: function () {\r\n            const code_html = this._getCodeView();\r\n\r\n            if (options.fullPage) {\r\n                const parseDocument = this._parser.parseFromString(code_html, 'text/html');\r\n                const headChildren = parseDocument.head.children;\r\n\r\n                for (let i = 0, len = headChildren.length; i < len; i++) {\r\n                    if (/^script$/i.test(headChildren[i].tagName)) {\r\n                        parseDocument.head.removeChild(headChildren[i]);\r\n                        i--, len--;\r\n                    }\r\n                }\r\n\r\n                let headers = parseDocument.head.innerHTML;\r\n                if (!parseDocument.head.querySelector('link[rel=\"stylesheet\"]') || (this.options.height === 'auto' && !parseDocument.head.querySelector('style'))) {\r\n                    headers += util._setIframeCssTags(this.options);\r\n                }\r\n\r\n                this._wd.head.innerHTML = headers;\r\n                this._wd.body.innerHTML = this.convertContentsForEditor(parseDocument.body.innerHTML);\r\n\r\n                const attrs = parseDocument.body.attributes;\r\n                for (let i = 0, len = attrs.length; i < len; i++) {\r\n                    if (attrs[i].name === 'contenteditable') continue;\r\n                    this._wd.body.setAttribute(attrs[i].name, attrs[i].value);\r\n                }\r\n                if (!util.hasClass(this._wd.body, 'sun-editor-editable')) {\r\n                    const editableClasses = options._editableClass.split(' ');\r\n                    for (let i = 0; i < editableClasses.length; i++) {\r\n                        util.addClass(this._wd.body, options._editableClass[i]);\r\n                    }\r\n                }\r\n            } else {\r\n                context.element.wysiwyg.innerHTML = code_html.length > 0 ? this.convertContentsForEditor(code_html) : '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Convert the data of the WYSIWYG area and put it in the code view area.\r\n         * @private\r\n         */\r\n        _setEditorDataToCodeView: function () {\r\n            const codeContents = this.convertHTMLForCodeView(context.element.wysiwyg, false);\r\n            let codeValue = '';\r\n\r\n            if (options.fullPage) {\r\n                const attrs = util.getAttributesToString(this._wd.body, null);\r\n                codeValue = '<!DOCTYPE html>\\n<html>\\n' + this._wd.head.outerHTML.replace(/>(?!\\n)/g, '>\\n') + '<body ' + attrs + '>\\n' + codeContents + '</body>\\n</html>';\r\n            } else {\r\n                codeValue = codeContents;\r\n            }\r\n\r\n            context.element.code.style.display = 'block';\r\n            context.element.wysiwygFrame.style.display = 'none';\r\n\r\n            this._setCodeView(codeValue);\r\n        },\r\n\r\n        /**\r\n         * @description Changes to full screen or default screen\r\n         * @param {Element|null} element full screen button\r\n         */\r\n        toggleFullScreen: function (element) {\r\n            const topArea = context.element.topArea;\r\n            const toolbar = context.element.toolbar;\r\n            const editorArea = context.element.editorArea;\r\n            const wysiwygFrame = context.element.wysiwygFrame;\r\n            const code = context.element.code;\r\n            const _var = this._variable;\r\n            this.controllersOff();\r\n            \r\n            const wasToolbarHidden = (toolbar.style.display === 'none' || (this._isInline && !this._inlineToolbarAttr.isShow));\r\n\r\n            if (!_var.isFullScreen) {\r\n                _var.isFullScreen = true;\r\n                \r\n                _var._fullScreenAttrs.inline = this._isInline;\r\n                _var._fullScreenAttrs.balloon = this._isBalloon;\r\n\r\n                if (this._isInline || this._isBalloon) {\r\n                    this._isInline = false;\r\n                    this._isBalloon = false;\r\n                }\r\n                \r\n                if (!!options.toolbarContainer) context.element.relative.insertBefore(toolbar, editorArea);\r\n\r\n                topArea.style.position = 'fixed';\r\n                topArea.style.top = '0';\r\n                topArea.style.left = '0';\r\n                topArea.style.width = '100%';\r\n                topArea.style.maxWidth = '100%';\r\n                topArea.style.height = '100%';\r\n                topArea.style.zIndex = '2147483647';\r\n\r\n                if (context.element._stickyDummy.style.display !== ('none' && '')) {\r\n                    _var._fullScreenAttrs.sticky = true;\r\n                    context.element._stickyDummy.style.display = 'none';\r\n                    util.removeClass(toolbar, 'se-toolbar-sticky');\r\n                }\r\n\r\n                _var._bodyOverflow = _d.body.style.overflow;\r\n                _d.body.style.overflow = 'hidden';\r\n\r\n                _var._editorAreaOriginCssText = editorArea.style.cssText;\r\n                _var._wysiwygOriginCssText = wysiwygFrame.style.cssText;\r\n                _var._codeOriginCssText = code.style.cssText;\r\n\r\n                editorArea.style.cssText = toolbar.style.cssText = '';\r\n                wysiwygFrame.style.cssText = (wysiwygFrame.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\r\n                code.style.cssText = (code.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\r\n                toolbar.style.width = wysiwygFrame.style.height = code.style.height = '100%';\r\n                toolbar.style.position = 'relative';\r\n                toolbar.style.display = 'block';\r\n\r\n                _var.innerHeight_fullScreen = (_w.innerHeight - toolbar.offsetHeight);\r\n                editorArea.style.height = (_var.innerHeight_fullScreen - options.fullScreenOffset) + 'px';\r\n\r\n                if (element) util.changeElement(element.firstElementChild, icons.reduction);\r\n\r\n                if (options.iframe && options.height === 'auto') {\r\n                    editorArea.style.overflow = 'auto';\r\n                    this._iframeAutoHeight();\r\n                }\r\n\r\n                context.element.topArea.style.marginTop = options.fullScreenOffset + 'px';\r\n                util.addClass(this._styleCommandMap.fullScreen, 'active');\r\n            } else {\r\n                _var.isFullScreen = false;\r\n\r\n                wysiwygFrame.style.cssText = _var._wysiwygOriginCssText;\r\n                code.style.cssText = _var._codeOriginCssText;\r\n                toolbar.style.cssText = '';\r\n                editorArea.style.cssText = _var._editorAreaOriginCssText;\r\n                topArea.style.cssText = _var._originCssText;\r\n                _d.body.style.overflow = _var._bodyOverflow;\r\n\r\n                if (options.height === 'auto' && !options.codeMirrorEditor) event._codeViewAutoHeight();\r\n\r\n                if (!!options.toolbarContainer) options.toolbarContainer.appendChild(toolbar);\r\n\r\n                if (options.stickyToolbar > -1) {\r\n                    util.removeClass(toolbar, 'se-toolbar-sticky');\r\n                }\r\n\r\n                if (_var._fullScreenAttrs.sticky && !options.toolbarContainer) {\r\n                    _var._fullScreenAttrs.sticky = false;\r\n                    context.element._stickyDummy.style.display = 'block';\r\n                    util.addClass(toolbar, \"se-toolbar-sticky\");\r\n                }\r\n\r\n                this._isInline = _var._fullScreenAttrs.inline;\r\n                this._isBalloon = _var._fullScreenAttrs.balloon;\r\n                if (this._isInline) event._showToolbarInline();\r\n                if (!!options.toolbarContainer) util.removeClass(toolbar, 'se-toolbar-balloon');\r\n\r\n                event.onScroll_window();\r\n                if (element) util.changeElement(element.firstElementChild, icons.expansion);\r\n\r\n                context.element.topArea.style.marginTop = '';\r\n                util.removeClass(this._styleCommandMap.fullScreen, 'active');\r\n            }\r\n\r\n            if (wasToolbarHidden) functions.toolbar.hide();\r\n\r\n            // user event\r\n            if (typeof functions.toggleFullScreen === 'function') functions.toggleFullScreen(this._variable.isFullScreen, this);\r\n        },\r\n\r\n        /**\r\n         * @description Prints the current contents of the editor.\r\n         */\r\n        print: function () {\r\n            const iframe = util.createElement('IFRAME');\r\n            iframe.style.display = 'none';\r\n            _d.body.appendChild(iframe);\r\n\r\n            const contentsHTML = options.printTemplate ? options.printTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\r\n            const printDocument = util.getIframeDocument(iframe);\r\n            const wDoc = this._wd;\r\n\r\n            if (options.iframe) {\r\n                const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\r\n\r\n                printDocument.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    wDoc.head.innerHTML +\r\n                    '</head>' +\r\n                    '<body ' + arrts + '>' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            } else {\r\n                const links = _d.head.getElementsByTagName('link');\r\n                const styles = _d.head.getElementsByTagName('style');\r\n                let linkHTML = '';\r\n                for (let i = 0, len = links.length; i < len; i++) {\r\n                    linkHTML += links[i].outerHTML;\r\n                }\r\n                for (let i = 0, len = styles.length; i < len; i++) {\r\n                    linkHTML += styles[i].outerHTML;\r\n                }\r\n\r\n                printDocument.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    linkHTML +\r\n                    '</head>' +\r\n                    '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\">' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            }\r\n\r\n            this.showLoading();\r\n            _w.setTimeout(function () {\r\n                try {\r\n                    iframe.focus();\r\n                    // IE or Edge\r\n                    if (util.isIE_Edge || !!_d.documentMode || !!_w.StyleMedia) {\r\n                        try {\r\n                            iframe.contentWindow.document.execCommand('print', false, null);\r\n                        } catch (e) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    } else {\r\n                        // Other browsers\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                } catch (error) {\r\n                    throw Error('[SUNEDITOR.core.print.fail] error: ' + error);\r\n                } finally {\r\n                    core.closeLoading();\r\n                    util.removeItem(iframe);\r\n                }\r\n            }, 1000);\r\n        },\r\n\r\n        /**\r\n         * @description Open the preview window.\r\n         */\r\n        preview: function () {\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.controllersOff();\r\n            \r\n            const contentsHTML = options.previewTemplate ? options.previewTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\r\n            const windowObject = _w.open('', '_blank');\r\n            windowObject.mimeType = 'text/html';\r\n            const wDoc = this._wd;\r\n\r\n            if (options.iframe) {\r\n                const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\r\n\r\n                windowObject.document.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    wDoc.head.innerHTML +\r\n                    '<style>body {overflow:auto !important; margin: 10px auto !important; height:auto !important; outline:1px dashed #ccc;}</style>' +\r\n                    '</head>' +\r\n                    '<body ' + arrts + '>' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            } else {\r\n                const links = _d.head.getElementsByTagName('link');\r\n                const styles = _d.head.getElementsByTagName('style');\r\n                let linkHTML = '';\r\n                for (let i = 0, len = links.length; i < len; i++) {\r\n                    linkHTML += links[i].outerHTML;\r\n                }\r\n                for (let i = 0, len = styles.length; i < len; i++) {\r\n                    linkHTML += styles[i].outerHTML;\r\n                }\r\n                \r\n                windowObject.document.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    '<meta charset=\"utf-8\" />' +\r\n                    '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">' +\r\n                    '<title>' + lang.toolbar.preview + '</title>' +\r\n                    linkHTML +\r\n                    '</head>' +\r\n                    '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\" style=\"margin:10px auto !important; height:auto !important; outline:1px dashed #ccc;\">' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set direction to \"rtl\" or \"ltr\".\r\n         * @param {String} dir \"rtl\" or \"ltr\"\r\n         */\r\n        setDir: function (dir) {\r\n            const rtl = dir === 'rtl';\r\n            const changeDir = this._prevRtl !== rtl;\r\n            this._prevRtl = options.rtl = rtl;\r\n\r\n            if (changeDir) {\r\n                // align buttons\r\n                if (this.plugins.align) {\r\n                    this.plugins.align.exchangeDir.call(this);\r\n                }\r\n                // indent buttons\r\n                if (context.tool.indent) util.changeElement(context.tool.indent.firstElementChild, icons.indent);\r\n                if (context.tool.outdent) util.changeElement(context.tool.outdent.firstElementChild, icons.outdent);\r\n            }\r\n\r\n            const el = context.element;\r\n            if (rtl) {\r\n                util.addClass(el.topArea, 'se-rtl');\r\n                util.addClass(el.wysiwygFrame, 'se-rtl');\r\n            } else {\r\n                util.removeClass(el.topArea, 'se-rtl');\r\n                util.removeClass(el.wysiwygFrame, 'se-rtl');\r\n            }\r\n\r\n            const lineNodes = util.getListChildren(el.wysiwyg, function (current) {\r\n                return util.isFormatElement(current) && (current.style.marginRight || current.style.marginLeft || current.style.textAlign);\r\n            });\r\n\r\n            for (let i = 0, len = lineNodes.length, n, l, r; i < len; i++) {\r\n                n = lineNodes[i];\r\n                // indent margin\r\n                r = n.style.marginRight;\r\n                l = n.style.marginLeft;\r\n                if (r || l) {\r\n                    n.style.marginRight = l;\r\n                    n.style.marginLeft = r;\r\n                }\r\n                // text align\r\n                r = n.style.textAlign;\r\n                if (r === 'left') n.style.textAlign = 'right';\r\n                else if (r === 'right') n.style.textAlign = 'left';\r\n            }\r\n\r\n            const tool = context.tool;\r\n            if (tool.dir) {\r\n                util.changeTxt(tool.dir.querySelector('.se-tooltip-text'), lang.toolbar[options.rtl ? 'dir_ltr' : 'dir_rtl']);\r\n                util.changeElement(tool.dir.firstElementChild, icons[options.rtl ? 'dir_ltr' : 'dir_rtl']);\r\n            }\r\n\r\n            if (tool.dir_ltr) {\r\n                if (rtl) util.removeClass(tool.dir_ltr, 'active');\r\n                else util.addClass(tool.dir_ltr, 'active');\r\n            }\r\n\r\n            if (tool.dir_rtl) {\r\n                if (rtl) util.addClass(tool.dir_rtl, 'active');\r\n                else util.removeClass(tool.dir_rtl, 'active');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Sets the HTML string\r\n         * @param {String|undefined} html HTML string\r\n         */\r\n        setContents: function (html) {\r\n            this.removeRange();\r\n            \r\n            const convertValue = (html === null || html === undefined) ? '' : this.convertContentsForEditor(html);\r\n            this._resetComponents();\r\n\r\n            if (!this._variable.isCodeView) {\r\n                context.element.wysiwyg.innerHTML = convertValue;\r\n                // history stack\r\n                this.history.push(false);\r\n            } else {\r\n                const value = this.convertHTMLForCodeView(convertValue, false);\r\n                this._setCodeView(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Sets the contents of the iframe's head tag and body tag when using the \"iframe\" or \"fullPage\" option.\r\n         * @param {Object} ctx { head: HTML string, body: HTML string}\r\n         */\r\n        setIframeContents: function (ctx) {\r\n            if (!options.iframe) return false;\r\n            if (ctx.head) this._wd.head.innerHTML = ctx.head.replace(/<script[\\s\\S]*>[\\s\\S]*<\\/script>/gi, '');\r\n            if (ctx.body) this._wd.body.innerHTML = this.convertContentsForEditor(ctx.body);\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current contents\r\n         * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n         * @returns {Object}\r\n         */\r\n        getContents: function (onlyContents) {\r\n            const contents = this.convertHTMLForCodeView(context.element.wysiwyg, true);\r\n            const renderHTML = util.createElement('DIV');\r\n            renderHTML.innerHTML = contents;\r\n\r\n            const figcaptions = util.getListChildren(renderHTML, function (current) {\r\n                return /FIGCAPTION/i.test(current.nodeName);\r\n            });\r\n\r\n            for (let i = 0, len = figcaptions.length; i < len; i++) {\r\n                figcaptions[i].removeAttribute('contenteditable');\r\n            }\r\n\r\n            if (options.fullPage && !onlyContents) {\r\n                const attrs = util.getAttributesToString(this._wd.body, ['contenteditable']);\r\n                return '<!DOCTYPE html><html>' + this._wd.head.outerHTML + '<body ' + attrs + '>' + renderHTML.innerHTML + '</body></html>';\r\n            } else {\r\n                return renderHTML.innerHTML;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Returns HTML string according to tag type and configuration.\r\n         * Use only \"cleanHTML\"\r\n         * @param {Node} node Node\r\n         * @param {Boolean} requireFormat If true, text nodes that do not have a format node is wrapped with the format tag.\r\n         * @private\r\n         */\r\n        _makeLine: function (node, requireFormat) {\r\n            const defaultTag = options.defaultTag;\r\n            // element\r\n            if (node.nodeType === 1) {\r\n                if (util._disallowedTags(node)) return '';\r\n                if (!requireFormat || (util.isFormatElement(node) || util.isRangeFormatElement(node) || util.isComponent(node) || util.isMedia(node) || (util.isAnchor(node) && util.isMedia(node.firstElementChild)))) {\r\n                    return node.outerHTML;\r\n                } else {\r\n                    return '<' + defaultTag + '>' + node.outerHTML + '</' + defaultTag + '>';\r\n                }\r\n            }\r\n            // text\r\n            if (node.nodeType === 3) {\r\n                if (!requireFormat) return util._HTMLConvertor(node.textContent);\r\n                const textArray = node.textContent.split(/\\n/g);\r\n                let html = '';\r\n                for (let i = 0, tLen = textArray.length, text; i < tLen; i++) {\r\n                    text = textArray[i].trim();\r\n                    if (text.length > 0) html += '<' + defaultTag + '>' + util._HTMLConvertor(text) + '</' + defaultTag + '>';\r\n                }\r\n                return html;\r\n            }\r\n            // comments\r\n            if (node.nodeType === 8 && this._allowHTMLComments) {\r\n                return '<!--' + node.textContent.trim() + '-->';\r\n            }\r\n\r\n            return '';\r\n        },\r\n\r\n        /**\r\n         * @description Removes attribute values such as style and converts tags that do not conform to the \"html5\" standard.\r\n         * @param {String} text \r\n         * @returns {String} HTML string\r\n         * @private\r\n         */\r\n        _tagConvertor: function (text) {\r\n            if (!this._disallowedTextTagsRegExp) return text;\r\n\r\n            const ec = options._textTagsMap;\r\n            return text.replace(this._disallowedTextTagsRegExp, function (m, t, n, p) {\r\n                return t + (typeof ec[n] === 'string' ? ec[n] : n) + (p ? ' ' + p : '');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @description Delete disallowed tags\r\n         * @param {String} html HTML string\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _deleteDisallowedTags: function (html) {\r\n            return html\r\n                .replace(/\\n/g, '')\r\n                .replace(/<(script|style)[\\s\\S]*>[\\s\\S]*<\\/(script|style)>/gi, '')\r\n                .replace(/<[a-z0-9]+\\:[a-z0-9]+[^>^\\/]*>[^>]*<\\/[a-z0-9]+\\:[a-z0-9]+>/gi, '')\r\n                .replace(this.editorTagsWhitelistRegExp, '')\r\n                .replace(this.editorTagsBlacklistRegExp, '');\r\n        },\r\n\r\n        /**\r\n         * @description Tag and tag attribute check RegExp function. (used by \"cleanHTML\" and \"convertContentsForEditor\")\r\n         * @param {Boolean} lowLevelCheck Row level check\r\n         * @param {String} m RegExp value\r\n         * @param {String} t RegExp value\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _cleanTags: function (lowLevelCheck, m, t) {\r\n            if (/^<[a-z0-9]+\\:[a-z0-9]+/i.test(m)) return m;\r\n\r\n            let v = null;\r\n            const tagName = t.match(/(?!<)[a-zA-Z0-9\\-]+/)[0].toLowerCase();\r\n\r\n            // blacklist\r\n            const bAttr = this._attributesTagsBlacklist[tagName];\r\n            if (bAttr) m = m.replace(bAttr, '');\r\n            else m = m.replace(this._attributesBlacklistRegExp, '');\r\n\r\n            // whitelist\r\n            const wAttr = this._attributesTagsWhitelist[tagName];\r\n            if (wAttr) v = m.match(wAttr);\r\n            else v = m.match(this._attributesWhitelistRegExp);\r\n\r\n            // anchor\r\n            if (!lowLevelCheck || /<a\\b/i.test(t)) {\r\n                const sv = m.match(/(?:(?:id|name)\\s*=\\s*(?:\"|')[^\"']*(?:\"|'))/g);\r\n                if (sv) {\r\n                    if (!v) v = [];\r\n                    v.push(sv[0]);\r\n                }\r\n            }\r\n\r\n            // span\r\n            if ((!lowLevelCheck || /<span/i.test(t)) && (!v || !/style=/i.test(v.toString()))) {\r\n                const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\r\n                if (sv) {\r\n                    if (!v) v = [];\r\n                    v.push(sv[0]);\r\n                }\r\n            }\r\n\r\n            // img\r\n            if (/<img/i.test(t)) {\r\n                let w = '', h = '';\r\n                const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\r\n                if (!v) v = [];\r\n                if (sv) {\r\n                    w = sv[0].match(/width:(.+);/);\r\n                    w = util.getNumber(w ? w[1] : '', -1) || '';\r\n                    h = sv[0].match(/height:(.+);/);\r\n                    h = util.getNumber(h ? h[1] : '', -1) || '';\r\n                } \r\n                \r\n                if (!w || !h) {\r\n                    const avw = m.match(/width\\s*=\\s*((?:\"|')[^\"']*(?:\"|'))/);\r\n                    const avh = m.match(/height\\s*=\\s*((?:\"|')[^\"']*(?:\"|'))/);\r\n                    if (avw || avh) {\r\n                        w = !w ? util.getNumber(avw ? avw[1] : '') || '' : w;\r\n                        h = !h ? util.getNumber(avh ? avh[1] : '') || '' : h;\r\n                    }\r\n                }\r\n                v.push('data-origin=\"' + (w + ',' + h) + '\"');\r\n            }\r\n\r\n            if (v) {\r\n                for (let i = 0, len = v.length; i < len; i++) {\r\n                    if (lowLevelCheck && /^class=\"(?!(__se__|se-|katex))/.test(v[i])) continue;\r\n                    t += ' ' + (/^(?:href|src)\\s*=\\s*('|\"|\\s)*javascript\\s*\\:/i.test(v[i]) ? '' : v[i]);\r\n                }\r\n            }\r\n\r\n            return t;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the clean HTML code for editor\r\n         * @param {String} html HTML string\r\n         * @param {String|RegExp|null} whitelist Regular expression of allowed tags.\r\n         * RegExp object is create by util.createTagsWhitelist method. (core.pasteTagsWhitelistRegExp)\r\n         * @param {String|RegExp|null} blacklist Regular expression of disallowed tags.\r\n         * RegExp object is create by util.createTagsBlacklist method. (core.pasteTagsBlacklistRegExp)\r\n         * @returns {String}\r\n         */\r\n        cleanHTML: function (html, whitelist, blacklist) {\r\n            html = this._deleteDisallowedTags(this._parser.parseFromString(html, 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true));\r\n\r\n            const dom = _d.createRange().createContextualFragment(html);\r\n            try {\r\n                util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, true);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.cleanHTML.consistencyCheck.fail] ' + error);\r\n            }\r\n            \r\n            if (this.managedTagsInfo && this.managedTagsInfo.query) {\r\n                const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\r\n                for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\r\n                    classList = [].slice.call(textCompList[i].classList);\r\n                    for (let c = 0, cLen = classList.length; c < cLen; c++) {\r\n                        initMethod = this.managedTagsInfo.map[classList[c]];\r\n                        if (initMethod) {\r\n                            initMethod(textCompList[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const domTree = dom.childNodes;\r\n            let cleanHTML = '';\r\n            let requireFormat = false;\r\n\r\n            for (let i = 0, len = domTree.length, t; i < len; i++) {\r\n                t = domTree[i];\r\n                if (t.nodeType === 1 && !util.isTextStyleElement(t) && !util.isBreak(t) && !util._disallowedTags(t)) {\r\n                    requireFormat = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = domTree.length; i < len; i++) {\r\n                cleanHTML += this._makeLine(domTree[i], requireFormat);\r\n            }\r\n\r\n            cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\r\n            if (!cleanHTML) {\r\n                cleanHTML = html;\r\n            } else {\r\n                if (whitelist) cleanHTML = cleanHTML.replace(typeof whitelist === 'string' ? util.createTagsWhitelist(whitelist) : whitelist, '');\r\n                if (blacklist) cleanHTML = cleanHTML.replace(typeof blacklist === 'string' ? util.createTagsBlacklist(blacklist) : blacklist, '');\r\n            }\r\n\r\n            return this._tagConvertor(cleanHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Converts contents into a format that can be placed in an editor\r\n         * @param {String} contents contents\r\n         * @returns {String}\r\n         */\r\n        convertContentsForEditor: function (contents) {\r\n            contents = this._deleteDisallowedTags(this._parser.parseFromString(contents, 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, false));\r\n            const dom = _d.createRange().createContextualFragment(contents);\r\n\r\n            try {\r\n                util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, false);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.convertContentsForEditor.consistencyCheck.fail] ' + error);\r\n            }\r\n\r\n            if (this.managedTagsInfo && this.managedTagsInfo.query) {\r\n                const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\r\n                for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\r\n                    classList = [].slice.call(textCompList[i].classList);\r\n                    for (let c = 0, cLen = classList.length; c < cLen; c++) {\r\n                        initMethod = this.managedTagsInfo.map[classList[c]];\r\n                        if (initMethod) {\r\n                            initMethod(textCompList[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            const domTree = dom.childNodes;\r\n            let cleanHTML = '';\r\n            for (let i = 0, t, p; i < domTree.length; i++) {\r\n                t = domTree[i];\r\n                if (!util.isFormatElement(t) && !util.isComponent(t) && !util.isMedia(t)) {\r\n                    if (!p) p = util.createElement(options.defaultTag);\r\n                    p.appendChild(t);\r\n                    i--;\r\n                    if (domTree[i + 1] && !util.isFormatElement(domTree[i + 1])) {\r\n                        continue;\r\n                    } else {\r\n                        t = p;\r\n                        p = null;\r\n                    }\r\n                }\r\n                cleanHTML += this._makeLine(t, true);\r\n            }\r\n\r\n            if (cleanHTML.length === 0) return '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n\r\n            cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\r\n            return this._tagConvertor(cleanHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Converts wysiwyg area element into a format that can be placed in an editor of code view mode\r\n         * @param {Element|String} html WYSIWYG element (context.element.wysiwyg) or HTML string.\r\n         * @param {Boolean} comp If true, does not line break and indentation of tags.\r\n         * @returns {String}\r\n         */\r\n        convertHTMLForCodeView: function (html, comp) {\r\n            let returnHTML = '';\r\n            const wRegExp = _w.RegExp;\r\n            const brReg = new wRegExp('^(BLOCKQUOTE|PRE|TABLE|THEAD|TBODY|TR|TH|TD|OL|UL|IMG|IFRAME|VIDEO|AUDIO|FIGURE|FIGCAPTION|HR|BR|CANVAS|SELECT)$', 'i');\r\n            const wDoc = typeof html === 'string' ? _d.createRange().createContextualFragment(html) : html;\r\n            const isFormat = function (current) { return this.isFormatElement(current) || this.isComponent(current); }.bind(util);\r\n            const brChar = comp ? '' : '\\n';\r\n\r\n            let indentSize = comp ? 0 : this._variable.codeIndent * 1;\r\n            indentSize = indentSize > 0 ? new _w.Array(indentSize + 1).join(' ') : '';\r\n\r\n            (function recursionFunc (element, indent) {\r\n                const children = element.childNodes;\r\n                const elementRegTest = brReg.test(element.nodeName);\r\n                const elementIndent = (elementRegTest ? indent : '');\r\n\r\n                for (let i = 0, len = children.length, node, br, lineBR, nodeRegTest, tag, tagIndent; i < len; i++) {\r\n                    node = children[i];\r\n                    nodeRegTest = brReg.test(node.nodeName);\r\n                    br = nodeRegTest ? brChar : '';\r\n                    lineBR = isFormat(node) && !elementRegTest && !/^(TH|TD)$/i.test(element.nodeName) ? brChar : '';\r\n\r\n                    if (node.nodeType === 8) {\r\n                        returnHTML += '\\n<!-- ' + node.textContent.trim() + ' -->' + br;\r\n                        continue;\r\n                    }\r\n                    if (node.nodeType === 3) {\r\n                        if (!util.isList(node.parentElement)) returnHTML += util._HTMLConvertor(/^\\n+$/.test(node.data) ? '' : node.data);\r\n                        continue;\r\n                    }\r\n                    if (node.childNodes.length === 0) {\r\n                        returnHTML += (/^HR$/i.test(node.nodeName) ? brChar : '') + (/^PRE$/i.test(node.parentElement.nodeName) && /^BR$/i.test(node.nodeName) ? '' : elementIndent) + node.outerHTML + br;\r\n                        continue;\r\n                    }\r\n\r\n                    if (!node.outerHTML) { // IE\r\n                        returnHTML += new _w.XMLSerializer().serializeToString(node);\r\n                    } else {\r\n                        tag = node.nodeName.toLowerCase();\r\n                        tagIndent = elementIndent || nodeRegTest ? indent : '';\r\n                        returnHTML += (lineBR || (elementRegTest ? '' : br)) + tagIndent + node.outerHTML.match(wRegExp('<' + tag + '[^>]*>', 'i'))[0] + br;\r\n                        recursionFunc(node, indent + indentSize, '');\r\n                        returnHTML += (/\\n$/.test(returnHTML) ? tagIndent : '') + '</' + tag + '>' + (lineBR || br || elementRegTest ? brChar : '' || /^(TH|TD)$/i.test(node.nodeName) ? brChar : '');\r\n                    }\r\n                }\r\n            }(wDoc, ''));\r\n\r\n            return returnHTML.trim() + brChar;\r\n        },\r\n\r\n        /**\r\n         * @description Add an event to document.\r\n         * When created as an Iframe, the same event is added to the document in the Iframe.\r\n         * @param {String} type Event type\r\n         * @param {Function} listener Event listener\r\n         * @param {Boolean} useCapture Use event capture\r\n         */\r\n        addDocEvent: function (type, listener, useCapture) {\r\n            _d.addEventListener(type, listener, useCapture);\r\n            if (options.iframe) {\r\n                this._wd.addEventListener(type, listener);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Remove events from document.\r\n         * When created as an Iframe, the event of the document inside the Iframe is also removed.\r\n         * @param {String} type Event type\r\n         * @param {Function} listener Event listener\r\n         */\r\n        removeDocEvent: function (type, listener) {\r\n            _d.removeEventListener(type, listener);\r\n            if (options.iframe) {\r\n                this._wd.removeEventListener(type, listener);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description The current number of characters is counted and displayed.\r\n         * @param {String} inputText Text added.\r\n         * @returns {Boolean}\r\n         * @private\r\n         */\r\n        _charCount: function (inputText) {\r\n            const maxCharCount = options.maxCharCount;\r\n            const countType = options.charCounterType;\r\n            let nextCharCount = 0;\r\n            if (!!inputText) nextCharCount = this.getCharLength(inputText, countType);\r\n\r\n            this._setCharCount();\r\n\r\n            if (maxCharCount > 0) {\r\n                let over = false;\r\n                const count = functions.getCharCount(countType);\r\n                \r\n                if (count > maxCharCount) {\r\n                    over = true;\r\n                    if (nextCharCount > 0) {\r\n                        this._editorRange();\r\n                        const range = this.getRange();\r\n                        const endOff = range.endOffset - 1;\r\n                        const text = this.getSelectionNode().textContent;\r\n                        const slicePosition = range.endOffset - (count - maxCharCount);\r\n    \r\n                        this.getSelectionNode().textContent = text.slice(0, slicePosition < 0 ? 0 : slicePosition) + text.slice(range.endOffset, text.length);\r\n                        this.setRange(range.endContainer, endOff, range.endContainer, endOff);\r\n                    }\r\n                } else if ((count + nextCharCount) > maxCharCount) {\r\n                    over = true;\r\n                }\r\n\r\n                if (over) {\r\n                    this._callCounterBlink();\r\n                    if (nextCharCount > 0) return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description When \"element\" is added, if it is greater than \"options.maxCharCount\", false is returned.\r\n         * @param {Node|String} element Element node or String.\r\n         * @param {String|null} charCounterType charCounterType. If it is null, the options.charCounterType\r\n         * @returns {Boolean}\r\n         */\r\n        checkCharCount: function (element, charCounterType) {\r\n            if (options.maxCharCount) {\r\n                const countType = charCounterType || options.charCounterType;\r\n                const length = this.getCharLength((typeof element === 'string' ? element : (this._charTypeHTML && element.nodeType === 1) ? element.outerHTML : element.textContent), countType);\r\n                if (length > 0 && length + functions.getCharCount(countType) > options.maxCharCount) {\r\n                    this._callCounterBlink();\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description Get the length of the content.\r\n         * Depending on the option, the length of the character is taken. (charCounterType)\r\n         * @param {String} content Content to count\r\n         * @param {String} charCounterType options.charCounterType\r\n         * @returns {Number}\r\n         */\r\n        getCharLength: function (content, charCounterType) {\r\n            return /byte/.test(charCounterType) ? util.getByteLength(content) : content.length;\r\n        },\r\n\r\n        /**\r\n         * @description Set the char count to charCounter element textContent.\r\n         * @private\r\n         */\r\n        _setCharCount: function () {\r\n            if (context.element.charCounter) {\r\n                _w.setTimeout(function () { context.element.charCounter.textContent = functions.getCharCount(options.charCounterType); });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description The character counter blinks.\r\n         * @private\r\n         */\r\n        _callCounterBlink: function () {\r\n            const charWrapper = context.element.charWrapper;\r\n            if (charWrapper && !util.hasClass(charWrapper, 'se-blink')) {\r\n                util.addClass(charWrapper, 'se-blink');\r\n                _w.setTimeout(function () {\r\n                    util.removeClass(charWrapper, 'se-blink');\r\n                }, 600);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Check the components such as image and video and modify them according to the format.\r\n         * @private\r\n         */\r\n        _checkComponents: function () {\r\n            for (let i = 0, len = this._fileInfoPluginsCheck.length; i < len; i++) {\r\n                this._fileInfoPluginsCheck[i]();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Initialize the information of the components.\r\n         * @private\r\n         */\r\n        _resetComponents: function () {\r\n            for (let i = 0, len = this._fileInfoPluginsReset.length; i < len; i++) {\r\n                this._fileInfoPluginsReset[i]();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set method in the code view area\r\n         * @param {String} value HTML string\r\n         * @private\r\n         */\r\n        _setCodeView: function (value) {\r\n            if (options.codeMirrorEditor) {\r\n                options.codeMirrorEditor.getDoc().setValue(value);\r\n            } else {\r\n                context.element.code.value = value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Get method in the code view area\r\n         * @private\r\n         */\r\n        _getCodeView: function () {\r\n            return options.codeMirrorEditor ? options.codeMirrorEditor.getDoc().getValue() : context.element.code.value;\r\n        },\r\n\r\n        /**\r\n         * @description remove class, display text.\r\n         * @param {Array|null} ignoredList Igonred button list\r\n         */\r\n        _setKeyEffect: function (ignoredList) {\r\n            const commandMap = this.commandMap;\r\n            const activePlugins = this.activePlugins;\r\n\r\n            for (let key in commandMap) {\r\n                if (ignoredList.indexOf(key) > -1 || !util.hasOwn(commandMap, key)) continue;\r\n                if (activePlugins.indexOf(key) > -1) {\r\n                    plugins[key].active.call(this, null);\r\n                } else if (commandMap.OUTDENT && /^OUTDENT$/i.test(key)) {\r\n                    if (!util.isImportantDisabled(commandMap.OUTDENT)) commandMap.OUTDENT.setAttribute('disabled', true);\r\n                } else if (commandMap.INDENT && /^INDENT$/i.test(key)) {\r\n                    if (!util.isImportantDisabled(commandMap.INDENT)) commandMap.INDENT.removeAttribute('disabled');\r\n                } else {\r\n                    util.removeClass(commandMap[key], 'active');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Initializ core variable\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _init: function (reload, _initHTML) {\r\n            const wRegExp = _w.RegExp;\r\n            this._ww = options.iframe ? context.element.wysiwygFrame.contentWindow : _w;\r\n            this._wd = _d;\r\n            this._charTypeHTML = options.charCounterType === 'byte-html';\r\n            this.wwComputedStyle = _w.getComputedStyle(context.element.wysiwyg);\r\n\r\n            if (!options.iframe && typeof _w.ShadowRoot === 'function') {\r\n                let child = context.element.wysiwygFrame;\r\n                while (child) {\r\n                    if (child.shadowRoot) {\r\n                        this._shadowRoot = child.shadowRoot;\r\n                        break;\r\n                    } else if (child instanceof _w.ShadowRoot) {\r\n                        this._shadowRoot = child;\r\n                        break;\r\n                    }\r\n                    child = child.parentNode;\r\n                }\r\n                if (this._shadowRoot) this._shadowRootControllerEventTarget = [];\r\n            }\r\n\r\n            // set disallow text nodes\r\n            const disallowTextTags = _w.Object.keys(options._textTagsMap);\r\n            const allowTextTags = !options.addTagsWhitelist ? [] : options.addTagsWhitelist.split('|').filter(function (v) { return /b|i|ins|s|strike/i.test(v); });\r\n            for (let i = 0; i < allowTextTags.length; i++) {\r\n                disallowTextTags.splice(disallowTextTags.indexOf(allowTextTags[i].toLowerCase()), 1);\r\n            }\r\n            this._disallowedTextTagsRegExp = disallowTextTags.length === 0 ? null : new wRegExp('(<\\\\/?)(' + disallowTextTags.join('|') + ')\\\\b\\\\s*([^>^<]+)?\\\\s*(?=>)', 'gi');\r\n\r\n            // set whitelist\r\n            const getRegList = function (str, str2) { return !str ? '^' : (str === '*' ? '[a-z-]+' : (!str2 ? str : (str + '|' + str2))); };\r\n            // tags\r\n            const defaultAttr = 'contenteditable|colspan|rowspan|target|href|download|rel|src|alt|class|type|controls|data-format|data-size|data-file-size|data-file-name|data-origin|data-align|data-image-link|data-rotate|data-proportion|data-percentage|origin-size|data-exp|data-font-size';\r\n            this._allowHTMLComments = options._editorTagsWhitelist.indexOf('//') > -1 || options._editorTagsWhitelist === '*';\r\n            // html check\r\n            this._htmlCheckWhitelistRegExp = new wRegExp('^(' + getRegList(options._editorTagsWhitelist.replace('|//', ''), '') + ')$', 'i');\r\n            this._htmlCheckBlacklistRegExp = new wRegExp('^(' + (options.tagsBlacklist || '^') + ')$', 'i');\r\n            // tags\r\n            this.editorTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options._editorTagsWhitelist.replace('|//', '|<!--|-->'), ''));\r\n            this.editorTagsBlacklistRegExp = util.createTagsBlacklist(options.tagsBlacklist.replace('|//', '|<!--|-->'));\r\n            // paste tags\r\n            this.pasteTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options.pasteTagsWhitelist, ''));\r\n            this.pasteTagsBlacklistRegExp = util.createTagsBlacklist(options.pasteTagsBlacklist);\r\n            // attributes\r\n            const regEndStr = '\\\\s*=\\\\s*(\\\")[^\\\"]*\\\\1';\r\n            const _wAttr = options.attributesWhitelist;\r\n            let tagsAttr = {};\r\n            let allAttr = '';\r\n            if (!!_wAttr) {\r\n                for (let k in _wAttr) {\r\n                    if (!util.hasOwn(_wAttr, k) || /^on[a-z]+$/i.test(_wAttr[k])) continue;\r\n                    if (k === 'all') {\r\n                        allAttr = getRegList(_wAttr[k], defaultAttr);\r\n                    } else {\r\n                        tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_wAttr[k], '') + ')' + regEndStr, 'ig');\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._attributesWhitelistRegExp = new wRegExp('\\\\s(?:' + (allAttr || defaultAttr) + ')' + regEndStr, 'ig');\r\n            this._attributesTagsWhitelist = tagsAttr;\r\n\r\n            // blacklist\r\n            const _bAttr = options.attributesBlacklist;\r\n            tagsAttr = {};\r\n            allAttr = '';\r\n            if (!!_bAttr) {\r\n                for (let k in _bAttr) {\r\n                    if (!util.hasOwn(_bAttr, k)) continue;\r\n                    if (k === 'all') {\r\n                        allAttr = getRegList(_bAttr[k], '');\r\n                    } else {\r\n                        tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_bAttr[k], '') + ')' + regEndStr, 'ig');\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._attributesBlacklistRegExp = new wRegExp('\\\\s(?:' + (allAttr || '^') + ')' + regEndStr, 'ig');\r\n            this._attributesTagsBlacklist = tagsAttr;\r\n\r\n            // set modes\r\n            this._isInline = /inline/i.test(options.mode);\r\n            this._isBalloon = /balloon|balloon-always/i.test(options.mode);\r\n            this._isBalloonAlways = /balloon-always/i.test(options.mode);\r\n\r\n            // caching buttons\r\n            this._cachingButtons();\r\n\r\n            // file components\r\n            this._fileInfoPluginsCheck = [];\r\n            this._fileInfoPluginsReset = [];\r\n\r\n            // text components\r\n            this.managedTagsInfo = { query: '', map: {} };\r\n            const managedClass = [];\r\n\r\n            // Command and file plugins registration\r\n            this.activePlugins = [];\r\n            this._fileManager.tags = [];\r\n            this._fileManager.pluginMap = {};\r\n\r\n            let filePluginRegExp = [];\r\n            let plugin, button;\r\n            for (let key in plugins) {\r\n                if (!util.hasOwn(plugins, key)) continue;\r\n                plugin = plugins[key];\r\n                button = pluginCallButtons[key];\r\n                if (plugin.active && button) {\r\n                    this.callPlugin(key, null, button);\r\n                }\r\n                if (typeof plugin.checkFileInfo === 'function' && typeof plugin.resetFileInfo === 'function') {\r\n                    this.callPlugin(key, null, button);\r\n                    this._fileInfoPluginsCheck.push(plugin.checkFileInfo.bind(this));\r\n                    this._fileInfoPluginsReset.push(plugin.resetFileInfo.bind(this));\r\n                }\r\n                if (_w.Array.isArray(plugin.fileTags)) {\r\n                    const fileTags = plugin.fileTags;\r\n                    this.callPlugin(key, null, button);\r\n                    this._fileManager.tags = this._fileManager.tags.concat(fileTags);\r\n                    filePluginRegExp.push(key);\r\n                    for (let tag = 0, tLen = fileTags.length; tag < tLen; tag++) {\r\n                        this._fileManager.pluginMap[fileTags[tag].toLowerCase()] = key;\r\n                    }\r\n                }\r\n                if (plugin.managedTags) {\r\n                    const info = plugin.managedTags();\r\n                    managedClass.push('.' + info.className);\r\n                    this.managedTagsInfo.map[info.className] = info.method.bind(this);\r\n                }\r\n            }\r\n\r\n            this.managedTagsInfo.query = managedClass.toString();\r\n            this._fileManager.queryString = this._fileManager.tags.join(',');\r\n            this._fileManager.regExp = new wRegExp('^(' +  this._fileManager.tags.join('|') + ')$', 'i');\r\n            this._fileManager.pluginRegExp = new wRegExp('^(' +  (filePluginRegExp.length === 0 ? 'undefined' : filePluginRegExp.join('|')) + ')$', 'i');\r\n            \r\n            // cache editor's element\r\n            this._variable._originCssText = context.element.topArea.style.cssText;\r\n            this._placeholder = context.element.placeholder;\r\n            this._lineBreaker = context.element.lineBreaker;\r\n            this._lineBreakerButton = this._lineBreaker.querySelector('button');\r\n\r\n            // Excute history function\r\n            this.history = _history(this, this._onChange_historyStack.bind(this));\r\n\r\n            // register notice module\r\n            this.addModule([_notice]);\r\n\r\n            // Init, validate\r\n            if (options.iframe) {\r\n                this._wd = context.element.wysiwygFrame.contentDocument;\r\n                context.element.wysiwyg = this._wd.body;\r\n                if (options._editorStyles.editor) context.element.wysiwyg.style.cssText = options._editorStyles.editor;\r\n                if (options.height === 'auto') this._iframeAuto = this._wd.body;\r\n            }\r\n            \r\n            this._initWysiwygArea(reload, _initHTML);\r\n            this.setDir(options.rtl ? 'rtl' : 'ltr');\r\n        },\r\n\r\n        /**\r\n         * @description Caching basic buttons to use\r\n         * @private\r\n         */\r\n        _cachingButtons: function () {\r\n            this.codeViewDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-code-view-enabled\"]):not([data-display=\"MORE\"])');\r\n            this.resizingDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-resizing-enabled\"]):not([data-display=\"MORE\"])');\r\n\r\n            this.saveButtonStates();\r\n\r\n            const tool = context.tool;\r\n            this.commandMap = {\r\n                SUB: tool.subscript,\r\n                SUP: tool.superscript,\r\n                OUTDENT: tool.outdent,\r\n                INDENT: tool.indent\r\n            };\r\n            this.commandMap[options.textTags.bold.toUpperCase()] = tool.bold;\r\n            this.commandMap[options.textTags.underline.toUpperCase()] = tool.underline;\r\n            this.commandMap[options.textTags.italic.toUpperCase()] = tool.italic;\r\n            this.commandMap[options.textTags.strike.toUpperCase()] = tool.strike;\r\n            \r\n            this._styleCommandMap = {\r\n                fullScreen: tool.fullScreen,\r\n                showBlocks: tool.showBlocks,\r\n                codeView: tool.codeView\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Initializ wysiwyg area (Only called from core._init)\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _initWysiwygArea: function (reload, _initHTML) {\r\n            context.element.wysiwyg.innerHTML = reload ? _initHTML : this.convertContentsForEditor(typeof _initHTML === 'string' ? _initHTML : context.element.originElement.value);\r\n        },\r\n\r\n        /**\r\n         * @description Called when there are changes to tags in the wysiwyg region.\r\n         * @private\r\n         */\r\n        _resourcesStateChange: function () {\r\n            this._iframeAutoHeight();\r\n            this._checkPlaceholder();\r\n        },\r\n\r\n        /**\r\n         * @description Called when after execute \"history.push\"\r\n         * @private\r\n         */\r\n        _onChange_historyStack: function () {\r\n            if (this.hasFocus) event._applyTagEffects();\r\n            this._variable.isChanged = true;\r\n            if (context.tool.save) context.tool.save.removeAttribute('disabled');\r\n            // user event\r\n            if (functions.onChange) functions.onChange(this.getContents(true), this);\r\n            if (context.element.toolbar.style.display === 'block') event._showToolbarBalloon();\r\n        },\r\n\r\n        /**\r\n         * @description Modify the height value of the iframe when the height of the iframe is automatic.\r\n         * @private\r\n         */\r\n        _iframeAutoHeight: function () {\r\n            if (this._iframeAuto) {\r\n                _w.setTimeout(function () { context.element.wysiwygFrame.style.height = core._iframeAuto.offsetHeight + 'px'; });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set display property when there is placeholder.\r\n         * @private\r\n         */\r\n        _checkPlaceholder: function () {\r\n            if (this._placeholder) {\r\n                if (this._variable.isCodeView) {\r\n                    this._placeholder.style.display = 'none';\r\n                    return;\r\n                }\r\n\r\n                const wysiwyg = context.element.wysiwyg;\r\n                if (!util.onlyZeroWidthSpace(wysiwyg.textContent) || wysiwyg.querySelector(util._allowedEmptyNodeList) || (wysiwyg.innerText.match(/\\n/g) || '').length > 1) {\r\n                    this._placeholder.style.display = 'none';\r\n                } else {\r\n                    this._placeholder.style.display = 'block';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If there is no default format, add a format and move \"selection\".\r\n         * @param {String|null} formatName Format tag name (default: 'P')\r\n         * @returns {undefined|null}\r\n         * @private\r\n         */\r\n        _setDefaultFormat: function (formatName) {\r\n            if (this._fileManager.pluginRegExp.test(this.currentControllerName)) return;\r\n\r\n            const range = this.getRange();\r\n            const commonCon = range.commonAncestorContainer;\r\n            const startCon = range.startContainer;\r\n            const rangeEl = util.getRangeFormatElement(commonCon, null);\r\n            let focusNode, offset, format;\r\n\r\n            const fileComponent = util.getParentElement(commonCon, util.isComponent);\r\n            if (fileComponent && !util.isTable(fileComponent)) {\r\n                return;\r\n            } else if (commonCon.nodeType === 1 && commonCon.getAttribute('data-se-embed') === 'true') {\r\n                let el = commonCon.nextElementSibling;\r\n                if (!util.isFormatElement(el)) el = this.appendFormatTag(commonCon, options.defaultTag);\r\n                this.setRange(el.firstChild, 0, el.firstChild, 0);\r\n                return;\r\n            }\r\n\r\n            if ((util.isRangeFormatElement(startCon) || util.isWysiwygDiv(startCon)) && (util.isComponent(startCon.children[range.startOffset]) || util.isComponent(startCon.children[range.startOffset - 1]))) return;\r\n            if (util.getParentElement(commonCon, util.isNotCheckingNode)) return null;\r\n\r\n            if (rangeEl) {\r\n                format = util.createElement(formatName || options.defaultTag);\r\n                format.innerHTML = rangeEl.innerHTML;\r\n                if (format.childNodes.length === 0) format.innerHTML = util.zeroWidthSpace;\r\n\r\n                rangeEl.innerHTML = format.outerHTML;\r\n                format = rangeEl.firstChild;\r\n                focusNode = util.getEdgeChildNodes(format, null).sc;\r\n\r\n                if (!focusNode) {\r\n                    focusNode = util.createTextNode(util.zeroWidthSpace);\r\n                    format.insertBefore(focusNode, format.firstChild);\r\n                }\r\n                \r\n                offset = focusNode.textContent.length;\r\n                this.setRange(focusNode, offset, focusNode, offset);\r\n                return;\r\n            }\r\n\r\n            if(util.isRangeFormatElement(commonCon) && (commonCon.childNodes.length <= 1)) {\r\n                let br = null;\r\n                if (commonCon.childNodes.length === 1 && util.isBreak(commonCon.firstChild)) {\r\n                    br = commonCon.firstChild;\r\n                } else {\r\n                    br = util.createTextNode(util.zeroWidthSpace);\r\n                    commonCon.appendChild(br);\r\n                }\r\n\r\n                this.setRange(br, 1, br, 1);\r\n                return;\r\n            }\r\n\r\n            this.execCommand('formatBlock', false, (formatName || options.defaultTag));\r\n            focusNode = util.getEdgeChildNodes(commonCon, commonCon);\r\n            focusNode = focusNode ? focusNode.ec : commonCon;\r\n\r\n            format = util.getFormatElement(focusNode, null);\r\n            if (!format) {\r\n                this.removeRange();\r\n                this._editorRange();\r\n                return;\r\n            }\r\n            \r\n            if (util.isBreak(format.nextSibling)) util.removeItem(format.nextSibling);\r\n            if (util.isBreak(format.previousSibling)) util.removeItem(format.previousSibling);\r\n            if (util.isBreak(focusNode)) {\r\n                const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                focusNode.parentNode.insertBefore(zeroWidth, focusNode);\r\n                focusNode = zeroWidth;\r\n            }\r\n\r\n            this.effectNode = null;\r\n            this.nativeFocus();\r\n        },\r\n\r\n        /**\r\n         * @description Initialization after \"setOptions\"\r\n         * @param {Object} el context.element\r\n         * @param {String} _initHTML Initial html string\r\n         * @private\r\n         */\r\n        _setOptionsInit: function (el, _initHTML) {\r\n            this.context = context = _Context(el.originElement, this._getConstructed(el), options);\r\n            this._componentsInfoReset = true;\r\n            this._editorInit(true, _initHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Initializ editor\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _editorInit: function (reload, _initHTML) {\r\n            // initialize core and add event listeners\r\n            this._init(reload, _initHTML);\r\n            event._addEvent();\r\n            this._setCharCount();\r\n            event._offStickyToolbar();\r\n            event.onResize_window();\r\n\r\n            // toolbar visibility\r\n            context.element.toolbar.style.visibility = '';\r\n\r\n            this._checkComponents();\r\n            this._componentsInfoInit = false;\r\n            this._componentsInfoReset = false;\r\n\r\n            this.history.reset(true);\r\n            this._resourcesStateChange();\r\n\r\n            _w.setTimeout(function () {\r\n                // user event\r\n                if (typeof functions.onload === 'function') functions.onload(core, reload);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @description Create and return an object to cache the new context.\r\n         * @param {Element} contextEl context.element\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _getConstructed: function (contextEl) {\r\n            return {\r\n                _top: contextEl.topArea,\r\n                _relative: contextEl.relative,\r\n                _toolBar: contextEl.toolbar,\r\n                _menuTray: contextEl._menuTray,\r\n                _editorArea: contextEl.editorArea,\r\n                _wysiwygArea: contextEl.wysiwygFrame,\r\n                _codeArea: contextEl.code,\r\n                _placeholder: contextEl.placeholder,\r\n                _resizingBar: contextEl.resizingBar,\r\n                _navigation: contextEl.navigation,\r\n                _charCounter: contextEl.charCounter,\r\n                _charWrapper: contextEl.charWrapper,\r\n                _loading: contextEl.loading,\r\n                _lineBreaker: contextEl.lineBreaker,\r\n                _lineBreaker_t: contextEl.lineBreaker_t,\r\n                _lineBreaker_b: contextEl.lineBreaker_b,\r\n                _resizeBack: contextEl.resizeBackground,\r\n                _stickyDummy: contextEl._stickyDummy,\r\n                _arrow: contextEl._arrow\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @description event function\r\n     */\r\n    const event = {\r\n        _IEisComposing: false, // In IE, there is no \"e.isComposing\" in the key-up event.\r\n        _lineBreakerBind: null,\r\n        _responsiveCurrentSize: 'default',\r\n        _responsiveButtonSize: null,\r\n        _responsiveButtons: null,\r\n        _directionKeyCode: new _w.RegExp('^(8|13|3[2-9]|40|46)$'),\r\n        _nonTextKeyCode: new _w.RegExp('^(8|13|1[6-9]|20|27|3[3-9]|40|45|46|11[2-9]|12[0-3]|144|145)$'),\r\n        _historyIgnoreKeyCode: new _w.RegExp('^(1[6-9]|20|27|3[3-9]|40|45|11[2-9]|12[0-3]|144|145)$'),\r\n        _onButtonsCheck: new _w.RegExp('^(' + _w.Object.keys(options._textTagsMap).join('|') + ')$', 'i'),\r\n        _frontZeroWidthReg: new _w.RegExp(util.zeroWidthSpace + '+', ''),\r\n        _keyCodeShortcut: {\r\n            65: 'A',\r\n            66: 'B',\r\n            83: 'S',\r\n            85: 'U',\r\n            73: 'I',\r\n            89: 'Y',\r\n            90: 'Z',\r\n            219: '[',\r\n            221: ']'\r\n        },\r\n\r\n        _shortcutCommand: function (keyCode, shift) {\r\n            let command = null;\r\n            const keyStr = event._keyCodeShortcut[keyCode];\r\n\r\n            switch (keyStr) {\r\n                case 'A':\r\n                    command = 'selectAll';\r\n                    break;\r\n                case 'B':\r\n                    if (options.shortcutsDisable.indexOf('bold') === -1) {\r\n                        command = 'bold';\r\n                    }\r\n                    break;\r\n                case 'S':\r\n                    if (shift && options.shortcutsDisable.indexOf('strike') === -1) {\r\n                        command = 'strike';\r\n                    } else if (!shift && options.shortcutsDisable.indexOf('save') === -1) {\r\n                        command = 'save';\r\n                    }\r\n                    break;\r\n                case 'U':\r\n                    if (options.shortcutsDisable.indexOf('underline') === -1) {\r\n                        command = 'underline';\r\n                    }\r\n                    break;\r\n                case 'I':\r\n                    if (options.shortcutsDisable.indexOf('italic') === -1) {\r\n                        command = 'italic';\r\n                    }\r\n                    break;\r\n                case 'Z':\r\n                    if (options.shortcutsDisable.indexOf('undo') === -1) {\r\n                        if (shift) {\r\n                            command = 'redo';\r\n                        } else {\r\n                            command = 'undo';\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'Y':\r\n                    if (options.shortcutsDisable.indexOf('undo') === -1) {\r\n                        command = 'redo';\r\n                    }\r\n                    break;\r\n                case '[':\r\n                    if (options.shortcutsDisable.indexOf('indent') === -1) {\r\n                        command = options.rtl ? 'indent' : 'outdent';\r\n                    }\r\n                    break;\r\n                case ']':\r\n                    if (options.shortcutsDisable.indexOf('indent') === -1) {\r\n                        command = options.rtl ? 'outdent' : 'indent';\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (!command) return false;\r\n\r\n            core.commandHandler(core.commandMap[command], command);\r\n            return true;\r\n        },\r\n\r\n        _applyTagEffects: function () {\r\n            let selectionNode = core.getSelectionNode();\r\n            if (selectionNode === core.effectNode) return;\r\n            core.effectNode = selectionNode;\r\n\r\n            const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\r\n            const commandMap = core.commandMap;\r\n            const classOnCheck = this._onButtonsCheck;\r\n            const commandMapNodes = [];\r\n            const currentNodes = [];\r\n\r\n            const activePlugins = core.activePlugins;\r\n            const cLen = activePlugins.length;\r\n            let nodeName = '';\r\n\r\n            while (selectionNode.firstChild) {\r\n                selectionNode = selectionNode.firstChild;\r\n            }\r\n\r\n            for (let element = selectionNode; !util.isWysiwygDiv(element); element = element.parentNode) {\r\n                if (!element) break;\r\n                if (element.nodeType !== 1 || util.isBreak(element)) continue;\r\n                nodeName = element.nodeName.toUpperCase();\r\n                currentNodes.push(nodeName);\r\n\r\n                /* Active plugins */\r\n                if (!core.isReadOnly) {\r\n                    for (let c = 0, name; c < cLen; c++) {\r\n                        name = activePlugins[c];\r\n                        if (commandMapNodes.indexOf(name) === -1 && plugins[name].active.call(core, element)) {\r\n                            commandMapNodes.push(name);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (util.isFormatElement(element)) {\r\n                    /* Outdent */\r\n                    if (commandMapNodes.indexOf('OUTDENT') === -1 && commandMap.OUTDENT && !util.isImportantDisabled(commandMap.OUTDENT)) {\r\n                        if (util.isListCell(element) || (element.style[marginDir] && util.getNumber(element.style[marginDir], 0) > 0)) {\r\n                            commandMapNodes.push('OUTDENT');\r\n                            commandMap.OUTDENT.removeAttribute('disabled');\r\n                        }\r\n                    }\r\n\r\n                    /* Indent */\r\n                    if (commandMapNodes.indexOf('INDENT') === -1 && commandMap.INDENT && !util.isImportantDisabled(commandMap.INDENT)) {\r\n                        commandMapNodes.push('INDENT');\r\n                        if (util.isListCell(element) && !element.previousElementSibling) {\r\n                            commandMap.INDENT.setAttribute('disabled', true);\r\n                        } else {\r\n                            commandMap.INDENT.removeAttribute('disabled');\r\n                        }\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                /** default active buttons [strong, ins, em, del, sub, sup] */\r\n                if (classOnCheck.test(nodeName)) {\r\n                    commandMapNodes.push(nodeName);\r\n                    util.addClass(commandMap[nodeName], 'active');\r\n                }\r\n            }\r\n\r\n            core._setKeyEffect(commandMapNodes);\r\n\r\n            /** save current nodes */\r\n            core._variable.currentNodes = currentNodes.reverse();\r\n            core._variable.currentNodesMap = commandMapNodes;\r\n\r\n            /**  Displays the current node structure to resizingBar */\r\n            if (options.showPathLabel) context.element.navigation.textContent = core._variable.currentNodes.join(' > ');\r\n        },\r\n\r\n        _cancelCaptionEdit: function () {\r\n            this.setAttribute('contenteditable', false);\r\n            this.removeEventListener('blur', event._cancelCaptionEdit);\r\n        },\r\n\r\n        _buttonsEventHandler: function (e) {\r\n            let target = e.target;\r\n            if (core._bindControllersOff) e.stopPropagation();\r\n\r\n            if (/^(input|textarea|select|option)$/i.test(target.nodeName)) {\r\n                core._antiBlur = false;\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n\r\n            if (util.getParentElement(target, '.se-submenu')) {\r\n                e.stopPropagation();\r\n                core._notHideToolbar = true;\r\n            } else {\r\n                let command = target.getAttribute('data-command');\r\n                let className = target.className;\r\n    \r\n                while (!command && !/se-menu-list/.test(className) && !/sun-editor-common/.test(className)) {\r\n                    target = target.parentNode;\r\n                    command = target.getAttribute('data-command');\r\n                    className = target.className;\r\n                }\r\n    \r\n                if (command === core._submenuName || command === core._containerName) {\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        },\r\n\r\n        onClick_toolbar: function (e) {\r\n            let target = e.target;\r\n            let display = target.getAttribute('data-display');\r\n            let command = target.getAttribute('data-command');\r\n            let className = target.className;\r\n            core.controllersOff();\r\n\r\n            while (target.parentNode && !command && !/se-menu-list/.test(className) && !/se-toolbar/.test(className)) {\r\n                target = target.parentNode;\r\n                command = target.getAttribute('data-command');\r\n                display = target.getAttribute('data-display');\r\n                className = target.className;\r\n            }\r\n\r\n            if (!command && !display) return;\r\n            if (target.disabled) return;\r\n            if (!core.isReadOnly && !core.hasFocus) core.nativeFocus();\r\n            if (!core.isReadOnly && !core._variable.isCodeView) core._editorRange();\r\n\r\n            core.actionCall(command, display, target);\r\n        },\r\n\r\n        onMouseDown_wysiwyg: function (e) {\r\n            if (core.isReadOnly || util.isNonEditable(context.element.wysiwyg)) return;\r\n            core._editorRange();\r\n\r\n            // user event\r\n            if (typeof functions.onMouseDown === 'function' && functions.onMouseDown(e, core) === false) return;\r\n            \r\n            const tableCell = util.getParentElement(e.target, util.isCell);\r\n            if (tableCell) {\r\n                const tablePlugin = core.plugins.table;\r\n                if (tablePlugin && tableCell !== tablePlugin._fixedCell && !tablePlugin._shift) {\r\n                    core.callPlugin('table', function () {\r\n                        tablePlugin.onTableCellMultiSelect.call(core, tableCell, false);\r\n                    }, null);\r\n                }\r\n            }\r\n\r\n            if (core._isBalloon) {\r\n                event._hideToolbar();\r\n            }\r\n\r\n            if (/FIGURE/i.test(e.target.nodeName)) e.preventDefault();\r\n        },\r\n\r\n        onClick_wysiwyg: function (e) {\r\n            const targetElement = e.target;\r\n\r\n            if (core.isReadOnly) {\r\n                e.preventDefault();\r\n                if (util.isAnchor(targetElement)){\r\n                    _w.open(targetElement.href, targetElement.target);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            if (util.isNonEditable(context.element.wysiwyg)) return;\r\n\r\n            // user event\r\n            if (typeof functions.onClick === 'function' && functions.onClick(e, core) === false) return;\r\n\r\n            const fileComponentInfo = core.getFileComponent(targetElement);\r\n            if (fileComponentInfo) {\r\n                e.preventDefault();\r\n                core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n                return;\r\n            }\r\n\r\n            const figcaption = util.getParentElement(targetElement, 'FIGCAPTION');\r\n            if (util.isNonEditable(figcaption)) {\r\n                e.preventDefault();\r\n                figcaption.setAttribute('contenteditable', true);\r\n                figcaption.focus();\r\n\r\n                if (core._isInline && !core._inlineToolbarAttr.isShow) {\r\n                    event._showToolbarInline();\r\n\r\n                    const hideToolbar = function () {\r\n                        event._hideToolbar();\r\n                        figcaption.removeEventListener('blur', hideToolbar);\r\n                    };\r\n\r\n                    figcaption.addEventListener('blur', hideToolbar);\r\n                }\r\n            }\r\n\r\n            _w.setTimeout(core._editorRange.bind(core));\r\n            core._editorRange();\r\n\r\n            const selectionNode = core.getSelectionNode();\r\n            const formatEl = util.getFormatElement(selectionNode, null);\r\n            const rangeEl = util.getRangeFormatElement(selectionNode, null);\r\n            if (!formatEl && !util.isNonEditable(targetElement) && !util.isList(rangeEl)) {\r\n                const range = core.getRange();\r\n                if (util.getFormatElement(range.startContainer) === util.getFormatElement(range.endContainer)) {\r\n                    if (util.isList(rangeEl)) {\r\n                        e.preventDefault();\r\n                        const oLi = util.createElement('LI');\r\n                        const prevLi = selectionNode.nextElementSibling;\r\n                        oLi.appendChild(selectionNode);\r\n                        rangeEl.insertBefore(oLi, prevLi);\r\n                        core.focus();\r\n                    } else if (!util.isWysiwygDiv(selectionNode) && !util.isComponent(selectionNode) && (!util.isTable(selectionNode) || util.isCell(selectionNode)) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\r\n                        e.preventDefault();\r\n                        core.focus();\r\n                    } else {\r\n                        event._applyTagEffects();\r\n                    }\r\n                }\r\n            } else {\r\n                event._applyTagEffects();\r\n            }\r\n\r\n            if (core._isBalloon) _w.setTimeout(event._toggleToolbarBalloon);\r\n        },\r\n\r\n        _balloonDelay: null,\r\n        _showToolbarBalloonDelay: function () {\r\n            if (event._balloonDelay) {\r\n                _w.clearTimeout(event._balloonDelay);\r\n            }\r\n\r\n            event._balloonDelay = _w.setTimeout(function () {\r\n                _w.clearTimeout(this._balloonDelay);\r\n                this._balloonDelay = null;\r\n                this._showToolbarBalloon();\r\n            }.bind(event), 350);\r\n        },\r\n\r\n        _toggleToolbarBalloon: function () {\r\n            core._editorRange();\r\n            const range = core.getRange();\r\n            if (core._bindControllersOff || (!core._isBalloonAlways && range.collapsed)) event._hideToolbar();\r\n            else event._showToolbarBalloon(range);\r\n        },\r\n\r\n        _showToolbarBalloon: function (rangeObj) {\r\n            if (!core._isBalloon) return;\r\n\r\n            const range = rangeObj || core.getRange();\r\n            const toolbar = context.element.toolbar;\r\n            const topArea = context.element.topArea;\r\n            const selection = core.getSelection();\r\n\r\n            let isDirTop;\r\n            if (core._isBalloonAlways && range.collapsed) {\r\n                isDirTop = true;\r\n            } else if (selection.focusNode === selection.anchorNode) {\r\n                isDirTop = selection.focusOffset < selection.anchorOffset;\r\n            } else {\r\n                const childNodes = util.getListChildNodes(range.commonAncestorContainer, null);\r\n                isDirTop = util.getArrayIndex(childNodes, selection.focusNode) < util.getArrayIndex(childNodes, selection.anchorNode);\r\n            }\r\n\r\n            let rects = range.getClientRects();\r\n            rects = rects[isDirTop ? 0 : rects.length - 1];\r\n\r\n            const globalScroll = core.getGlobalScrollOffset();\r\n            let scrollLeft = globalScroll.left;\r\n            let scrollTop = globalScroll.top;\r\n\r\n            const editorWidth = topArea.offsetWidth;\r\n            const offsets = event._getEditorOffsets(null);\r\n            const stickyTop = offsets.top;\r\n            const editorLeft = offsets.left;\r\n            \r\n            toolbar.style.top = '-10000px';\r\n            toolbar.style.visibility = 'hidden';\r\n            toolbar.style.display = 'block';\r\n\r\n            if (!rects) {\r\n                const node = core.getSelectionNode();\r\n                if (util.isFormatElement(node)) {\r\n                    const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                    core.insertNode(zeroWidth, null, false);\r\n                    core.setRange(zeroWidth, 1, zeroWidth, 1);\r\n                    core._editorRange();\r\n                    rects = core.getRange().getClientRects();\r\n                    rects = rects[isDirTop ? 0 : rects.length - 1];\r\n                }\r\n\r\n                if (!rects) {\r\n                    const nodeOffset = util.getOffset(node, context.element.wysiwygFrame);\r\n                    rects = {\r\n                        left: nodeOffset.left,\r\n                        top: nodeOffset.top,\r\n                        right: nodeOffset.left,\r\n                        bottom: nodeOffset.top + node.offsetHeight,\r\n                        noText: true\r\n                    };\r\n                    scrollLeft = 0;\r\n                    scrollTop = 0;\r\n                }\r\n\r\n                isDirTop = true;\r\n            }\r\n\r\n            const arrowMargin = _w.Math.round(context.element._arrow.offsetWidth / 2);\r\n            const toolbarWidth = toolbar.offsetWidth;\r\n            const toolbarHeight = toolbar.offsetHeight;\r\n            const iframeRects = /iframe/i.test(context.element.wysiwygFrame.nodeName) ? context.element.wysiwygFrame.getClientRects()[0] : null;\r\n            if (iframeRects) {\r\n                rects = {\r\n                    left: rects.left + iframeRects.left,\r\n                    top: rects.top + iframeRects.top,\r\n                    right: rects.right + iframeRects.right - iframeRects.width,\r\n                    bottom: rects.bottom + iframeRects.bottom - iframeRects.height\r\n                };\r\n            }\r\n            \r\n            event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\r\n            if (toolbarWidth !== toolbar.offsetWidth || toolbarHeight !== toolbar.offsetHeight) {\r\n                event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\r\n            }\r\n\r\n            if (options.toolbarContainer) {\r\n                const editorParent = topArea.parentElement;\r\n\r\n                let container = options.toolbarContainer;\r\n                let left = container.offsetLeft;\r\n                let top = container.offsetTop;\r\n\r\n                while(!container.parentElement.contains(editorParent) || !/^(BODY|HTML)$/i.test(container.parentElement.nodeName)) {\r\n                    container = container.offsetParent;\r\n                    left += container.offsetLeft;\r\n                    top += container.offsetTop;\r\n                }\r\n\r\n                toolbar.style.left = (toolbar.offsetLeft - left + topArea.offsetLeft) + 'px';\r\n                toolbar.style.top = (toolbar.offsetTop - top + topArea.offsetTop) + 'px';\r\n            }\r\n\r\n            toolbar.style.visibility = '';\r\n        },\r\n\r\n        _setToolbarOffset: function (isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin) {\r\n            const padding = 1;\r\n            const toolbarWidth = toolbar.offsetWidth;\r\n            const toolbarHeight = rects.noText && !isDirTop ? 0 : toolbar.offsetHeight;\r\n\r\n            const absoluteLeft = (isDirTop ? rects.left : rects.right) - editorLeft - (toolbarWidth / 2) + scrollLeft;\r\n            const overRight = absoluteLeft + toolbarWidth - editorWidth;\r\n            \r\n            let t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\r\n            let l = absoluteLeft < 0 ? padding : overRight < 0 ? absoluteLeft : absoluteLeft - overRight - padding - 1;\r\n\r\n            let resetTop = false;\r\n            const space = t + (isDirTop ? (event._getEditorOffsets(null).top) : (toolbar.offsetHeight - context.element.wysiwyg.offsetHeight));\r\n            if (!isDirTop && space > 0 && event._getPageBottomSpace() < space) {\r\n                isDirTop = true;\r\n                resetTop = true;\r\n            } else if (isDirTop && _d.documentElement.offsetTop > space) {\r\n                isDirTop = false;\r\n                resetTop = true;\r\n            }\r\n\r\n            if (resetTop) t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\r\n\r\n            toolbar.style.left = _w.Math.floor(l) + 'px';\r\n            toolbar.style.top = _w.Math.floor(t) + 'px';\r\n\r\n            if (isDirTop) {\r\n                util.removeClass(context.element._arrow, 'se-arrow-up');\r\n                util.addClass(context.element._arrow, 'se-arrow-down');\r\n                context.element._arrow.style.top = toolbarHeight + 'px';\r\n            } else {\r\n                util.removeClass(context.element._arrow, 'se-arrow-down');\r\n                util.addClass(context.element._arrow, 'se-arrow-up');\r\n                context.element._arrow.style.top = -arrowMargin + 'px';\r\n            }\r\n\r\n            const arrow_left = _w.Math.floor((toolbarWidth / 2) + (absoluteLeft - l));\r\n            context.element._arrow.style.left = (arrow_left + arrowMargin > toolbar.offsetWidth ? toolbar.offsetWidth - arrowMargin : arrow_left < arrowMargin ? arrowMargin : arrow_left) + 'px';\r\n        },\r\n\r\n        _showToolbarInline: function () {\r\n            if (!core._isInline) return;\r\n\r\n            const toolbar = context.element.toolbar;\r\n            if (options.toolbarContainer) toolbar.style.position = 'relative';\r\n            else toolbar.style.position = 'absolute';\r\n            \r\n            toolbar.style.visibility = 'hidden';\r\n            toolbar.style.display = 'block';\r\n            core._inlineToolbarAttr.width = toolbar.style.width = options.toolbarWidth;\r\n            core._inlineToolbarAttr.top = toolbar.style.top = (options.toolbarContainer ? 0 : (-1 - toolbar.offsetHeight)) + 'px';\r\n            \r\n            if (typeof functions.showInline === 'function') functions.showInline(toolbar, context, core);\r\n\r\n            event.onScroll_window();\r\n            core._inlineToolbarAttr.isShow = true;\r\n            toolbar.style.visibility = '';\r\n        },\r\n\r\n        _hideToolbar: function () {\r\n            if (!core._notHideToolbar && !core._variable.isFullScreen) {\r\n                context.element.toolbar.style.display = 'none';\r\n                core._inlineToolbarAttr.isShow = false;\r\n            }\r\n        },\r\n\r\n        onInput_wysiwyg: function (e) {\r\n            if (core.isReadOnly || core.isDisabled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                core.history.go(core.history.getCurrentIndex());\r\n                return false;\r\n            }\r\n\r\n            core._editorRange();\r\n\r\n            // user event\r\n            if (typeof functions.onInput === 'function' && functions.onInput(e, core) === false) return;\r\n\r\n            const data = (e.data === null ? '' : e.data === undefined ? ' ' : e.data) || '';       \r\n            if (!core._charCount(data)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            // history stack\r\n            core.history.push(true);\r\n        },\r\n\r\n        _isUneditableNode: function (range, isFront) {\r\n            const container = isFront ? range.startContainer : range.endContainer;\r\n            const offset = isFront ? range.startOffset : range.endOffset;\r\n            const siblingKey = isFront ? 'previousSibling' : 'nextSibling';\r\n            const isElement = container.nodeType === 1;\r\n            let siblingNode;\r\n\r\n            if (isElement) {\r\n                siblingNode = event._isUneditableNode_getSibling(container.childNodes[offset], siblingKey, container);\r\n                return siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\r\n            } else {\r\n                siblingNode = event._isUneditableNode_getSibling(container, siblingKey, container);\r\n                return core.isEdgePoint(container, offset, isFront ? 'front' : 'end') && (siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false');\r\n            }\r\n        },\r\n\r\n        _isUneditableNode_getSibling: function (selectNode, siblingKey, container) {\r\n            if (!selectNode) return null;\r\n            let siblingNode = selectNode[siblingKey];\r\n\r\n            if (!siblingNode) {\r\n                siblingNode = util.getFormatElement(container);\r\n                siblingNode = siblingNode ? siblingNode[siblingKey] : null;\r\n                if (siblingNode && !util.isComponent(siblingNode)) siblingNode = siblingKey === 'previousSibling' ? siblingNode.firstElementChild : siblingNode.lastElementChild;\r\n                else return null;\r\n            }\r\n\r\n            return siblingNode;\r\n        },\r\n\r\n        _onShortcutKey: false,\r\n        onKeyDown_wysiwyg: function (e) {\r\n            const keyCode = e.keyCode;\r\n            const shift = e.shiftKey;\r\n            const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\r\n            const alt = e.altKey;\r\n            event._IEisComposing = keyCode === 229;\r\n\r\n            if (!ctrl && core.isReadOnly && !event._directionKeyCode.test(keyCode)) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n\r\n            core.submenuOff();\r\n\r\n            if (core._isBalloon) {\r\n                event._hideToolbar();\r\n            }\r\n\r\n            // user event\r\n            if (typeof functions.onKeyDown === 'function' && functions.onKeyDown(e, core) === false) return;\r\n\r\n            /** Shortcuts */\r\n            if (ctrl && event._shortcutCommand(keyCode, shift)) {\r\n                event._onShortcutKey = true;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            } else if (event._onShortcutKey) {\r\n                event._onShortcutKey = false;\r\n            }\r\n\r\n            /** default key action */\r\n            let selectionNode = core.getSelectionNode();\r\n            const range = core.getRange();\r\n            const selectRange = !range.collapsed || range.startContainer !== range.endContainer;\r\n            const fileComponentName = core._fileManager.pluginRegExp.test(core.currentControllerName) ? core.currentControllerName : '';\r\n            let formatEl = util.getFormatElement(selectionNode, null) || selectionNode;\r\n            let rangeEl = util.getRangeFormatElement(formatEl, null);\r\n\r\n            switch (keyCode) {\r\n                case 8: /** backspace key */\r\n                    if (!selectRange) {\r\n                        if (fileComponentName) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            core.plugins[fileComponentName].destroy.call(core);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (selectRange && event._hardDelete()) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild && !util.isComponent(selectionNode) && core._setDefaultFormat(options.defaultTag) !== null) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        return false;\r\n                    }\r\n\r\n                    if (!selectRange && !formatEl.previousElementSibling && (range.startOffset === 0 && !selectionNode.previousSibling && !util.isListCell(formatEl) && \r\n                     (util.isFormatElement(formatEl) && (!util.isFreeFormatElement(formatEl) || util.isClosureFreeFormatElement(formatEl))))) {\r\n                        // closure range\r\n                        if (util.isClosureRangeFormatElement(formatEl.parentNode)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            return false;\r\n                        }\r\n                        // maintain default format\r\n                        if (util.isWysiwygDiv(formatEl.parentNode) && formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.textContent))) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n\r\n                            if (formatEl.nodeName.toUpperCase() === options.defaultTag.toUpperCase()) {\r\n                                formatEl.innerHTML = '<br>';\r\n                                const attrs = formatEl.attributes;\r\n                                while (attrs[0]) {\r\n                                    formatEl.removeAttribute(attrs[0].name);\r\n                                }\r\n                            } else {\r\n                                const defaultFormat = util.createElement(options.defaultTag);\r\n                                defaultFormat.innerHTML = '<br>';\r\n                                formatEl.parentElement.replaceChild(defaultFormat, formatEl);\r\n                            }\r\n\r\n                            core.nativeFocus();\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    // clean remove tag\r\n                    if (formatEl && range.startContainer === range.endContainer && selectionNode.nodeType === 3 && !util.isFormatElement(selectionNode.parentNode)) {\r\n                        if (range.collapsed ? selectionNode.textContent.length === 1 : (range.endOffset - range.startOffset) === selectionNode.textContent.length) {\r\n                            e.preventDefault();\r\n\r\n                            let offset = null;\r\n                            let prev = selectionNode.parentNode.previousSibling;\r\n                            const next = selectionNode.parentNode.nextSibling;\r\n                            if (!prev) {\r\n                                if (!next) {\r\n                                    prev = util.createElement('BR');\r\n                                    formatEl.appendChild(prev);\r\n                                } else {\r\n                                    prev = next;\r\n                                    offset = 0;\r\n                                }\r\n                            }\r\n\r\n                            selectionNode.textContent = '';\r\n                            util.removeItemAllParents(selectionNode, null, formatEl);\r\n                            offset = typeof offset === 'number' ? offset : prev.nodeType === 3 ? prev.textContent.length : 1;\r\n                            core.setRange(prev, offset, prev, offset);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // tag[contenteditable=\"false\"]\r\n                    if (event._isUneditableNode(range, true)) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // nested list\r\n                    const commonCon = range.commonAncestorContainer;\r\n                    formatEl = util.getFormatElement(range.startContainer, null);\r\n                    rangeEl = util.getRangeFormatElement(formatEl, null);\r\n                    if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\r\n                        if (util.isListCell(formatEl) && util.isList(rangeEl) && (util.isListCell(rangeEl.parentNode) || formatEl.previousElementSibling) && (selectionNode === formatEl || (selectionNode.nodeType === 3 && (!selectionNode.previousSibling || util.isList(selectionNode.previousSibling)))) &&\r\n                         (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.startContainer) : (range.startOffset === 0  && range.collapsed))) {\r\n                            if (range.startContainer !== range.endContainer) {\r\n                                e.preventDefault();\r\n\r\n                                core.removeNode();\r\n                                if (range.startContainer.nodeType === 3) {\r\n                                    core.setRange(range.startContainer, range.startContainer.textContent.length, range.startContainer, range.startContainer.textContent.length);\r\n                                }\r\n                                // history stack\r\n                                core.history.push(true);\r\n                            } else {\r\n                                let prev = formatEl.previousElementSibling || rangeEl.parentNode;\r\n                                if (util.isListCell(prev)) {\r\n                                    e.preventDefault();\r\n\r\n                                    let prevLast = prev;\r\n                                    if (!prev.contains(formatEl) && util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\r\n                                        prevLast = prevLast.lastElementChild.lastElementChild;\r\n                                        while (util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\r\n                                            prevLast = prevLast.lastElementChild && prevLast.lastElementChild.lastElementChild;\r\n                                        }\r\n                                        prev = prevLast;\r\n                                    }\r\n\r\n                                    let con = prev === rangeEl.parentNode ? rangeEl.previousSibling : prev.lastChild;\r\n                                    if (!con) {\r\n                                        con = util.createTextNode(util.zeroWidthSpace);\r\n                                        rangeEl.parentNode.insertBefore(con, rangeEl.parentNode.firstChild);\r\n                                    }\r\n                                    const offset = con.nodeType === 3 ? con.textContent.length : 1;\r\n                                    const children = formatEl.childNodes;\r\n                                    let after = con;\r\n                                    let child = children[0];\r\n                                    while ((child = children[0])) {\r\n                                        prev.insertBefore(child, after.nextSibling);\r\n                                        after = child;\r\n                                    }\r\n\r\n                                    util.removeItem(formatEl);\r\n                                    if (rangeEl.children.length === 0) util.removeItem(rangeEl);\r\n\r\n                                    core.setRange(con, offset, con, offset);\r\n                                    // history stack\r\n                                    core.history.push(true);\r\n                                }\r\n                            }\r\n                            \r\n                            break;\r\n                        }\r\n\r\n                        // detach range\r\n                        if (!selectRange && range.startOffset === 0) {\r\n                            let detach = true;\r\n                            let comm = commonCon;\r\n                            while (comm && comm !== rangeEl && !util.isWysiwygDiv(comm)) {\r\n                                if (comm.previousSibling) {\r\n                                    if (comm.previousSibling.nodeType === 1 || !util.onlyZeroWidthSpace(comm.previousSibling.textContent.trim())) {\r\n                                        detach = false;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                comm = comm.parentNode;\r\n                            }\r\n    \r\n                            if (detach && rangeEl.parentNode) {\r\n                                e.preventDefault();\r\n                                core.detachRangeFormatElement(rangeEl, (util.isListCell(formatEl) ? [formatEl] : null), null, false, false);\r\n                                // history stack\r\n                                core.history.push(true);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // component\r\n                    if (!selectRange && formatEl && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\r\n                        const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] : selectionNode;\r\n                        const prev = formatEl.previousSibling;\r\n                        // select file component\r\n                        const ignoreZWS = (commonCon.nodeType === 3 || util.isBreak(commonCon)) && !commonCon.previousSibling && range.startOffset === 0;\r\n                        if (!sel.previousSibling && (util.isComponent(commonCon.previousSibling) || (ignoreZWS && util.isComponent(prev)))) {\r\n                            const fileComponentInfo = core.getFileComponent(prev);\r\n                            if (fileComponentInfo) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                if (formatEl.textContent.length === 0) util.removeItem(formatEl);\r\n                                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\r\n                            } else if (util.isComponent(prev)) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                util.removeItem(prev);\r\n                            }\r\n                            break;\r\n                        }\r\n                        // delete nonEditable\r\n                        if (util.isNonEditable(sel.previousSibling)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel.previousSibling);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                case 46: /** delete key */\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        core.plugins[fileComponentName].destroy.call(core);\r\n                        break;\r\n                    }\r\n\r\n                    if (selectRange && event._hardDelete()) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // tag[contenteditable=\"false\"]\r\n                    if (event._isUneditableNode(range, false)) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // component\r\n                    if ((util.isFormatElement(selectionNode) || selectionNode.nextSibling === null || (util.onlyZeroWidthSpace(selectionNode.nextSibling) && selectionNode.nextSibling.nextSibling === null)) && range.startOffset === selectionNode.textContent.length) {\r\n                        const nextEl = formatEl.nextElementSibling;\r\n                        if (!nextEl) break;\r\n                        if (util.isComponent(nextEl)) {\r\n                            e.preventDefault();\r\n\r\n                            if (util.onlyZeroWidthSpace(formatEl)) {\r\n                                util.removeItem(formatEl);\r\n                                // table component\r\n                                if (util.isTable(nextEl)) {\r\n                                    let cell = util.getChildElement(nextEl, util.isCell, false);\r\n                                    cell = cell.firstElementChild || cell;\r\n                                    core.setRange(cell, 0, cell, 0);\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            // select file component\r\n                            const fileComponentInfo = core.getFileComponent(nextEl);\r\n                            if (fileComponentInfo) {\r\n                                e.stopPropagation();\r\n                                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\r\n                            } else if (util.isComponent(nextEl)) {\r\n                                e.stopPropagation();\r\n                                util.removeItem(nextEl);\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (!selectRange && (core.isEdgePoint(range.endContainer, range.endOffset) || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\r\n                        const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] || selectionNode : selectionNode;\r\n                        // delete nonEditable\r\n                        if (sel && util.isNonEditable(sel.nextSibling)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel.nextSibling);\r\n                            break;\r\n                        } else if (util.isComponent(sel)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // nested list\r\n                    formatEl = util.getFormatElement(range.startContainer, null);\r\n                    rangeEl = util.getRangeFormatElement(formatEl, null);\r\n                    if (util.isListCell(formatEl) && util.isList(rangeEl) && (selectionNode === formatEl || (selectionNode.nodeType === 3 && (!selectionNode.nextSibling || util.isList(selectionNode.nextSibling)) &&\r\n                     (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.endContainer) : (range.endOffset === selectionNode.textContent.length && range.collapsed))))) {\r\n                        if (range.startContainer !== range.endContainer) core.removeNode();\r\n                        \r\n                        let next = util.getArrayItem(formatEl.children, util.isList, false);\r\n                        next = next || formatEl.nextElementSibling || rangeEl.parentNode.nextElementSibling;\r\n                        if (next && (util.isList(next) || util.getArrayItem(next.children, util.isList, false))) {\r\n                            e.preventDefault();\r\n\r\n                            let con, children;\r\n                            if (util.isList(next)) {\r\n                                const child = next.firstElementChild;\r\n                                children = child.childNodes;\r\n                                con = children[0];\r\n                                while (children[0]) {\r\n                                    formatEl.insertBefore(children[0], next);\r\n                                }\r\n                                util.removeItem(child);\r\n                            } else {\r\n                                con = next.firstChild;\r\n                                children = next.childNodes;\r\n                                while (children[0]) {\r\n                                    formatEl.appendChild(children[0]);\r\n                                }\r\n                                util.removeItem(next);\r\n                            }\r\n                            core.setRange(con, 0, con, 0);\r\n                            // history stack\r\n                            core.history.push(true);\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    break;\r\n                case 9: /** tab key */\r\n                    if (fileComponentName || options.tabDisable) break;\r\n                    e.preventDefault();\r\n                    if (ctrl || alt || util.isWysiwygDiv(selectionNode)) break;\r\n\r\n                    const isEdge = (!range.collapsed || core.isEdgePoint(range.startContainer, range.startOffset));            \r\n                    const selectedFormats = core.getSelectedElements(null);\r\n                    selectionNode = core.getSelectionNode();\r\n                    const cells = [];\r\n                    let lines = [];\r\n                    let fc = util.isListCell(selectedFormats[0]), lc = util.isListCell(selectedFormats[selectedFormats.length - 1]);\r\n                    let r = {sc: range.startContainer, so: range.startOffset, ec: range.endContainer, eo: range.endOffset};\r\n                    for (let i = 0, len = selectedFormats.length, f; i < len; i++) {\r\n                        f = selectedFormats[i];\r\n                        if (util.isListCell(f)) {\r\n                            if (!f.previousElementSibling && !shift) {\r\n                                continue;\r\n                            } else {\r\n                                cells.push(f);\r\n                            }\r\n                        } else {\r\n                            lines.push(f);\r\n                        }\r\n                    }\r\n                    \r\n                    // Nested list\r\n                    if (cells.length > 0 && isEdge && core.plugins.list) {\r\n                        r = core.plugins.list.editInsideList.call(core, shift, cells);\r\n                    } else {\r\n                        // table\r\n                        const tableCell = util.getParentElement(selectionNode, util.isCell);\r\n                        if (tableCell && isEdge) {\r\n                            const table = util.getParentElement(tableCell, 'table');\r\n                            const cells = util.getListChildren(table, util.isCell);\r\n                            let idx = shift ? util.prevIdx(cells, tableCell) : util.nextIdx(cells, tableCell);\r\n\r\n                            if (idx === cells.length && !shift) idx = 0;\r\n                            if (idx === -1 && shift) idx = cells.length - 1;\r\n\r\n                            let moveCell = cells[idx];\r\n                            if (!moveCell) break;\r\n                            moveCell = moveCell.firstElementChild || moveCell;\r\n                            core.setRange(moveCell, 0, moveCell, 0);\r\n                            break;\r\n                        }\r\n\r\n                        lines = lines.concat(cells);\r\n                        fc = lc = null;\r\n                    }\r\n\r\n                    // Lines tab(4)\r\n                    if (lines.length > 0) {\r\n                        if (!shift) {\r\n                            const tabText = util.createTextNode(new _w.Array(core._variable.tabSize + 1).join('\\u00A0'));\r\n                            if (lines.length === 1) {\r\n                                const textRange = core.insertNode(tabText, null, true);\r\n                                if (!textRange) return false;\r\n                                if (!fc) {\r\n                                    r.sc = tabText;\r\n                                    r.so = textRange.endOffset;\r\n                                }\r\n                                if (!lc) {\r\n                                    r.ec = tabText;\r\n                                    r.eo = textRange.endOffset;\r\n                                }\r\n                            } else {\r\n                                const len = lines.length - 1;\r\n                                for (let i = 0, child; i <= len; i++) {\r\n                                    child = lines[i].firstChild;\r\n                                    if (!child) continue;\r\n    \r\n                                    if (util.isBreak(child)) {\r\n                                        lines[i].insertBefore(tabText.cloneNode(false), child);\r\n                                    } else {\r\n                                        child.textContent = tabText.textContent + child.textContent;\r\n                                    }\r\n                                }\r\n    \r\n                                const firstChild = util.getChildElement(lines[0], 'text', false);\r\n                                const endChild = util.getChildElement(lines[len], 'text', true);\r\n                                if (!fc && firstChild) {\r\n                                    r.sc = firstChild;\r\n                                    r.so = 0;\r\n                                }\r\n                                if (!lc && endChild) {\r\n                                    r.ec = endChild;\r\n                                    r.eo = endChild.textContent.length;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const len = lines.length - 1;\r\n                            for (let i = 0, line; i <= len; i++) {\r\n                                line = lines[i].childNodes;\r\n                                for (let c = 0, cLen = line.length, child; c < cLen; c++) {\r\n                                    child = line[c];\r\n                                    if (!child) break;\r\n                                    if (util.onlyZeroWidthSpace(child)) continue;\r\n        \r\n                                    if (/^\\s{1,4}$/.test(child.textContent)) {\r\n                                        util.removeItem(child);\r\n                                    } else if (/^\\s{1,4}/.test(child.textContent)) {\r\n                                        child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\r\n                                    }\r\n                                    \r\n                                    break;\r\n                                }\r\n                            }\r\n    \r\n                            const firstChild = util.getChildElement(lines[0], 'text', false);\r\n                            const endChild = util.getChildElement(lines[len], 'text', true);\r\n                            if (!fc && firstChild) {\r\n                                r.sc = firstChild;\r\n                                r.so = 0;\r\n                            }\r\n                            if (!lc && endChild) {\r\n                                r.ec = endChild;\r\n                                r.eo = endChild.textContent.length;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    core.setRange(r.sc, r.so, r.ec, r.eo);\r\n                    // history stack\r\n                    core.history.push(false);\r\n                    \r\n                    break;\r\n                case 13: /** enter key */\r\n                    const freeFormatEl = util.getFreeFormatElement(selectionNode, null);\r\n\r\n                    if (core._charTypeHTML) {\r\n                        let enterHTML = '';\r\n                        if ((!shift && freeFormatEl) || shift) {\r\n                            enterHTML = '<br>';\r\n                        } else {\r\n                            enterHTML = '<' + formatEl.nodeName + '><br></' + formatEl.nodeName + '>';\r\n                        }\r\n\r\n                        if (!core.checkCharCount(enterHTML, 'byte-html')) {\r\n                            e.preventDefault();\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    if (!shift) {\r\n                        const formatInners = core._isEdgeFormat(range.endContainer, range.endOffset, 'end');\r\n                        if ((formatInners && /^H[1-6]$/i.test(formatEl.nodeName)) || /^HR$/i.test(formatEl.nodeName)) {\r\n                            e.preventDefault();\r\n                            let temp = null;\r\n                            const newFormat = core.appendFormatTag(formatEl, options.defaultTag);\r\n\r\n                            if (formatInners && formatInners.length > 0) {\r\n                                temp = formatInners.pop();\r\n                                const innerNode = temp;\r\n                                while(formatInners.length > 0) {\r\n                                    temp = temp.appendChild(formatInners.pop());\r\n                                }\r\n                                newFormat.appendChild(innerNode);\r\n                            }\r\n\r\n                            temp = !temp ? newFormat.firstChild : temp.appendChild(newFormat.firstChild);\r\n                            core.setRange(temp, 0, temp, 0);\r\n                            break;\r\n                        } else if (options.lineAttrReset && formatEl) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n\r\n                            let newEl;\r\n                            if (!range.collapsed) {\r\n                                const isMultiLine = util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null);\r\n                                const r = core.removeNode();\r\n                                if (isMultiLine) {\r\n                                    newEl = util.getFormatElement(r.container, null);\r\n\r\n                                    if (!r.prevContainer) {\r\n                                        const newFormat = formatEl.cloneNode(false);\r\n                                        newFormat.innerHTML = '<br>';\r\n                                        newEl.parentNode.insertBefore(newFormat, newEl);\r\n                                    } else if (newEl !== formatEl && newEl.nextElementSibling === formatEl) {\r\n                                        newEl = formatEl;\r\n                                    }\r\n                                } else {\r\n                                    newEl = util.splitElement(r.container, r.offset, 0);\r\n                                }\r\n                            } else {\r\n                                newEl = util.splitElement(range.endContainer, range.endOffset, 0);\r\n                            }\r\n\r\n                            const resetAttr = options.lineAttrReset === '*' ? null : options.lineAttrReset;\r\n                            const attrs = newEl.attributes;\r\n                            let i = 0;\r\n                            while (attrs[i]) {\r\n                                if (resetAttr && resetAttr.test(attrs[i].name)) {\r\n                                    i++;\r\n                                    continue;\r\n                                }\r\n                                newEl.removeAttribute(attrs[i].name);\r\n                            }\r\n                            core.setRange(newEl.firstChild, 0, newEl.firstChild, 0);\r\n\r\n                            break;\r\n                        }\r\n\r\n                        if (freeFormatEl) {\r\n                            e.preventDefault();\r\n                            const selectionFormat = selectionNode === freeFormatEl;\r\n                            const wSelection = core.getSelection();\r\n                            const children = selectionNode.childNodes, offset = wSelection.focusOffset, prev = selectionNode.previousElementSibling, next = selectionNode.nextSibling;\r\n    \r\n                            if (!util.isClosureFreeFormatElement(freeFormatEl) && !!children && ((selectionFormat && range.collapsed && children.length - 1 <= offset + 1 && util.isBreak(children[offset]) && (!children[offset + 1] || ((!children[offset + 2] || util.onlyZeroWidthSpace(children[offset + 2].textContent)) && children[offset + 1].nodeType === 3 && util.onlyZeroWidthSpace(children[offset + 1].textContent))) &&  offset > 0 && util.isBreak(children[offset - 1])) ||\r\n                              (!selectionFormat && util.onlyZeroWidthSpace(selectionNode.textContent) && util.isBreak(prev) && (util.isBreak(prev.previousSibling) || !util.onlyZeroWidthSpace(prev.previousSibling.textContent)) && (!next || (!util.isBreak(next) && util.onlyZeroWidthSpace(next.textContent)))))) {\r\n                                if (selectionFormat) util.removeItem(children[offset - 1]);\r\n                                else util.removeItem(selectionNode);\r\n                                const newEl = core.appendFormatTag(freeFormatEl, (util.isFormatElement(freeFormatEl.nextElementSibling) && !util.isRangeFormatElement(freeFormatEl.nextElementSibling)) ? freeFormatEl.nextElementSibling : null);\r\n                                util.copyFormatAttributes(newEl, freeFormatEl);\r\n                                core.setRange(newEl, 1, newEl, 1);\r\n                                break;\r\n                            }\r\n                            \r\n                            if (selectionFormat) {\r\n                                functions.insertHTML(((range.collapsed && util.isBreak(range.startContainer.childNodes[range.startOffset - 1])) ? '<br>' : '<br><br>'), true, false);\r\n    \r\n                                let focusNode = wSelection.focusNode;\r\n                                const wOffset = wSelection.focusOffset;\r\n                                if (freeFormatEl === focusNode) {\r\n                                    focusNode = focusNode.childNodes[wOffset - offset > 1 ? wOffset - 1 : wOffset];\r\n                                }\r\n    \r\n                                core.setRange(focusNode, 1, focusNode, 1);\r\n                            } else {\r\n                                const focusNext = wSelection.focusNode.nextSibling;\r\n                                const br = util.createElement('BR');\r\n                                core.insertNode(br, null, false);\r\n    \r\n                                const brPrev = br.previousSibling, brNext = br.nextSibling;\r\n                                if (!util.isBreak(focusNext) && !util.isBreak(brPrev) && (!brNext || util.onlyZeroWidthSpace(brNext))) {\r\n                                    br.parentNode.insertBefore(br.cloneNode(false), br);\r\n                                    core.setRange(br, 1, br, 1);\r\n                                } else {\r\n                                    core.setRange(brNext, 0, brNext, 0);\r\n                                }\r\n                            }\r\n    \r\n                            event._onShortcutKey = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (selectRange) break;\r\n                    \r\n                    if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\r\n                        const range = core.getRange();\r\n                        if(core.isEdgePoint(range.endContainer, range.endOffset) && util.isList(selectionNode.nextSibling)) {\r\n                            e.preventDefault();\r\n                            const newEl = util.createElement('LI');\r\n                            const br = util.createElement('BR');\r\n                            newEl.appendChild(br);\r\n\r\n                            formatEl.parentNode.insertBefore(newEl, formatEl.nextElementSibling);\r\n                            newEl.appendChild(selectionNode.nextSibling);\r\n                            \r\n                            core.setRange(br, 1, br, 1);\r\n                            break;\r\n                        }\r\n\r\n                        if ((range.commonAncestorContainer.nodeType === 3 ? !range.commonAncestorContainer.nextElementSibling : true) && util.onlyZeroWidthSpace(formatEl.innerText.trim())) {\r\n                            e.preventDefault();\r\n                            let newEl = null;\r\n\r\n                            if (util.isListCell(rangeEl.parentNode)) {\r\n                                rangeEl = formatEl.parentNode.parentNode.parentNode;\r\n                                newEl = util.splitElement(formatEl, null, util.getElementDepth(formatEl) - 2);\r\n                                if (!newEl) {\r\n                                    const newListCell = util.createElement('LI');\r\n                                    newListCell.innerHTML = '<br>';\r\n                                    rangeEl.insertBefore(newListCell, newEl);\r\n                                    newEl = newListCell;\r\n                                }\r\n                            } else {\r\n                                const newFormat = util.isCell(rangeEl.parentNode) ? 'DIV' : util.isList(rangeEl.parentNode) ? 'LI' : (util.isFormatElement(rangeEl.nextElementSibling) && !util.isRangeFormatElement(rangeEl.nextElementSibling)) ? rangeEl.nextElementSibling.nodeName : (util.isFormatElement(rangeEl.previousElementSibling) && !util.isRangeFormatElement(rangeEl.previousElementSibling)) ? rangeEl.previousElementSibling.nodeName : options.defaultTag;\r\n                                newEl = util.createElement(newFormat);\r\n                                const edge = core.detachRangeFormatElement(rangeEl, [formatEl], null, true, true);\r\n                                edge.cc.insertBefore(newEl, edge.ec);\r\n                            }\r\n                            \r\n                            newEl.innerHTML = '<br>';\r\n                            util.removeItemAllParents(formatEl, null, null);\r\n                            core.setRange(newEl, 1, newEl, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (rangeEl && util.getParentElement(rangeEl, 'FIGCAPTION') && util.getParentElement(rangeEl, util.isList)) {\r\n                        e.preventDefault();\r\n                        formatEl = core.appendFormatTag(formatEl, null);\r\n                        core.setRange(formatEl, 0, formatEl, 0);\r\n                    }\r\n\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        const compContext = context[fileComponentName];\r\n                        const container = compContext._container;\r\n                        const sibling = container.previousElementSibling || container.nextElementSibling;\r\n\r\n                        let newEl = null;\r\n                        if (util.isListCell(container.parentNode)) {\r\n                            newEl = util.createElement('BR');\r\n                        } else {\r\n                            newEl = util.createElement((util.isFormatElement(sibling) && !util.isRangeFormatElement(sibling)) ? sibling.nodeName : options.defaultTag);\r\n                            newEl.innerHTML = '<br>';\r\n                        }\r\n\r\n                        container.parentNode.insertBefore(newEl, container);\r\n                        \r\n                        core.callPlugin(fileComponentName, function () {\r\n                            if (core.selectComponent(compContext._element, fileComponentName) === false) core.blur();\r\n                        }, null);\r\n                    }\r\n                    \r\n                    break;\r\n                case 27:\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        core.controllersOff();\r\n                        return false;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (shift && keyCode === 16) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const tablePlugin = core.plugins.table;\r\n                if (tablePlugin && !tablePlugin._shift && !tablePlugin._ref) {\r\n                    const cell = util.getParentElement(formatEl, util.isCell);\r\n                    if (cell) {\r\n                        tablePlugin.onTableCellMultiSelect.call(core, cell, true);\r\n                        return;\r\n                    }\r\n                }\r\n            } else if (shift && (util.isOSX_IOS ? alt : ctrl) && keyCode === 32) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const nbsp = core.insertNode(util.createTextNode('\\u00a0'));\r\n                if (nbsp && nbsp.container) {\r\n                    core.setRange(nbsp.container, nbsp.endOffset, nbsp.container, nbsp.endOffset);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const textKey = !ctrl && !alt && !selectRange && !event._nonTextKeyCode.test(keyCode);\r\n            if (textKey && range.collapsed && range.startContainer === range.endContainer && util.isBreak(range.commonAncestorContainer)) {\r\n                const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                core.insertNode(zeroWidth, null, false);\r\n                core.setRange(zeroWidth, 1, zeroWidth, 1);\r\n            }\r\n        },\r\n\r\n        onKeyUp_wysiwyg: function (e) {\r\n            if (event._onShortcutKey) return;\r\n\r\n            core._editorRange();\r\n            const keyCode = e.keyCode;\r\n            const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\r\n            const alt = e.altKey;\r\n\r\n            if (core.isReadOnly) {\r\n                if (!ctrl && event._directionKeyCode.test(keyCode)) event._applyTagEffects();\r\n                return;\r\n            }\r\n\r\n            const range = core.getRange();\r\n            let selectionNode = core.getSelectionNode();\r\n\r\n            if (core._isBalloon && ((core._isBalloonAlways && keyCode !== 27) || !range.collapsed)) {\r\n                if (core._isBalloonAlways) {\r\n                    if (keyCode !== 27) event._showToolbarBalloonDelay();\r\n                } else {\r\n                    event._showToolbarBalloon();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            /** when format tag deleted */\r\n            if (keyCode === 8 && util.isWysiwygDiv(selectionNode) && selectionNode.textContent === '' && selectionNode.children.length === 0) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                selectionNode.innerHTML = '';\r\n\r\n                const oFormatTag = util.createElement(util.isFormatElement(core._variable.currentNodes[0]) ? core._variable.currentNodes[0] : options.defaultTag);\r\n                oFormatTag.innerHTML = '<br>';\r\n\r\n                selectionNode.appendChild(oFormatTag);\r\n                core.setRange(oFormatTag, 0, oFormatTag, 0);\r\n                event._applyTagEffects();\r\n\r\n                core.history.push(false);\r\n                return;\r\n            }\r\n\r\n            const formatEl = util.getFormatElement(selectionNode, null);\r\n            const rangeEl = util.getRangeFormatElement(selectionNode, null);\r\n            if (!formatEl && range.collapsed && !util.isComponent(selectionNode) && !util.isList(selectionNode) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\r\n                selectionNode = core.getSelectionNode();\r\n            }\r\n\r\n            if (event._directionKeyCode.test(keyCode)) {\r\n                event._applyTagEffects();\r\n            }\r\n\r\n            const textKey = !ctrl && !alt && !event._nonTextKeyCode.test(keyCode);\r\n            if (textKey && selectionNode.nodeType === 3 && util.zeroWidthRegExp.test(selectionNode.textContent) && !(e.isComposing !== undefined ? e.isComposing : event._IEisComposing)) {\r\n                let so = range.startOffset, eo = range.endOffset;\r\n                const frontZeroWidthCnt = (selectionNode.textContent.substring(0, eo).match(event._frontZeroWidthReg) || '').length;\r\n                so = range.startOffset - frontZeroWidthCnt;\r\n                eo = range.endOffset - frontZeroWidthCnt;\r\n                selectionNode.textContent = selectionNode.textContent.replace(util.zeroWidthRegExp, '');\r\n                core.setRange(selectionNode, so < 0 ? 0 : so, selectionNode, eo < 0 ? 0 : eo);\r\n            }\r\n\r\n            core._charCount('');\r\n\r\n            // user event\r\n            if (typeof functions.onKeyUp === 'function' && functions.onKeyUp(e, core) === false) return;\r\n\r\n            // history stack\r\n            if (!ctrl && !alt && !event._historyIgnoreKeyCode.test(keyCode)) {\r\n                core.history.push(true);\r\n            }\r\n        },\r\n\r\n        onScroll_wysiwyg: function (e) {\r\n            core.controllersOff();\r\n            if (core._isBalloon) event._hideToolbar();\r\n\r\n            // user event\r\n            if (typeof functions.onScroll === 'function') functions.onScroll(e, core);\r\n        },\r\n\r\n        onFocus_wysiwyg: function (e) {\r\n            if (core._antiBlur) return;\r\n            core.hasFocus = true;\r\n            event._applyTagEffects();\r\n            \r\n            if (core._isInline) event._showToolbarInline();\r\n\r\n            // user event\r\n            if (typeof functions.onFocus === 'function') functions.onFocus(e, core);\r\n        },\r\n\r\n        onBlur_wysiwyg: function (e) {\r\n            if (core._antiBlur || core._variable.isCodeView) return;\r\n            core.hasFocus = false;\r\n            core.controllersOff();\r\n            if (core._isInline || core._isBalloon) event._hideToolbar();\r\n\r\n            core._setKeyEffect([]);\r\n\r\n            core._variable.currentNodes = [];\r\n            core._variable.currentNodesMap = [];\r\n            if (options.showPathLabel) context.element.navigation.textContent = '';\r\n\r\n            // user event\r\n            if (typeof functions.onBlur === 'function') functions.onBlur(e, core);\r\n        },\r\n\r\n        onMouseDown_resizingBar: function (e) {\r\n            e.stopPropagation();\r\n\r\n            core.submenuOff();\r\n            core.controllersOff();\r\n\r\n            const prevHeight = util.getNumber(context.element.wysiwygFrame.style.height, 0);\r\n            core._variable.resizeClientY = e.clientY;\r\n            context.element.resizeBackground.style.display = 'block';\r\n\r\n            function closureFunc() {\r\n                context.element.resizeBackground.style.display = 'none';\r\n                _d.removeEventListener('mousemove', event._resize_editor);\r\n                _d.removeEventListener('mouseup', closureFunc);\r\n                if (typeof functions.onResizeEditor === 'function') functions.onResizeEditor(util.getNumber(context.element.wysiwygFrame.style.height, 0), prevHeight, core);\r\n            }\r\n\r\n            _d.addEventListener('mousemove', event._resize_editor);\r\n            _d.addEventListener('mouseup', closureFunc);\r\n        },\r\n\r\n        _resize_editor: function (e) {\r\n            const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - core._variable.resizeClientY);\r\n            context.element.wysiwygFrame.style.height = context.element.code.style.height = (resizeInterval < core._variable.minResizingSize ? core._variable.minResizingSize : resizeInterval) + 'px';\r\n            core._variable.resizeClientY = e.clientY;\r\n        },\r\n\r\n        onResize_window: function () {\r\n            core.controllersOff();\r\n\r\n            const responsiveSize = event._responsiveButtonSize;\r\n            if (responsiveSize) {\r\n                let w = 0;\r\n                if ((core._isBalloon || core._isInline) && options.toolbarWidth === 'auto') {\r\n                    w = context.element.topArea.offsetWidth;\r\n                } else {\r\n                    w = context.element.toolbar.offsetWidth;\r\n                }\r\n\r\n                let responsiveWidth = 'default';\r\n                for (let i = 1, len = responsiveSize.length; i < len; i++) {\r\n                    if (w < responsiveSize[i]) {\r\n                        responsiveWidth = responsiveSize[i] + '';\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (event._responsiveCurrentSize !== responsiveWidth) {\r\n                    event._responsiveCurrentSize = responsiveWidth;\r\n                    functions.setToolbarButtons(event._responsiveButtons[responsiveWidth]);\r\n                }\r\n            }\r\n\r\n            if (context.element.toolbar.offsetWidth === 0) return;\r\n\r\n            if (context.fileBrowser && context.fileBrowser.area.style.display === 'block') {\r\n                context.fileBrowser.body.style.maxHeight = (_w.innerHeight - context.fileBrowser.header.offsetHeight - 50) + 'px';\r\n            }\r\n\r\n            if (core.submenuActiveButton && core.submenu) {\r\n                core._setMenuPosition(core.submenuActiveButton, core.submenu);\r\n            }\r\n\r\n            if (core._variable.isFullScreen) {\r\n                core._variable.innerHeight_fullScreen += (_w.innerHeight - context.element.toolbar.offsetHeight) - core._variable.innerHeight_fullScreen;\r\n                context.element.editorArea.style.height = core._variable.innerHeight_fullScreen + 'px';\r\n                return;\r\n            }\r\n\r\n            if (core._variable.isCodeView && core._isInline) {\r\n                event._showToolbarInline();\r\n                return;\r\n            }\r\n            \r\n            core._iframeAutoHeight();\r\n\r\n            if (core._sticky) {\r\n                context.element.toolbar.style.width = (context.element.topArea.offsetWidth - 2) + 'px';\r\n                event.onScroll_window();\r\n            }\r\n        },\r\n\r\n        onScroll_window: function () {\r\n            if (core._variable.isFullScreen || context.element.toolbar.offsetWidth === 0 || options.stickyToolbar < 0) return;\r\n\r\n            const element = context.element;\r\n            const editorHeight = element.editorArea.offsetHeight;\r\n            const y = (this.scrollY || _d.documentElement.scrollTop) + options.stickyToolbar;\r\n            const editorTop = event._getEditorOffsets(options.toolbarContainer).top - (core._isInline ? element.toolbar.offsetHeight : 0);\r\n            const inlineOffset = core._isInline && (y - editorTop) > 0 ? y - editorTop - context.element.toolbar.offsetHeight : 0;\r\n            \r\n            if (y < editorTop) {\r\n                event._offStickyToolbar();\r\n            }\r\n            else if (y + core._variable.minResizingSize >= editorHeight + editorTop) {\r\n                if (!core._sticky) event._onStickyToolbar(inlineOffset);\r\n                element.toolbar.style.top = (inlineOffset + editorHeight + editorTop + options.stickyToolbar - y - core._variable.minResizingSize) + 'px';\r\n            }\r\n            else if (y >= editorTop) {\r\n                event._onStickyToolbar(inlineOffset);\r\n            }\r\n        },\r\n\r\n        _getEditorOffsets: function (container) {\r\n            let offsetEl = container || context.element.topArea;\r\n            let t = 0, l = 0, s = 0;\r\n\r\n            while (offsetEl) {\r\n                t += offsetEl.offsetTop;\r\n                l += offsetEl.offsetLeft;\r\n                s += offsetEl.scrollTop;\r\n                offsetEl = offsetEl.offsetParent;\r\n            }\r\n\r\n            return {\r\n                top: t,\r\n                left: l,\r\n                scroll: s\r\n            };\r\n        },\r\n\r\n        _getPageBottomSpace: function () {\r\n            return _d.documentElement.scrollHeight - (event._getEditorOffsets(null).top + context.element.topArea.offsetHeight);\r\n        },\r\n\r\n        _onStickyToolbar: function (inlineOffset) {\r\n            const element = context.element;\r\n\r\n            if (!core._isInline && !options.toolbarContainer) {\r\n                element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\r\n                element._stickyDummy.style.display = 'block';\r\n            }\r\n\r\n            element.toolbar.style.top = (options.stickyToolbar + inlineOffset) + 'px';\r\n            element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\r\n            util.addClass(element.toolbar, 'se-toolbar-sticky');\r\n            core._sticky = true;\r\n        },\r\n\r\n        _offStickyToolbar: function () {\r\n            const element = context.element;\r\n\r\n            element._stickyDummy.style.display = 'none';\r\n            element.toolbar.style.top = core._isInline ? core._inlineToolbarAttr.top : '';\r\n            element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : '';\r\n            element.editorArea.style.marginTop = '';\r\n\r\n            util.removeClass(element.toolbar, 'se-toolbar-sticky');\r\n            core._sticky = false;\r\n        },\r\n\r\n        _codeViewAutoHeight: function () {\r\n            if (core._variable.isFullScreen) return;\r\n            context.element.code.style.height = context.element.code.scrollHeight + 'px';\r\n        },\r\n\r\n        // FireFox - table delete, Chrome - image, video, audio\r\n        _hardDelete: function () {\r\n            const range = core.getRange();\r\n            const sc = range.startContainer;\r\n            const ec = range.endContainer;\r\n            \r\n            // table\r\n            const sCell = util.getRangeFormatElement(sc);\r\n            const eCell = util.getRangeFormatElement(ec);\r\n            const sIsCell = util.isCell(sCell);\r\n            const eIsCell = util.isCell(eCell);\r\n            const ancestor = range.commonAncestorContainer;\r\n            if (((sIsCell && !sCell.previousElementSibling && !sCell.parentElement.previousElementSibling) || (eIsCell && !eCell.nextElementSibling && !eCell.parentElement.nextElementSibling)) && sCell !== eCell) {\r\n                if (!sIsCell) {\r\n                    util.removeItem(util.getParentElement(eCell, function(current) {return ancestor === current.parentNode;}));\r\n                } else if (!eIsCell) {\r\n                    util.removeItem(util.getParentElement(sCell, function(current) {return ancestor === current.parentNode;}));\r\n                } else {\r\n                    util.removeItem(util.getParentElement(sCell, function(current) {return ancestor === current.parentNode;}));\r\n                    core.nativeFocus();\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // component\r\n            const sComp = sc.nodeType === 1 ? util.getParentElement(sc, '.se-component') : null;\r\n            const eComp = ec.nodeType === 1 ? util.getParentElement(ec, '.se-component') : null;\r\n            if (sComp) util.removeItem(sComp);\r\n            if (eComp) util.removeItem(eComp);\r\n\r\n            return false;\r\n        },\r\n\r\n        onPaste_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n            if (!clipboardData) return true;\r\n            return event._dataTransferAction('paste', e, clipboardData);\r\n        },\r\n\r\n        _setClipboardComponent: function (e, info, clipboardData) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            clipboardData.setData('text/html', info.component.outerHTML);\r\n        },\r\n\r\n        onCopy_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n            \r\n            // user event\r\n            if (typeof functions.onCopy === 'function' && !functions.onCopy(e, clipboardData, core)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const info = core.currentFileComponentInfo;\r\n            if (info && !util.isIE) {\r\n                event._setClipboardComponent(e, info, clipboardData);\r\n                util.addClass(info.component, 'se-component-copy');\r\n                // copy effect\r\n                _w.setTimeout(function () {\r\n                    util.removeClass(info.component, 'se-component-copy');\r\n                }, 150);\r\n            }\r\n        },\r\n\r\n        onSave_wysiwyg: function (content) {\r\n            // user event\r\n            if (typeof functions.onSave === 'function') {\r\n                functions.onSave(content, core);\r\n                return;\r\n            }\r\n        },\r\n\r\n        onCut_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n\r\n            // user event\r\n            if (typeof functions.onCut === 'function' && !functions.onCut(e, clipboardData, core)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const info = core.currentFileComponentInfo;\r\n            if (info && !util.isIE) {\r\n                event._setClipboardComponent(e, info, clipboardData);\r\n                util.removeItem(info.component);\r\n                core.controllersOff();\r\n            }\r\n\r\n            _w.setTimeout(function () {\r\n                // history stack\r\n                core.history.push(false);\r\n            });\r\n        },\r\n\r\n        onDrop_wysiwyg: function (e) {\r\n            if (core.isReadOnly || util.isIE) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const dataTransfer = e.dataTransfer;\r\n            if (!dataTransfer) return true;\r\n\r\n            core.removeNode();\r\n            event._setDropLocationSelection(e);\r\n            return event._dataTransferAction('drop', e, dataTransfer);\r\n        },\r\n\r\n        _setDropLocationSelection: function (e) {\r\n            if (e.rangeParent) {\r\n                core.setRange(e.rangeParent, e.rangeOffset, e.rangeParent, e.rangeOffset);\r\n            } else if (core._wd.caretRangeFromPoint) {\r\n                const r = core._wd.caretRangeFromPoint(e.clientX, e.clientY);\r\n                core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\r\n            } else {\r\n                const r = core.getRange();\r\n                core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\r\n            }\r\n        },\r\n\r\n        _dataTransferAction: function (type, e, data) {\r\n            let plainText, cleanData;\r\n            if (util.isIE) {\r\n                plainText = data.getData('Text');\r\n                \r\n                const range = core.getRange();\r\n                const tempDiv = util.createElement('DIV');\r\n                const tempRange = {\r\n                    sc: range.startContainer,\r\n                    so: range.startOffset,\r\n                    ec: range.endContainer,\r\n                    eo: range.endOffset\r\n                };\r\n\r\n                tempDiv.setAttribute('contenteditable', true);\r\n                tempDiv.style.cssText = 'position:absolute; top:0; left:0; width:1px; height:1px; overflow:hidden;';\r\n                \r\n                context.element.relative.appendChild(tempDiv);\r\n                tempDiv.focus();\r\n\r\n                _w.setTimeout(function () {\r\n                    cleanData = tempDiv.innerHTML;\r\n                    util.removeItem(tempDiv);\r\n                    core.setRange(tempRange.sc, tempRange.so, tempRange.ec, tempRange.eo);\r\n                    event._setClipboardData(type, e, plainText, cleanData, data);\r\n                });\r\n\r\n                return true;\r\n            } else {\r\n                plainText = data.getData('text/plain');\r\n                cleanData = data.getData('text/html');\r\n                if (event._setClipboardData(type, e, plainText, cleanData, data) === false) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setClipboardData: function (type, e, plainText, cleanData, data) {\r\n            // MS word, OneNode, Excel\r\n            const MSData = /class=[\"']*Mso(Normal|List)/i.test(cleanData) || /content=[\"']*Word.Document/i.test(cleanData) || /content=[\"']*OneNote.File/i.test(cleanData) || /content=[\"']*Excel.Sheet/i.test(cleanData);\r\n            const onlyText = !cleanData;\r\n\r\n            if (!onlyText) {\r\n                if (MSData) {\r\n                    cleanData = cleanData.replace(/\\n/g, ' ');\r\n                    plainText = plainText.replace(/\\n/g, ' ');\r\n                } else {\r\n                    cleanData = (plainText === cleanData ? plainText : cleanData).replace(/\\n/g, '<br>');\r\n                }\r\n                cleanData = core.cleanHTML(cleanData, core.pasteTagsWhitelistRegExp, core.pasteTagsBlacklistRegExp);\r\n            } else {\r\n                cleanData = util._HTMLConvertor(plainText).replace(/\\n/g, '<br>');\r\n            }\r\n\r\n            const maxCharCount = core._charCount(core._charTypeHTML ? cleanData : plainText);\r\n            // user event - paste\r\n            if (type === 'paste' && typeof functions.onPaste === 'function') {\r\n                const value = functions.onPaste(e, cleanData, maxCharCount, core);\r\n                if (!value) return false;\r\n                if (typeof value === 'string') cleanData = value;\r\n            }\r\n            // user event - drop\r\n            if (type === 'drop' && typeof functions.onDrop === 'function') {\r\n                const value = functions.onDrop(e, cleanData, maxCharCount, core);\r\n                if (!value) return false;\r\n                if (typeof value === 'string') cleanData = value;\r\n            }\r\n\r\n            // files\r\n            const files = data.files;\r\n            if (files.length > 0 && !MSData) {\r\n                if (/^image/.test(files[0].type) && core.plugins.image) {\r\n                    functions.insertImage(files);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            if (!maxCharCount) {\r\n                return false;\r\n            }\r\n\r\n            if (cleanData) {\r\n                functions.insertHTML(cleanData, true, false);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        onMouseMove_wysiwyg: function (e) {\r\n            if (core.isDisabled || core.isReadOnly) return false;\r\n            const component = util.getParentElement(e.target, util.isComponent);\r\n            const lineBreakerStyle = core._lineBreaker.style;\r\n            \r\n            if (component && !core.currentControllerName) {\r\n                const ctxEl = context.element;\r\n                let scrollTop = 0;\r\n                let el = ctxEl.wysiwyg;\r\n                do {\r\n                    scrollTop += el.scrollTop;\r\n                    el = el.parentElement;\r\n                } while (el && !/^(BODY|HTML)$/i.test(el.nodeName));\r\n\r\n                const wScroll = ctxEl.wysiwyg.scrollTop;\r\n                const offsets = event._getEditorOffsets(null);\r\n                const componentTop = util.getOffset(component, ctxEl.wysiwygFrame).top + wScroll;\r\n                const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? ctxEl.toolbar.offsetHeight : 0);\r\n                const c = componentTop + (options.iframe ? scrollTop : offsets.top);\r\n\r\n                const isList = util.isListCell(component.parentNode);\r\n                let dir = '', top = '';\r\n                if ((isList ? !component.previousSibling : !util.isFormatElement(component.previousElementSibling)) && y < (c + 20)) {\r\n                    top = componentTop;\r\n                    dir = 't';\r\n                } else if ((isList ? !component.nextSibling : !util.isFormatElement(component.nextElementSibling)) && y > (c + component.offsetHeight - 20)) {\r\n                    top = componentTop + component.offsetHeight;\r\n                    dir = 'b';\r\n                } else {\r\n                    lineBreakerStyle.display = 'none';\r\n                    return;\r\n                }\r\n\r\n                core._variable._lineBreakComp = component;\r\n                core._variable._lineBreakDir = dir;\r\n                lineBreakerStyle.top = (top - wScroll) + 'px';\r\n                core._lineBreakerButton.style.left = (util.getOffset(component).left + (component.offsetWidth / 2) - 15) + 'px';\r\n                lineBreakerStyle.display = 'block';\r\n            } // off line breaker\r\n            else if (lineBreakerStyle.display !== 'none') {\r\n                lineBreakerStyle.display = 'none';\r\n            }\r\n        },\r\n\r\n        _onMouseDown_lineBreak: function (e) {\r\n            e.preventDefault();\r\n        },\r\n\r\n        _onLineBreak: function (e) {\r\n            e.preventDefault();\r\n            \r\n            const component = core._variable._lineBreakComp;\r\n            const dir = !this ? core._variable._lineBreakDir : this;\r\n            const isList = util.isListCell(component.parentNode);\r\n\r\n            const format = util.createElement(isList ? 'BR' : util.isCell(component.parentNode) ? 'DIV' : options.defaultTag);\r\n            if (!isList) format.innerHTML = '<br>';\r\n\r\n            if (core._charTypeHTML && !core.checkCharCount(format.outerHTML, 'byte-html')) return;\r\n\r\n            component.parentNode.insertBefore(format, dir === 't' ? component : component.nextSibling);\r\n            core._lineBreaker.style.display = 'none';\r\n            core._variable._lineBreakComp = null;\r\n\r\n            const focusEl = isList ? format : format.firstChild;\r\n            core.setRange(focusEl, 1, focusEl, 1);\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        _addEvent: function () {\r\n            const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\r\n\r\n            /** toolbar event */\r\n            context.element.toolbar.addEventListener('mousedown', event._buttonsEventHandler, false);\r\n            context.element._menuTray.addEventListener('mousedown', event._buttonsEventHandler, false);\r\n            context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\r\n            /** editor area */\r\n            eventWysiwyg.addEventListener('mousedown', event.onMouseDown_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\r\n            eventWysiwyg.addEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('copy', event.onCopy_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('cut', event.onCut_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('focus', event.onFocus_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('blur', event.onBlur_wysiwyg, false);\r\n\r\n            /** line breaker */\r\n            event._lineBreakerBind = { a: event._onLineBreak.bind(''), t: event._onLineBreak.bind('t'), b: event._onLineBreak.bind('b') };\r\n            eventWysiwyg.addEventListener('mousemove', event.onMouseMove_wysiwyg, false);\r\n            core._lineBreakerButton.addEventListener('mousedown', event._onMouseDown_lineBreak, false);\r\n            core._lineBreakerButton.addEventListener('click', event._lineBreakerBind.a, false);\r\n            context.element.lineBreaker_t.addEventListener('mousedown', event._lineBreakerBind.t, false);\r\n            context.element.lineBreaker_b.addEventListener('mousedown', event._lineBreakerBind.b, false);\r\n\r\n            /** Events are registered only when there is a table plugin.  */\r\n            if (core.plugins.table) {\r\n                eventWysiwyg.addEventListener('touchstart', event.onMouseDown_wysiwyg, {passive: true, useCapture: false});\r\n            }\r\n            \r\n            /** code view area auto line */\r\n            if (options.height === 'auto' && !options.codeMirrorEditor) {\r\n                context.element.code.addEventListener('keydown', event._codeViewAutoHeight, false);\r\n                context.element.code.addEventListener('keyup', event._codeViewAutoHeight, false);\r\n                context.element.code.addEventListener('paste', event._codeViewAutoHeight, false);\r\n            }\r\n\r\n            /** resizingBar */\r\n            if (context.element.resizingBar) {\r\n                if (/\\d+/.test(options.height) && options.resizeEnable) {\r\n                    context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\r\n                } else {\r\n                    util.addClass(context.element.resizingBar, 'se-resizing-none');\r\n                }\r\n            }\r\n            \r\n            /** window event */\r\n            event._setResponsiveToolbar();\r\n            _w.removeEventListener('resize', event.onResize_window);\r\n            _w.removeEventListener('scroll', event.onScroll_window);\r\n\r\n            _w.addEventListener('resize', event.onResize_window, false);\r\n            if (options.stickyToolbar > -1) {\r\n                _w.addEventListener('scroll', event.onScroll_window, false);\r\n            }\r\n        },\r\n\r\n        _removeEvent: function () {\r\n            const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\r\n\r\n            context.element.toolbar.removeEventListener('mousedown', event._buttonsEventHandler);\r\n            context.element._menuTray.removeEventListener('mousedown', event._buttonsEventHandler);\r\n            context.element.toolbar.removeEventListener('click', event.onClick_toolbar);\r\n\r\n            eventWysiwyg.removeEventListener('mousedown', event.onMouseDown_wysiwyg);\r\n            eventWysiwyg.removeEventListener('click', event.onClick_wysiwyg);\r\n            eventWysiwyg.removeEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg);\r\n            eventWysiwyg.removeEventListener('keydown', event.onKeyDown_wysiwyg);\r\n            eventWysiwyg.removeEventListener('keyup', event.onKeyUp_wysiwyg);\r\n            eventWysiwyg.removeEventListener('paste', event.onPaste_wysiwyg);\r\n            eventWysiwyg.removeEventListener('copy', event.onCopy_wysiwyg);\r\n            eventWysiwyg.removeEventListener('cut', event.onCut_wysiwyg);\r\n            eventWysiwyg.removeEventListener('drop', event.onDrop_wysiwyg);\r\n            eventWysiwyg.removeEventListener('scroll', event.onScroll_wysiwyg);\r\n\r\n            eventWysiwyg.removeEventListener('mousemove', event.onMouseMove_wysiwyg);\r\n            core._lineBreakerButton.removeEventListener('mousedown', event._onMouseDown_lineBreak);\r\n            core._lineBreakerButton.removeEventListener('click', event._lineBreakerBind.a);\r\n            context.element.lineBreaker_t.removeEventListener('mousedown', event._lineBreakerBind.t);\r\n            context.element.lineBreaker_b.removeEventListener('mousedown', event._lineBreakerBind.b);\r\n            event._lineBreakerBind = null;\r\n            \r\n            eventWysiwyg.removeEventListener('touchstart', event.onMouseDown_wysiwyg, {passive: true, useCapture: false});\r\n            \r\n            eventWysiwyg.removeEventListener('focus', event.onFocus_wysiwyg);\r\n            eventWysiwyg.removeEventListener('blur', event.onBlur_wysiwyg);\r\n\r\n            context.element.code.removeEventListener('keydown', event._codeViewAutoHeight);\r\n            context.element.code.removeEventListener('keyup', event._codeViewAutoHeight);\r\n            context.element.code.removeEventListener('paste', event._codeViewAutoHeight);\r\n            \r\n            if (context.element.resizingBar) {\r\n                context.element.resizingBar.removeEventListener('mousedown', event.onMouseDown_resizingBar);\r\n            }\r\n            \r\n            _w.removeEventListener('resize', event.onResize_window);\r\n            _w.removeEventListener('scroll', event.onScroll_window);\r\n        },\r\n\r\n        _setResponsiveToolbar: function () {\r\n            if (_responsiveButtons.length === 0) {\r\n                _responsiveButtons = null;\r\n                return;\r\n            }\r\n\r\n            event._responsiveCurrentSize = 'default';\r\n            const sizeArray = event._responsiveButtonSize = [];\r\n            const buttonsObj = event._responsiveButtons = {default: _responsiveButtons[0]};\r\n            for (let i = 1, len = _responsiveButtons.length, size, buttonGroup; i < len; i++) {\r\n                buttonGroup = _responsiveButtons[i];\r\n                size = buttonGroup[0] * 1;\r\n                sizeArray.push(size);\r\n                buttonsObj[size] = buttonGroup[1];\r\n            }\r\n\r\n            sizeArray.sort(function (a, b) { return a - b; }).unshift('default');\r\n        }\r\n    };\r\n\r\n    /** functions */\r\n    const functions = {\r\n        /**\r\n         * @description Core, Util object\r\n         */\r\n        core: core,\r\n        util: util,\r\n\r\n        /**\r\n         * @description Event functions\r\n         * @param {Object} e Event Object\r\n         * @param {Object} core Core object\r\n         */\r\n        onload: null,\r\n        onScroll: null,\r\n        onMouseDown: null,\r\n        onClick: null,\r\n        onInput: null,\r\n        onKeyDown: null,\r\n        onKeyUp: null,\r\n        onCopy: null,\r\n        onCut: null,\r\n        onFocus: null,\r\n        onBlur: null,\r\n\r\n        /**\r\n         * @description Event functions\r\n         * @param {String} contents Current contents\r\n         * @param {Object} core Core object\r\n         */\r\n        onChange: null,\r\n\r\n         /**\r\n         * @description Event functions\r\n         * @param {String} contents Current contents\r\n         * @param {Object} core Core object\r\n         */\r\n          onSave: null,\r\n\r\n        /**\r\n         * @description Event functions (drop, paste)\r\n         * When false is returned, the default behavior is stopped.\r\n         * If the string is returned, the cleanData value is modified to the return value.\r\n         * @param {Object} e Event object.\r\n         * @param {String} cleanData HTML string modified for editor format.\r\n         * @param {Boolean} maxChartCount option (true if max character is exceeded)\r\n         * @param {Object} core Core object\r\n         * @returns {Boolean|String}\r\n         */\r\n        onDrop: null,\r\n        onPaste: null,\r\n\r\n        /**\r\n         * @description Called just before the inline toolbar is positioned and displayed on the screen.\r\n         * @param {Element} toolbar Toolbar Element\r\n         * @param {Object} context The editor's context object (editor.getContext())\r\n         * @param {Object} core Core object\r\n         */\r\n        showInline: null,\r\n\r\n        /**\r\n         * @description Called just after the controller is positioned and displayed on the screen.\r\n         * controller - editing elements displayed on the screen [image resizing, table editor, link editor..]]\r\n         * @param {String} name The name of the plugin that called the controller\r\n         * @param {Array} controllers Array of Controller elements\r\n         * @param {Object} core Core object\r\n         */\r\n        showController: null,\r\n\r\n        /**\r\n         * @description An event when toggling between code view and wysiwyg view.\r\n         * @param {Boolean} isCodeView Whether the current code view mode\r\n         * @param {Object} core Core object\r\n         */\r\n        toggleCodeView: null,\r\n\r\n        /**\r\n         * @description An event when toggling full screen.\r\n         * @param {Boolean} isFullScreen Whether the current full screen mode\r\n         * @param {Object} core Core object\r\n         */\r\n        toggleFullScreen: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the image upload\r\n         * @param {Object} response Response object\r\n         * @param {Object} info Input information\r\n         * - linkValue: Link url value\r\n         * - linkNewWindow: Open in new window Check Value\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update image if true, create image if false\r\n         * - element: If isUpdate is true, the currently selected image.\r\n         * @param {Object} core Core object\r\n         */\r\n        imageUploadHandler: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the video upload\r\n         * @param xmlHttp xmlHttpRequest object\r\n         * @param info Input information\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update video if true, create video if false\r\n         * - element: If isUpdate is true, the currently selected video.\r\n         * @param core Core object\r\n         */\r\n        videoUploadHandler: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the audio upload\r\n         * @param xmlHttp xmlHttpRequest object\r\n         * @param info Input information\r\n         * - isUpdate: Update audio if true, create audio if false\r\n         * - element: If isUpdate is true, the currently selected audio.\r\n         * @param core Core object\r\n         */\r\n        audioUploadHandler: null,\r\n\r\n        /**\r\n         * @description Called before the image is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no image upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - linkValue: Link url value\r\n         * - linkNewWindow: Open in new window Check Value\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update image if true, create image if false\r\n         * - element: If isUpdate is true, the currently selected image.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"imageUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onImageUploadBefore: null,\r\n        /**\r\n         * @description Called before the video is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no video(iframe, video) upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update video if true, create video if false\r\n         * - element: If isUpdate is true, the currently selected video.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"videoUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onVideoUploadBefore: null,\r\n        /**\r\n         * @description Called before the audio is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no audio upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - isUpdate: Update audio if true, create audio if false\r\n         * - element: If isUpdate is true, the currently selected audio.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"audioUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onAudioUploadBefore: null,\r\n\r\n        /**\r\n         * @description Called when the image is uploaded, updated, deleted\r\n         * @param {Element} targetElement Target element\r\n         * @param {Number} index Uploaded index\r\n         * @param {String} state Upload status ('create', 'update', 'delete')\r\n         * @param {Object} info Image info object\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @param {Number} remainingFilesCount Count of remaining files to upload (0 when added as a url)\r\n         * @param {Object} core Core object\r\n         */\r\n        onImageUpload: null,\r\n         /**\r\n         * @description Called when the video(iframe, video) is is uploaded, updated, deleted\r\n         * -- arguments is same \"onImageUpload\" --\r\n         */\r\n        onVideoUpload: null,\r\n         /**\r\n         * @description Called when the audio is is uploaded, updated, deleted\r\n         * -- arguments is same \"onImageUpload\" --\r\n         */\r\n        onAudioUpload: null,\r\n\r\n        /**\r\n         * @description Called when the image is upload failed\r\n         * @param {String} errorMessage Error message\r\n         * @param {Object} result Response Object\r\n         * @param {Object} core Core object\r\n         * @returns {Boolean}\r\n         */\r\n        onImageUploadError: null,\r\n        /**\r\n         * @description Called when the video(iframe, video) upload failed\r\n         * -- arguments is same \"onImageUploadError\" --\r\n         */\r\n        onVideoUploadError: null,\r\n        /**\r\n         * @description Called when the audio upload failed\r\n         * -- arguments is same \"onImageUploadError\" --\r\n         */\r\n        onAudioUploadError: null,\r\n\r\n        /**\r\n         * @description Called when the editor is resized using the bottom bar\r\n         */\r\n        onResizeEditor: null,\r\n\r\n        /**\r\n         * @description Called after the \"setToolbarButtons\" invocation.\r\n         * Can be used to tweak buttons properties (useful for custom buttons)\r\n         * @param {Array} buttonList Button list \r\n         * @param {Object} core Core object\r\n         */\r\n        onSetToolbarButtons: null,\r\n\r\n        /**\r\n         * @description Reset the buttons on the toolbar. (Editor is not reloaded)\r\n         * You cannot set a new plugin for the button.\r\n         * @param {Array} buttonList Button list \r\n         */\r\n        setToolbarButtons: function (buttonList) {\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.moreLayerOff();\r\n            \r\n            const newToolbar = _Constructor._createToolBar(_d, buttonList, core.plugins, options);\r\n            _responsiveButtons = newToolbar.responsiveButtons;\r\n            event._setResponsiveToolbar();\r\n\r\n            context.element.toolbar.replaceChild(newToolbar._buttonTray, context.element._buttonTray);\r\n            const newContext = _Context(context.element.originElement, core._getConstructed(context.element), options);\r\n\r\n            context.element = newContext.element;\r\n            context.tool = newContext.tool;\r\n            if (options.iframe) context.element.wysiwyg = core._wd.body;\r\n\r\n            core.recoverButtonStates();\r\n\r\n            core._cachingButtons();\r\n            core.history._resetCachingButton();\r\n\r\n            if (core.hasFocus) event._applyTagEffects();\r\n            if (core.isReadOnly) util.setDisabledButtons(true, core.resizingDisabledButtons);\r\n            if (typeof functions.onSetToolbarButtons === 'function') functions.onSetToolbarButtons(newToolbar._buttonTray.querySelectorAll('button'), core);\r\n        },\r\n\r\n        /**\r\n         * @description Add or reset option property (Editor is reloaded)\r\n         * @param {Object} _options Options\r\n         */\r\n        setOptions: function (_options) {\r\n            event._removeEvent();\r\n            core._resetComponents();\r\n            \r\n            util.removeClass(core._styleCommandMap.showBlocks, 'active');\r\n            util.removeClass(core._styleCommandMap.codeView, 'active');\r\n            core._variable.isCodeView = false;\r\n            core._iframeAuto = null;\r\n\r\n            core.plugins = _options.plugins || core.plugins;\r\n            const mergeOptions = [options, _options].reduce(function (init, option) {\r\n                for (let key in option) {\r\n                    if (!util.hasOwn(option, key)) continue;\r\n                    if (key === 'plugins' && option[key] && init[key]) {\r\n                        let i = init[key], o = option[key];\r\n                        i = i.length ? i : _w.Object.keys(i).map(function(name) { return i[name]; });\r\n                        o = o.length ? o : _w.Object.keys(o).map(function(name) { return o[name]; });\r\n                        init[key] = (o.filter(function(val) { return i.indexOf(val) === -1; })).concat(i);\r\n                    } else {\r\n                        init[key] = option[key];\r\n                    }\r\n                }\r\n                return init;\r\n            }, {});\r\n\r\n            const el = context.element;\r\n            const _initHTML = el.wysiwyg.innerHTML;\r\n\r\n            // set option\r\n            const cons = _Constructor._setOptions(mergeOptions, context, options);\r\n\r\n            if (cons.callButtons) {\r\n                pluginCallButtons = cons.callButtons;\r\n                core.initPlugins = {};\r\n            }\r\n\r\n            if (cons.plugins) {\r\n                core.plugins = plugins = cons.plugins;\r\n            }\r\n\r\n            // reset context\r\n            if (el._menuTray.children.length === 0) this._menuTray = {};\r\n            _responsiveButtons = cons.toolbar.responsiveButtons;\r\n            core.options = options = mergeOptions;\r\n            core.lang = lang = options.lang;\r\n\r\n            if (options.iframe) {\r\n                el.wysiwygFrame.addEventListener('load', function () {\r\n                    util._setIframeDocument(this, options);\r\n                    core._setOptionsInit(el, _initHTML);\r\n                });\r\n            }\r\n\r\n            el.editorArea.appendChild(el.wysiwygFrame);\r\n\r\n            if (!options.iframe) {\r\n                core._setOptionsInit(el, _initHTML);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set \"options.defaultStyle\" style.\r\n         * Define the style of the edit area\r\n         * It can also be defined with the \"setOptions\" method, but the \"setDefaultStyle\" method does not render the editor again.\r\n         * @param {String} style Style string\r\n         */\r\n        setDefaultStyle: function (style) {\r\n            const newStyles = options._editorStyles = util._setDefaultOptionStyle(options, style);\r\n            const el = context.element;\r\n\r\n            // top area\r\n            el.topArea.style.cssText = newStyles.top;\r\n            // code view\r\n            el.code.style.cssText = options._editorStyles.frame;\r\n            el.code.style.display = 'none';\r\n            if (options.height === 'auto') {\r\n                el.code.style.overflow = 'hidden';\r\n            } else {\r\n                el.code.style.overflow = '';\r\n            }\r\n            // wysiwyg frame\r\n            if (!options.iframe) {\r\n                el.wysiwygFrame.style.cssText = newStyles.frame + newStyles.editor;\r\n            } else {\r\n                el.wysiwygFrame.style.cssText = newStyles.frame;\r\n                el.wysiwyg.style.cssText = newStyles.editor;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Open a notice area\r\n         * @param {String} message Notice message\r\n         */\r\n        noticeOpen: function (message) {\r\n            core.notice.open.call(core, message);\r\n        },\r\n\r\n        /**\r\n         * @description Close a notice area\r\n         */\r\n        noticeClose: function () {\r\n            core.notice.close.call(core);\r\n        },\r\n\r\n        /**\r\n         * @description Copying the contents of the editor to the original textarea and execute onSave callback\r\n         */\r\n        save: function () {\r\n            const contents = core.getContents(false);\r\n            context.element.originElement.value = contents;\r\n            event.onSave_wysiwyg(contents, core);\r\n        },\r\n\r\n        /**\r\n         * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n         * @returns {Object}\r\n         */\r\n        getContext: function () {\r\n            return context;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the contents of the suneditor\r\n         * @param {Boolean} onlyContents - Return only the contents of the body without headers when the \"fullPage\" option is true\r\n         * @returns {String}\r\n         */\r\n        getContents: function (onlyContents) {\r\n            return core.getContents(onlyContents);\r\n        },\r\n\r\n        /**\r\n         * @description Gets only the text of the suneditor contents\r\n         * @returns {String}\r\n         */\r\n        getText: function () {\r\n            return context.element.wysiwyg.textContent;\r\n        },\r\n\r\n        /**\r\n         * @description Get the editor's number of characters or binary data size.\r\n         * You can use the \"charCounterType\" option format.\r\n         * @param {String|null} charCounterType options - charCounterType ('char', 'byte', 'byte-html')\r\n         * If argument is no value, the currently set \"charCounterType\" option is used.\r\n         * @returns {Number}\r\n         */\r\n        getCharCount: function (charCounterType) {\r\n            charCounterType = typeof charCounterType === 'string' ? charCounterType : options.charCounterType;\r\n            return core.getCharLength((core._charTypeHTML ? context.element.wysiwyg.innerHTML : context.element.wysiwyg.textContent), charCounterType);\r\n        },\r\n\r\n        /**\r\n         * @description Gets uploaded images informations\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @returns {Array}\r\n         */\r\n        getImagesInfo: function () {\r\n            return context.image ? context.image._infoList : [];\r\n        },\r\n        \r\n        /**\r\n         * @description Gets uploaded files(plugin using fileManager) information list.\r\n         * image: [img], video: [video, iframe], audio: [audio]\r\n         * When the argument value is 'image', it is the same function as \"getImagesInfo\".\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @param {String} pluginName Plugin name (image, video, audio)\r\n         * @returns {Array}\r\n         */\r\n        getFilesInfo: function (pluginName) {\r\n            return context[pluginName] ? context[pluginName]._infoList : [];\r\n        },\r\n\r\n        /**\r\n         * @description Upload images using image plugin\r\n         * @param {FileList} files FileList\r\n         */\r\n        insertImage: function (files) {\r\n            if (!core.plugins.image || !files) return;\r\n\r\n            if (!core.initPlugins.image) core.callPlugin('image', core.plugins.image.submitAction.bind(core, files), null);\r\n            else core.plugins.image.submitAction.call(core, files);\r\n            core.focus();\r\n        },\r\n\r\n        /**\r\n         * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n         * @param {Element|String} html HTML Element or HTML string or plain string\r\n         * @param {Boolean} notCleaningData If true, inserts the HTML string without refining it with core.cleanHTML.\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @param {Boolean} rangeSelection If true, range select the inserted node.\r\n         */\r\n        insertHTML: function (html, notCleaningData, checkCharCount, rangeSelection) {\r\n            if (typeof html === 'string') {\r\n                if (!notCleaningData) html = core.cleanHTML(html, null, null);\r\n                try {\r\n                    const dom = _d.createRange().createContextualFragment(html);\r\n                    const domTree = dom.childNodes;\r\n\r\n                    if (checkCharCount) {\r\n                        const type = core._charTypeHTML ? 'outerHTML' : 'textContent';\r\n                        let checkHTML = '';\r\n                        for (let i = 0, len = domTree.length; i < len; i++) {\r\n                            checkHTML += domTree[i][type];\r\n                        }\r\n                        if (!core.checkCharCount(checkHTML, null)) return;\r\n                    }\r\n\r\n                    let c, a, t, prev, firstCon;\r\n                    while ((c = domTree[0])) {\r\n                        if (prev && prev.nodeType === 3 && a && a.nodeType === 1 && util.isBreak(c)) {\r\n                            prev = c;\r\n                            util.removeItem(c);\r\n                            continue;\r\n                        }\r\n                        t = core.insertNode(c, a, false);\r\n                        a = t.container || t;\r\n                        if (!firstCon) firstCon = t;\r\n                        prev = c;\r\n                    }\r\n\r\n                    if (prev.nodeType === 3 && a.nodeType === 1) a = prev;\r\n                    const offset = a.nodeType === 3 ? (t.endOffset || a.textContent.length): a.childNodes.length;\r\n                    if (rangeSelection) core.setRange(firstCon.container || firstCon, firstCon.startOffset || 0, a, offset);\r\n                    else core.setRange(a, offset, a, offset);\r\n                } catch (error) {\r\n                    if (core.isDisabled || core.isReadOnly) return;\r\n                    console.warn('[SUNEDITOR.insertHTML.fail] ' + error);\r\n                    core.execCommand('insertHTML', false, html);\r\n                }\r\n            } else {\r\n                if (util.isComponent(html)) {\r\n                    core.insertComponent(html, false, checkCharCount, false);\r\n                } else {\r\n                    let afterNode = null;\r\n                    if (util.isFormatElement(html) || util.isMedia(html)) {\r\n                        afterNode = util.getFormatElement(core.getSelectionNode(), null);\t\r\n                    }\r\n                    core.insertNode(html, afterNode, checkCharCount);\r\n                }\r\n            }\r\n            \r\n            core.effectNode = null;\r\n            core.focus();\r\n\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Change the contents of the suneditor\r\n         * @param {String|undefined} contents Contents to Input\r\n         */\r\n        setContents: function (contents) {\r\n            core.setContents(contents);\r\n        },\r\n\r\n        /**\r\n         * @description Add contents to the suneditor\r\n         * @param {String} contents Contents to Input\r\n         */\r\n        appendContents: function (contents) {\r\n            const convertValue = core.convertContentsForEditor(contents);\r\n            \r\n            if (!core._variable.isCodeView) {\r\n                const temp = util.createElement('DIV');\r\n                temp.innerHTML = convertValue;\r\n\r\n                const wysiwyg = context.element.wysiwyg;\r\n                const children = temp.children;\r\n                for (let i = 0, len = children.length; i < len; i++) {\r\n                    wysiwyg.appendChild(children[i]);\r\n                }\r\n            } else {\r\n                core._setCodeView(core._getCodeView() + '\\n' + core.convertHTMLForCodeView(convertValue, false));\r\n            }\r\n\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Switch to or off \"ReadOnly\" mode.\r\n         * @param {Boolean} value \"readOnly\" boolean value.\r\n         */\r\n        readOnly: function (value) {\r\n            core.isReadOnly = value;\r\n            \r\n            util.setDisabledButtons(!!value, core.resizingDisabledButtons);\r\n\r\n            if (value) {\r\n                /** off menus */\r\n                core.controllersOff();\r\n                if (core.submenuActiveButton && core.submenuActiveButton.disabled) core.submenuOff();\r\n                if (core._moreLayerActiveButton && core._moreLayerActiveButton.disabled) core.moreLayerOff();\r\n                if (core.containerActiveButton && core.containerActiveButton.disabled) core.containerOff();\r\n                if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n                context.element.code.setAttribute(\"readOnly\", \"true\");\r\n            } else {\r\n                context.element.code.removeAttribute(\"readOnly\");\r\n            }\r\n\r\n            if (options.codeMirrorEditor) options.codeMirrorEditor.setOption('readOnly', !!value);\r\n        },\r\n\r\n        /**\r\n         * @description Disable the suneditor\r\n         */\r\n        disable: function () {\r\n            this.toolbar.disable();\r\n            this.wysiwyg.disable();\r\n        },\r\n\r\n        /**\r\n         * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n         */\r\n         disabled: function () {\r\n            this.disable();\r\n        },\r\n\r\n        /**\r\n         * @description Enable the suneditor\r\n         */\r\n        enable: function () {\r\n            this.toolbar.enable();\r\n            this.wysiwyg.enable();\r\n        },\r\n\r\n        /**\r\n         * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n         */\r\n         enabled: function () {\r\n            this.enable();\r\n        },\r\n\r\n        /**\r\n         * @description Show the suneditor\r\n         */\r\n        show: function () {\r\n            const topAreaStyle = context.element.topArea.style;\r\n            if (topAreaStyle.display === 'none') topAreaStyle.display = options.display;\r\n        },\r\n\r\n        /**\r\n         * @description Hide the suneditor\r\n         */\r\n        hide: function () {\r\n            context.element.topArea.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Destroy the suneditor\r\n         */\r\n        destroy: function () {\r\n            /** off menus */\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.controllersOff();\r\n            if (core.notice) core.notice.close.call(core);\r\n            if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n            /** remove history */\r\n            core.history._destroy();\r\n\r\n            /** remove event listeners */\r\n            event._removeEvent();\r\n            \r\n            /** remove element */\r\n            util.removeItem(context.element.toolbar);\r\n            util.removeItem(context.element.topArea);\r\n\r\n            /** remove object reference */\r\n            for (let k in core.functions) { if (util.hasOwn(core, k)) delete core.functions[k]; }\r\n            for (let k in core) { if (util.hasOwn(core, k)) delete core[k]; }\r\n            for (let k in event) { if (util.hasOwn(event, k)) delete event[k]; }\r\n            for (let k in context) { if (util.hasOwn(context, k)) delete context[k]; }\r\n            for (let k in pluginCallButtons) { if (util.hasOwn(pluginCallButtons, k)) delete pluginCallButtons[k]; }\r\n            \r\n            /** remove user object */\r\n            for (let k in this) { if (util.hasOwn(this, k)) delete this[k]; }\r\n        },\r\n\r\n        /**\r\n         * @description Toolbar methods\r\n         */\r\n        toolbar: {\r\n            /**\r\n             * @description Disable the toolbar\r\n             */\r\n            disable: function () {\r\n                /** off menus */\r\n                core.submenuOff();\r\n                core.moreLayerOff();\r\n                core.containerOff();\r\n\r\n                context.tool.cover.style.display = 'block';\r\n            },\r\n\r\n            /**\r\n             * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n             */\r\n            disabled: function () {\r\n                this.disable();\r\n            },\r\n\r\n            /**\r\n             * @description Enable the toolbar\r\n             */\r\n            enable: function () {\r\n                context.tool.cover.style.display = 'none';\r\n            },\r\n\r\n            /**\r\n             * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n             */\r\n             enabled: function () {\r\n                this.enable();\r\n            },\r\n\r\n            /**\r\n             * @description Show the toolbar\r\n             */\r\n            show: function () {\r\n                if (core._isInline) {\r\n                    event._showToolbarInline();\r\n                } else {\r\n                    context.element.toolbar.style.display = '';\r\n                    context.element._stickyDummy.style.display = '';\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @description Hide the toolbar\r\n             */\r\n            hide: function () {\r\n                if (core._isInline) {\r\n                    event._hideToolbar();\r\n                } else {\r\n                    context.element.toolbar.style.display = 'none';\r\n                    context.element._stickyDummy.style.display = 'none';\r\n                }\r\n            },\r\n        },\r\n\r\n        /**\r\n         * @description Wysiwyg methods\r\n         */\r\n         wysiwyg: {\r\n            /**\r\n             * @description Disable the wysiwyg area\r\n             */\r\n            disable: function () {\r\n               /** off menus */\r\n                core.controllersOff();\r\n                if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n                context.element.wysiwyg.setAttribute('contenteditable', false);\r\n                core.isDisabled = true;\r\n\r\n                if (options.codeMirrorEditor) {\r\n                    options.codeMirrorEditor.setOption('readOnly', true);\r\n                } else {\r\n                    context.element.code.setAttribute('disabled', 'disabled');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @description Enable the wysiwyg area\r\n             */\r\n            enable: function () {\r\n                context.element.wysiwyg.setAttribute('contenteditable', true);\r\n                core.isDisabled = false;\r\n\r\n                if (options.codeMirrorEditor) {\r\n                    options.codeMirrorEditor.setOption('readOnly', false);\r\n                } else {\r\n                    context.element.code.removeAttribute('disabled');\r\n                }\r\n            },\r\n         }\r\n    };\r\n\r\n    /************ Core init ************/\r\n    // functions\r\n    core.functions = functions;\r\n    core.options = options;\r\n\r\n    // Create to sibling node\r\n    let contextEl = context.element;\r\n    let originEl = contextEl.originElement;\r\n    let topEl = contextEl.topArea;\r\n    originEl.style.display = 'none';\r\n    topEl.style.display = 'block';\r\n\r\n    // init\r\n    if (options.iframe) {\r\n        contextEl.wysiwygFrame.addEventListener('load', function () {\r\n            util._setIframeDocument(this, options);\r\n            core._editorInit(false, options.value);\r\n            options.value = null;\r\n        });\r\n    }\r\n\r\n    // insert editor element\r\n    if (typeof originEl.nextElementSibling === 'object') {\r\n        originEl.parentNode.insertBefore(topEl, originEl.nextElementSibling);\r\n    } else {\r\n        originEl.parentNode.appendChild(topEl);\r\n    }\r\n\r\n    contextEl.editorArea.appendChild(contextEl.wysiwygFrame);\r\n    contextEl = originEl = topEl = null;\r\n\r\n    // init\r\n    if (!options.iframe) {\r\n        core._editorInit(false, options.value);\r\n        options.value = null;\r\n    }\r\n\r\n    return functions;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}