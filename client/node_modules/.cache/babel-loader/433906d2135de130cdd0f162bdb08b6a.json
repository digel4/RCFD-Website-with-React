{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\admin\\\\NewEvent.js\",\n    _s = $RefreshSig$();\n\nimport SunEditor from 'suneditor-react';\nimport { useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchEvent, createEvent, setBusinessName, setCity, setDate, setDescription, setEndTime, setEventURL, setExcerpt, setImage, setName, setPassword, setPostcode, setStartTime, setStreetNumber, setStreetName } from '../../actions';\nimport { connect } from 'react-redux';\nimport 'suneditor/dist/css/suneditor.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewEvent = props => {\n  _s();\n\n  // const editor = SUNEDITOR.create((document.getElementById('editor')),{\n  //     // All of the plugins are loaded in the \"window.SUNEDITOR\" object in dist/suneditor.min.js file\n  //     // Insert options\n  //     // Language global object (default: en)\n  //     lang: SUNEDITOR_LANG['en']\n  //     });\n  //console.log(props)\n  const showState = () => {\n    console.log(\"state is:\");\n    console.log(props.state);\n  };\n\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.fetchEvent(id);\n    console.log(\"selected event is:\");\n    console.log(props.selectedEvent);\n    console.log(\"props are:\");\n    console.log(props);\n\n    if (props.selectedEvent) {\n      console.log(\"selectedEvent exists\");\n      props.setBusinessName(props.selectedEvent.businessName);\n      props.setCity(props.selectedEvent.city);\n      props.setDate(props.selectedEvent.longDate);\n      props.setDescription(props.selectedEvent.description);\n      props.setEndTime(props.selectedEvent.endTime);\n      props.setEventURL(props.selectedEvent.eventURL);\n      props.setExcerpt(props.selectedEvent.excerpt);\n      props.setImage(props.selectedEvent.image);\n      props.setName(props.selectedEvent.name);\n      props.setPostcode(props.selectedEvent.postcode);\n      props.setStartTime(props.selectedEvent.startTime);\n      props.setStreetNumber(props.selectedEvent.streetNumber);\n      props.setStreetName(props.selectedEvent.streetName);\n    }\n  }, []); // document.getElementById(\"form\").addEventListener(\"submit\", function() {\n  //     editor.save()\n  // });\n\n  const editor = useRef();\n\n  const getSunEditorInstance = sunEditor => {\n    editor.current = sunEditor;\n  };\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    console.log(\"triggered form submit\");\n    const {\n      businessName,\n      city,\n      date,\n      desc,\n      endTime,\n      eventURL,\n      excerpt,\n      image,\n      name,\n      postcode,\n      startTime,\n      streetNumber,\n      streetName\n    } = props.eventInfo; // setBusinessName(props.eventInfo.businessName)\n    // setCity(props.eventInfo.city)\n    // setDate(props.eventInfo.date)\n    // setDescription(props.eventInfo.description)\n    // setEndTime(props.eventInfo.endTime)\n    // setEventURL(props.eventInfo.eventURL)\n    // setExcerpt(props.eventInfo.excerpt)\n    // setImage(props.eventInfo.image)\n    // setName(props.eventInfo.name)\n    // setPostcode(props.eventInfo.postcode)\n    // setStartTime(props.eventInfo.startTime)\n    // setStreetNumber(props.eventInfo.streetNumber)\n    // setStreetName(props.eventInfo.streetName)\n\n    const formValues = {\n      businessName,\n      city,\n      date,\n      desc,\n      endTime,\n      eventURL,\n      excerpt,\n      image,\n      name,\n      postcode,\n      startTime,\n      streetNumber,\n      streetName\n    }; // props.createEvent(props.eventInfo.businessName,\n    //     props.eventInfo.city,\n    //     props.eventInfo.date,\n    //     props.eventInfo.description,\n    //     props.eventInfo.endTime,\n    //     props.eventInfo.eventURL,\n    //     props.eventInfo.excerpt,\n    //     props.eventInfo.image,\n    //     props.eventInfo.name,\n    //     props.eventInfo.postcode,\n    //     props.eventInfo.startTime,\n    //     props.eventInfo.streetNumber,\n    //     props.eventInfo.streetName)\n\n    props.createEvent(formValues);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <p></p>\n    _jsxDEV(\"div\", {\n      className: \"container row\",\n      style: {\n        width: \"80%\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        action: \"/admin/new\",\n        onSubmit: formSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create a new event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"name\",\n            value: props.eventInfo.name,\n            onChange: e => props.setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"date\",\n            name: \"date\",\n            placeholder: \"date\",\n            value: props.eventInfo.date,\n            onChange: e => props.setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"time\",\n            name: \"startTime\",\n            placeholder: \"Start Time\",\n            value: props.eventInfo.startTime,\n            onChange: e => props.setStartTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"time\",\n            name: \"endTime\",\n            placeholder: \"End Time\",\n            value: props.eventInfo.endTime,\n            onChange: e => props.setEndTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Eventbrite Link:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"eventURL\",\n            placeholder: \"Event URL\",\n            value: props.eventInfo.eventURL,\n            onChange: e => props.setEventURL(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"image\",\n            placeholder: \"image url\",\n            value: props.eventInfo.image,\n            onChange: e => props.setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Business Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"businessName\",\n            placeholder: \"Business Name\",\n            value: props.eventInfo.businessName,\n            onChange: e => props.setBusinessName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"streetNumber\",\n            placeholder: \"Street Number\",\n            value: props.eventInfo.streetNumber,\n            onChange: e => props.setStreetNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"streetName\",\n            placeholder: \"Street Name\",\n            value: props.eventInfo.streetName,\n            onChange: e => props.setStreetName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"city\",\n            placeholder: \"City\",\n            value: props.eventInfo.city,\n            onChange: e => props.setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Postcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"postcode\",\n            placeholder: \"Postcode\",\n            value: props.eventInfo.postcode,\n            onChange: e => props.setPostcode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Event Descriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SunEditor, {\n            getSunEditorInstance: getSunEditorInstance,\n            name: \"description\" // value = {props.eventInfo.description} \n            //onChange={e => props.setDescription(e.target.value)} \n            ,\n            onChange: content => props.setDescription(content) //props.selectedEvent.description || \n            ,\n            setContents: \"enter content\",\n            onClick: e => {\n              console.log(\"click\");\n            },\n            setOptions: {\n              rows: 10,\n              cols: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Excerpt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            maxLength: \"162\",\n            name: \"excerpt\",\n            placeholder: \"excerpt\",\n            value: props.eventInfo.excerpt,\n            onChange: e => props.setExcerpt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-primary btn-block\",\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: showState,\n          children: \"show state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/events\",\n          children: \"Back to Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  );\n}; // export default NewEvent;\n// description\n// excerpt\n// postcode\n// city\n// streetNumber\n// streetName\n// businessName\n// image\n// eventURL\n// endTime\n// startTime\n// date\n// name\n\n\n_s(NewEvent, \"a1Lj0nRmC3Wqv2C/BAYOyBx4RPQ=\", false, function () {\n  return [useParams];\n});\n\n_c = NewEvent;\n{\n  /* <p>hello from login</p>\r\n       <form className=\"auth-form\" onSubmit={formSubmitHandler}>\r\n         <div class=\"form-group\" FormGroup label=\"User\" labelFor=\"userName\">\r\n           <input class=\"form-control\"\r\n             id=\"userName\"\r\n             name=\"userName\"\r\n             placeholder=\"User Name\"\r\n             type=\"text\"\r\n             value = { props.adminStatus.adminName }\r\n             onChange={e => props.setAdminName(e.target.value)}\r\n           >\r\n           </input>\r\n         </div>\r\n         <div class=\"form-group\" label=\"Password\" labelFor=\"password\">\r\n           <input class=\"form-control\"\r\n             id=\"password\"\r\n             placeholder=\"Password\"\r\n             type=\"password\"\r\n             name=\"password\"\r\n             value={props.adminStatus.adminPassword}\r\n             onChange={e => props.setPassword(e.target.value)}\r\n           >\r\n           </input>\r\n         </div>\r\n         <button className=\"btn btn-primary btn-block\" type=\"submit\" >Sign In</button>\r\n       </form>\r\n  \n       <button className=\"btn btn-primary btn-block\" onClick={props.verifyUser}>verifyUser</button>\r\n       <button className=\"btn btn-primary btn-block\" onClick={showState}>show state</button>\r\n       <button className=\"btn btn-primary btn-block\" onClick={() => props.signOut(props.adminStatus.token)}>Log Out</button>\r\n     </div> */\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventInfo: { ...state.admin\n    },\n    selectedEvent: state.events.selectedEvent\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvent,\n  createEvent,\n  setBusinessName,\n  setCity,\n  setDate,\n  setDescription,\n  setEndTime,\n  setEventURL,\n  setExcerpt,\n  setImage,\n  setName,\n  setPassword,\n  setPostcode,\n  setStartTime,\n  setStreetNumber,\n  setStreetName\n})(NewEvent);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/admin/NewEvent.js"],"names":["SunEditor","useRef","useEffect","useParams","fetchEvent","createEvent","setBusinessName","setCity","setDate","setDescription","setEndTime","setEventURL","setExcerpt","setImage","setName","setPassword","setPostcode","setStartTime","setStreetNumber","setStreetName","connect","NewEvent","props","showState","console","log","state","id","selectedEvent","businessName","city","longDate","description","endTime","eventURL","excerpt","image","name","postcode","startTime","streetNumber","streetName","editor","getSunEditorInstance","sunEditor","current","formSubmitHandler","e","preventDefault","date","desc","eventInfo","formValues","width","margin","target","value","content","rows","cols","mapStateToProps","admin","events"],"mappings":"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","sourcesContent":["import SunEditor from 'suneditor-react'\r\nimport { useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchEvent, createEvent, setBusinessName, setCity, setDate, setDescription, setEndTime, setEventURL, setExcerpt, setImage, setName, setPassword, setPostcode, setStartTime, setStreetNumber, setStreetName } from '../../actions'\r\nimport { connect } from 'react-redux';\r\nimport 'suneditor/dist/css/suneditor.min.css'; \r\nconst NewEvent = (props) => {\r\n    // const editor = SUNEDITOR.create((document.getElementById('editor')),{\r\n    //     // All of the plugins are loaded in the \"window.SUNEDITOR\" object in dist/suneditor.min.js file\r\n    //     // Insert options\r\n    //     // Language global object (default: en)\r\n    //     lang: SUNEDITOR_LANG['en']\r\n    //     });\r\n    //console.log(props)\r\n    const showState = () => {\r\n        console.log(\"state is:\")\r\n        console.log(props.state)\r\n    }\r\n\r\n    const { id } = useParams()\r\n    useEffect( () => {\r\n        props.fetchEvent(id);\r\n        console.log(\"selected event is:\")\r\n        console.log(props.selectedEvent)\r\n        console.log(\"props are:\")\r\n        console.log(props)\r\n        if(props.selectedEvent) {\r\n            console.log(\"selectedEvent exists\")\r\n            props.setBusinessName(props.selectedEvent.businessName); \r\n            props.setCity(props.selectedEvent.city)\r\n            props.setDate(props.selectedEvent.longDate)\r\n            props.setDescription(props.selectedEvent.description)\r\n            props.setEndTime(props.selectedEvent.endTime)\r\n            props.setEventURL(props.selectedEvent.eventURL)\r\n            props.setExcerpt(props.selectedEvent.excerpt)\r\n            props.setImage(props.selectedEvent.image)\r\n            props.setName(props.selectedEvent.name)\r\n            props.setPostcode(props.selectedEvent.postcode)\r\n            props.setStartTime(props.selectedEvent.startTime)\r\n            props.setStreetNumber(props.selectedEvent.streetNumber)\r\n            props.setStreetName(props.selectedEvent.streetName)\r\n        }\r\n\r\n     }, []);\r\n\r\n    // document.getElementById(\"form\").addEventListener(\"submit\", function() {\r\n    //     editor.save()\r\n    // });\r\n\r\n    const editor = useRef();\r\n\r\n    const getSunEditorInstance = (sunEditor) => {\r\n        editor.current = sunEditor;\r\n    };\r\n    const formSubmitHandler = e => {\r\n        e.preventDefault()\r\n        console.log(\"triggered form submit\")\r\n        const { businessName,\r\n            city,\r\n            date,\r\n            desc,\r\n            endTime,\r\n            eventURL,\r\n            excerpt,\r\n            image,\r\n            name,\r\n            postcode,\r\n            startTime,\r\n            streetNumber,\r\n            streetName} = props.eventInfo\r\n        // setBusinessName(props.eventInfo.businessName)\r\n        // setCity(props.eventInfo.city)\r\n        // setDate(props.eventInfo.date)\r\n        // setDescription(props.eventInfo.description)\r\n        // setEndTime(props.eventInfo.endTime)\r\n        // setEventURL(props.eventInfo.eventURL)\r\n        // setExcerpt(props.eventInfo.excerpt)\r\n        // setImage(props.eventInfo.image)\r\n        // setName(props.eventInfo.name)\r\n        // setPostcode(props.eventInfo.postcode)\r\n        // setStartTime(props.eventInfo.startTime)\r\n        // setStreetNumber(props.eventInfo.streetNumber)\r\n        // setStreetName(props.eventInfo.streetName)\r\n        const formValues = {\r\n            businessName,\r\n            city,\r\n            date,\r\n            desc,\r\n            endTime,\r\n            eventURL,\r\n            excerpt,\r\n            image,\r\n            name,\r\n            postcode,\r\n            startTime,\r\n            streetNumber,\r\n            streetName\r\n        }\r\n        // props.createEvent(props.eventInfo.businessName,\r\n        //     props.eventInfo.city,\r\n        //     props.eventInfo.date,\r\n        //     props.eventInfo.description,\r\n        //     props.eventInfo.endTime,\r\n        //     props.eventInfo.eventURL,\r\n        //     props.eventInfo.excerpt,\r\n        //     props.eventInfo.image,\r\n        //     props.eventInfo.name,\r\n        //     props.eventInfo.postcode,\r\n        //     props.eventInfo.startTime,\r\n        //     props.eventInfo.streetNumber,\r\n        //     props.eventInfo.streetName)\r\n        props.createEvent(formValues)\r\n      }\r\n\r\n\r\n    return (\r\n        // <p></p>\r\n    <div className=\"container row\" style={{ width: \"80%\", margin: \"auto\" }}>\r\n        <form id=\"form\" action=\"/admin/new\" onSubmit={formSubmitHandler}>\r\n            <h1>\t\r\n                Create a new event\r\n            </h1>\r\n            <div className=\"form-group\">\r\n                <label>Name: </label>\r\n                <input className=\"form-control\" type=\"text\" name=\"name\" placeholder=\"name\" value={props.eventInfo.name} onChange={e => props.setName(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Date</label>\r\n                <input className=\"form-control\" type=\"date\" name=\"date\" placeholder=\"date\" value={props.eventInfo.date} onChange={e => props.setDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Start Time:</label>\r\n                <input className=\"form-control\" type=\"time\" name=\"startTime\" placeholder=\"Start Time\" value={props.eventInfo.startTime} onChange={e => props.setStartTime(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>End Time:</label>\r\n                <input className=\"form-control\" type=\"time\" name=\"endTime\" placeholder=\"End Time\" value={props.eventInfo.endTime} onChange={e => props.setEndTime(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Eventbrite Link:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"eventURL\" placeholder=\"Event URL\" value={props.eventInfo.eventURL} onChange={e => props.setEventURL(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Event Image URL</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"image\" placeholder=\"image url\" value={props.eventInfo.image} onChange={e => props.setImage(e.target.value)}/>\r\n            </div>\r\n            <h1>\r\n                address\r\n            </h1>\r\n            <div className=\"form-group\">\r\n                <label>Business Name:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"businessName\" placeholder=\"Business Name\" value={props.eventInfo.businessName} onChange={e => props.setBusinessName(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Street Number:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"streetNumber\" placeholder=\"Street Number\"value={props.eventInfo.streetNumber} onChange={e => props.setStreetNumber(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Street Name:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"streetName\" placeholder=\"Street Name\" value={props.eventInfo.streetName} onChange={e => props.setStreetName(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>City:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"city\" placeholder=\"City\" value={props.eventInfo.city} onChange={e => props.setCity(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Postcode:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"postcode\" placeholder=\"Postcode\"value={props.eventInfo.postcode} onChange={e => props.setPostcode(e.target.value)}/>\r\n            </div>\r\n\r\n            <h1>\r\n                Event Descriptions\r\n            </h1>\r\n            <div className=\"form-group\">\r\n                <label>Event Description</label>\r\n                <SunEditor \r\n                    getSunEditorInstance={getSunEditorInstance}\r\n                    name=\"description\" \r\n                    // value = {props.eventInfo.description} \r\n                    //onChange={e => props.setDescription(e.target.value)} \r\n                    onChange={  (content) => props.setDescription(content) }\r\n                    //props.selectedEvent.description || \r\n                    setContents={ \"enter content\"}\r\n                    onClick={(e) => {console.log(\"click\")}}\r\n                    setOptions={ {\r\n                        rows:10,\r\n                        cols:100\r\n                } }/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Event Excerpt</label>\r\n                <input className=\"form-control\" type=\"text\" maxLength=\"162\" name=\"excerpt\" placeholder=\"excerpt\" value={props.eventInfo.excerpt} onChange={e => props.setExcerpt(e.target.value)}/>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                Submit!\r\n            </button>\r\n            <button className=\"btn btn-primary btn-block\" onClick={showState}>show state</button>\r\n            <a href=\"/events\">Back to Events</a>\r\n        </form>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n// export default NewEvent;\r\n\r\n\r\n\r\n// description\r\n\r\n// excerpt\r\n\r\n// postcode\r\n// city\r\n// streetNumber\r\n// streetName\r\n// businessName\r\n\r\n// image\r\n// eventURL\r\n\r\n// endTime\r\n// startTime\r\n// date\r\n\r\n// name\r\n\r\n\r\n{/* <p>hello from login</p>\r\n      <form className=\"auth-form\" onSubmit={formSubmitHandler}>\r\n        <div class=\"form-group\" FormGroup label=\"User\" labelFor=\"userName\">\r\n          <input class=\"form-control\"\r\n            id=\"userName\"\r\n            name=\"userName\"\r\n            placeholder=\"User Name\"\r\n            type=\"text\"\r\n            value = { props.adminStatus.adminName }\r\n            onChange={e => props.setAdminName(e.target.value)}\r\n          >\r\n          </input>\r\n        </div>\r\n        <div class=\"form-group\" label=\"Password\" labelFor=\"password\">\r\n          <input class=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={props.adminStatus.adminPassword}\r\n            onChange={e => props.setPassword(e.target.value)}\r\n          >\r\n          </input>\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\" >Sign In</button>\r\n      </form>\r\n\r\n      <button className=\"btn btn-primary btn-block\" onClick={props.verifyUser}>verifyUser</button>\r\n      <button className=\"btn btn-primary btn-block\" onClick={showState}>show state</button>\r\n      <button className=\"btn btn-primary btn-block\" onClick={() => props.signOut(props.adminStatus.token)}>Log Out</button>\r\n    </div> */}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        eventInfo: {...state.admin},\r\n        selectedEvent: state.events.selectedEvent\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchEvent, createEvent, setBusinessName, setCity, setDate, setDescription, setEndTime, setEventURL, setExcerpt, setImage, setName, setPassword, setPostcode, setStartTime, setStreetNumber, setStreetName }\r\n    )(NewEvent);\r\n\r\n"]},"metadata":{},"sourceType":"module"}