{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\admin\\\\EditEvent.js\",\n    _s = $RefreshSig$();\n\nimport EventForm from './EventForm';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchEvent } from '../../actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditEvent = props => {\n  _s();\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    console.log(\"triggered form submit\");\n    const {\n      businessName,\n      city,\n      date,\n      desc,\n      endTime,\n      eventURL,\n      excerpt,\n      image,\n      name,\n      postcode,\n      startTime,\n      streetNumber,\n      streetName\n    } = props.eventInfo;\n    const formValues = {\n      businessName,\n      city,\n      date,\n      desc,\n      endTime,\n      eventURL,\n      excerpt,\n      image,\n      name,\n      postcode,\n      startTime,\n      streetNumber,\n      streetName\n    };\n    props.createEvent(formValues);\n  };\n\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.fetchEvent(id);\n  }, []);\n\n  if (props.selectedEvent) {\n    return /*#__PURE__*/_jsxDEV(EventForm, {\n      formSubmitHandler: formSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(EditEvent, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = EditEvent;\n\nconst mapStateToProps = state => {\n  return {\n    eventInfo: { ...state.admin\n    },\n    selectedEvent: state.events.selectedEvent\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvent\n})(EditEvent);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEvent\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/admin/EditEvent.js"],"names":["EventForm","useEffect","useParams","fetchEvent","connect","EditEvent","props","formSubmitHandler","e","preventDefault","console","log","businessName","city","date","desc","endTime","eventURL","excerpt","image","name","postcode","startTime","streetNumber","streetName","eventInfo","formValues","createEvent","id","selectedEvent","mapStateToProps","state","admin","events"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAM;AAAEC,MAAAA,YAAF;AACFC,MAAAA,IADE;AAEFC,MAAAA,IAFE;AAGFC,MAAAA,IAHE;AAIFC,MAAAA,OAJE;AAKFC,MAAAA,QALE;AAMFC,MAAAA,OANE;AAOFC,MAAAA,KAPE;AAQFC,MAAAA,IARE;AASFC,MAAAA,QATE;AAUFC,MAAAA,SAVE;AAWFC,MAAAA,YAXE;AAYFC,MAAAA;AAZE,QAYYlB,KAAK,CAACmB,SAZxB;AAaA,UAAMC,UAAU,GAAG;AACfd,MAAAA,YADe;AAEfC,MAAAA,IAFe;AAGfC,MAAAA,IAHe;AAIfC,MAAAA,IAJe;AAKfC,MAAAA,OALe;AAMfC,MAAAA,QANe;AAOfC,MAAAA,OAPe;AAQfC,MAAAA,KARe;AASfC,MAAAA,IATe;AAUfC,MAAAA,QAVe;AAWfC,MAAAA,SAXe;AAYfC,MAAAA,YAZe;AAafC,MAAAA;AAbe,KAAnB;AAeAlB,IAAAA,KAAK,CAACqB,WAAN,CAAkBD,UAAlB;AACD,GAhCH;;AAoCA,QAAM;AAAEE,IAAAA;AAAF,MAAS1B,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAE,MAAM;AACbK,IAAAA,KAAK,CAACH,UAAN,CAAiByB,EAAjB;AACF,GAFO,EAEL,EAFK,CAAT;;AAIA,MAAItB,KAAK,CAACuB,aAAV,EAAyB;AACrB,wBACI,QAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEtB;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAIO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,CApDD;;GAAMF,S;UAsCaH,S;;;KAtCbG,S;;AAsDN,MAAMyB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,SAAS,EAAE,EAAC,GAAGM,KAAK,CAACC;AAAV,KADR;AAEHH,IAAAA,aAAa,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AAFzB,GAAP;AAIH,CALD;;AAOA,eAAezB,OAAO,CAClB0B,eADkB,EAElB;AAAE3B,EAAAA;AAAF,CAFkB,CAAP,CAGTE,SAHS,CAAf","sourcesContent":["import EventForm from './EventForm';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchEvent } from '../../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nconst EditEvent = (props) => {\r\n\r\n    const formSubmitHandler = e => {\r\n        e.preventDefault()\r\n        console.log(\"triggered form submit\")\r\n        const { businessName,\r\n            city,\r\n            date,\r\n            desc,\r\n            endTime,\r\n            eventURL,\r\n            excerpt,\r\n            image,\r\n            name,\r\n            postcode,\r\n            startTime,\r\n            streetNumber,\r\n            streetName} = props.eventInfo\r\n        const formValues = {\r\n            businessName,\r\n            city,\r\n            date,\r\n            desc,\r\n            endTime,\r\n            eventURL,\r\n            excerpt,\r\n            image,\r\n            name,\r\n            postcode,\r\n            startTime,\r\n            streetNumber,\r\n            streetName\r\n        }\r\n        props.createEvent(formValues)\r\n      }\r\n\r\n\r\n\r\n    const { id } = useParams()\r\n    useEffect( () => {\r\n        props.fetchEvent(id)\r\n     }, []);\r\n\r\n    if (props.selectedEvent) { \r\n        return (\r\n            <EventForm formSubmitHandler={formSubmitHandler}/>\r\n        )\r\n    } else {\r\n        return (\r\n            <p>Loading</p>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        eventInfo: {...state.admin},\r\n        selectedEvent: state.events.selectedEvent\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchEvent }\r\n    )(EditEvent);"]},"metadata":{},"sourceType":"module"}