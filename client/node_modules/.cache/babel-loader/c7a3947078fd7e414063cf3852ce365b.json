{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\partials\\\\EmailSubscribe.js\";\nimport React from \"react\";\nimport { setMailChimpEmail, setMailChimpfirstName, setMailChimpSecondName, sendDetailsToMailChimpAPI } from '../../actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailSubscribe = props => {\n  const {\n    newsletterSubscritionDetails,\n    setMailChimpEmail,\n    setMailChimpfirstName,\n    setMailChimpSecondName,\n    sendDetailsToMailChimpAPI\n  } = props;\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    sendDetailsToMailChimpAPI(newsletterSubscritionDetails);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"email-subscribe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1-white\",\n      children: \"Stay in Touch!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2-white\",\n      children: \"Always be in the know about upcoming RCF events and workshops by subscribing to our newsletter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"email-subscribe-form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: newsletterSubscritionDetails.firstName,\n        onChange: e => {\n          setMailChimpfirstName(e.target.value);\n          console.log(newsletterSubscritionDetails.firstName);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"\",\n        name: \"secondName\",\n        placeholder: \"Second Name\",\n        value: newsletterSubscritionDetails.secondName,\n        onChange: e => {\n          setMailChimpSecondName(e.target.value);\n          console.log(newsletterSubscritionDetails.secondName);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: newsletterSubscritionDetails.email,\n        onChange: e => {\n          setMailChimpEmail(e.target.value);\n          console.log(props.state);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EmailSubscribe;\n\nconst mapStateToProps = state => {\n  return {\n    newsletterSubscritionDetails: { ...state.mailChimpSubscriptionDetails\n    },\n    state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setMailChimpEmail,\n  setMailChimpfirstName,\n  setMailChimpSecondName,\n  sendDetailsToMailChimpAPI\n})(EmailSubscribe);\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailSubscribe\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/partials/EmailSubscribe.js"],"names":["React","setMailChimpEmail","setMailChimpfirstName","setMailChimpSecondName","sendDetailsToMailChimpAPI","connect","EmailSubscribe","props","newsletterSubscritionDetails","formSubmitHandler","e","preventDefault","firstName","target","value","console","log","secondName","email","state","mapStateToProps","mailChimpSubscriptionDetails"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { setMailChimpEmail, setMailChimpfirstName, setMailChimpSecondName, sendDetailsToMailChimpAPI } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst EmailSubscribe = (props) => {\r\n    const { newsletterSubscritionDetails, setMailChimpEmail, setMailChimpfirstName, setMailChimpSecondName, sendDetailsToMailChimpAPI } = props;\r\n\r\n    const formSubmitHandler = e => {\r\n        e.preventDefault()\r\n        sendDetailsToMailChimpAPI(newsletterSubscritionDetails)\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"container\" id=\"email-subscribe\">\r\n            <h1 className=\"h1-white\">Stay in Touch!</h1>\r\n            <h2 className=\"h2-white\">Always be in the know about upcoming RCF events and workshops by subscribing to our newsletter!</h2>\r\n            <form id=\"email-subscribe-form\" onSubmit={formSubmitHandler}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"\" \r\n                    name=\"firstName\" \r\n                    placeholder=\"First Name\" \r\n                    value={newsletterSubscritionDetails.firstName}\r\n                    onChange={e => {\r\n                        setMailChimpfirstName(e.target.value)\r\n                        console.log(newsletterSubscritionDetails.firstName)\r\n                    }}\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"\" \r\n                    name=\"secondName\" \r\n                    placeholder=\"Second Name\"\r\n                    value={newsletterSubscritionDetails.secondName}\r\n                    onChange={e => {\r\n                        setMailChimpSecondName(e.target.value)\r\n                        console.log(newsletterSubscritionDetails.secondName)\r\n                    }}\r\n                />\r\n                <input \r\n                    type=\"email\" \r\n                    className=\"\" \r\n                    name=\"email\" \r\n                    placeholder=\"Email\"\r\n                    value={newsletterSubscritionDetails.email}\r\n                    onChange={e => {\r\n                        setMailChimpEmail(e.target.value);\r\n                        console.log(props.state)\r\n                    }}\r\n                />\r\n                <button type=\"submit\" id=\"submit\" className=\"btn btn-primary\">Subscribe</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        newsletterSubscritionDetails : { ...state.mailChimpSubscriptionDetails },\r\n        state\r\n    }\r\n  }\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { setMailChimpEmail, setMailChimpfirstName, setMailChimpSecondName, sendDetailsToMailChimpAPI  }\r\n  )(EmailSubscribe);\r\n"]},"metadata":{},"sourceType":"module"}