{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digel\\\\Desktop\\\\repos\\\\RCFD-Website-with-React\\\\src\\\\components\\\\admin\\\\Login.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { signIn, setAdminName, verifyUser, password, signOut, setPassword, error, submitting, setSubmitting } from '../../actions';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport events from \"../../APIS/events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    console.log(\"formSubmit triggered\");\n    console.log(props);\n    console.log(props.adminStatus.adminName);\n    props.signIn(props.adminStatus.adminName, props.adminStatus.adminPassword);\n    console.log(\"state is: \");\n    console.log(props.state);\n  };\n\n  const showState = () => {\n    console.log(\"state is:\");\n    console.log(props.state);\n  }; // const verifyUser = useCallback(() => {\n  //   API.post(\"/refreshToken\")\n  //   .then(async response => {\n  //     if (response.ok) {\n  //       const data = await response.data\n  //       setUserContext(oldValues => {\n  //         return { ...oldValues, token: data.token }\n  //       })\n  //     } else {\n  //       setUserContext(oldValues => {\n  //         return { ...oldValues, token: null }\n  //       })\n  //     }\n  //     // call refreshToken every 5 minutes to renew the authentication token.\n  //     setTimeout(verifyUser, 5 * 60 * 1000)\n  //   })\n  // }, [setUserContext])\n  // useEffect(() => {\n  //   verifyUser()\n  // }, [verifyUser])\n  // const verifyUser = () => {\n  //   console.log(\"hit verify user\")\n  //   events.post(\"/refreshToken\", {}, { withCredentials: true })\n  //   .then(async response => {\n  //     if (response.ok) {\n  //       const data = await response.data\n  //       console.log(\"data is:\")\n  //       console.log(data)\n  //     } else {\n  //       console.log(\"something went wrong!\")\n  //       // setUserContext(oldValues => {\n  //       //   return { ...oldValues, token: null }\n  //       //})\n  //     }\n  //     // call refreshToken every 5 minutes to renew the authentication token.\n  //     setTimeout(verifyUser, 5 * 60 * 1000)\n  //   })\n  // }\n  // , [setUserContext])\n  // }\n  // return (\n  //   <div>\n  //     <form onSubmit={formSubmitHandler}>\n  //       <div className=\"form-group\">\n  //         <input\n  //           id=\"userName\"\n  //           placeholder=\"user name\"\n  //           type=\"text\"\n  //           value=\"email\"\n  //         >\n  //         </input>\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <input\n  //           id=\"password\"\n  //           placeholder=\"password\"\n  //           type=\"password\"\n  //           value=\"password\"\n  //         >\n  //         </input>\n  //       </div>\n  //     </form>\n  //   </div>\n  // )\n  // const renderError = ({ error, touched }) => {\n  //   if (touched && error) {\n  //     return (\n  //       <div>error</div>\n  //     )\n  //   }\n  // }\n  // const renderInput = ({ input, label, meta }) => {\n  //   const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n  //   return (\n  //     <div className={className}>\n  //       <label>{label}</label>\n  //       <input {...input} autoComplete=\"off\" />\n  //       {renderError(meta)}\n  //     </div>\n  //   );\n  // };\n  // // const onSubmit = (formValues) => {\n  // //   props.onSubmit(formValues);\n  // // };\n  //   return (\n  //   <Form \n  //     initialValues={props.initialValues}\n  //     // onSubmit={onSubmit}\n  //     onSubmit = {signIn}\n  //     validate={(formValues) => {\n  //       const errors = {};\n  //       if (!formValues.userName) {\n  //         errors.userName = \"You must enter a userName\";\n  //       }\n  //       if (!formValues.password) {\n  //         errors.password = \"You must enter a valid password\";\n  //       }\n  //       return errors;\n  //     }}\n  //     render={({ handleSubmit }) => (\n  //       <form onSubmit={signIn} className=\"ui form error\">\n  //         <Field name=\"userName\" component={renderInput} label=\"Enter User Name\" />\n  //         <Field\n  //           name=\"password\"\n  //           component={renderInput}\n  //           label=\"Enter password\"\n  //         />\n  //         <button className=\"ui button primary\">Submit</button>\n  //       </form>\n  //     )}\n  //   />\n  //   )\n  // return (\n  //   <Form \n  //     initialValues={props.initialValues}\n  //     onSubmit={onSubmit}\n  //     validate={(formValues) => {\n  //       const errors = {};\n  //       if (!formValues.userName) {\n  //         errors.userName = \"You must enter a userName\";\n  //       }\n  //       if (!formValues.password) {\n  //         errors.password = \"You must enter a valid password\";\n  //       }\n  //       return errors;\n  //     }}\n  //     render={({ handleSubmit }) => (\n  //       <form onSubmit={handleSubmit} className=\"ui form error\">\n  //         <Field name=\"userName\" component={renderInput} label=\"Enter User Name\" />\n  //         <Field\n  //           name=\"passwrod\"\n  //           component={renderInput}\n  //           label=\"Enter password\"\n  //         />\n  //         <button className=\"ui button primary\">Submit</button>\n  //       </form>\n  //     )}\n  //   />\n  //   )\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello from login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        FormGroup: true,\n        label: \"User\",\n        labelFor: \"userName\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          id: \"userName\",\n          name: \"userName\",\n          placeholder: \"User Name\",\n          type: \"text\",\n          value: props.adminStatus.adminName,\n          onChange: e => props.setAdminName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        label: \"Password\",\n        labelFor: \"password\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control\",\n          id: \"password\",\n          placeholder: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          value: props.adminStatus.adminPassword,\n          onChange: e => props.setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: props.verifyUser,\n      children: \"verifyUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: showState,\n      children: \"show state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: () => props.signOut(props.adminStatus.token),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    // adminStatus: { adminName: state.admin.adminName, adminPassword: state.admin.adminPassword, token: state.admin.token },\n    adminStatus: { ...state.admin\n    },\n    state\n  };\n}; // export default connect(\n//   mapStateToProps,\n//   { \n//       fetchCurrEvents, \n//       fetchPastEvents \n//   }\n// )(Events);\n\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut,\n  setAdminName,\n  setPassword,\n  verifyUser\n})(Login); // export default Login\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Digel/Desktop/repos/RCFD-Website-with-React/src/components/admin/Login.js"],"names":["React","useReducer","useEffect","Form","Field","signIn","setAdminName","verifyUser","password","signOut","setPassword","error","submitting","setSubmitting","connect","axios","events","Login","props","formSubmitHandler","e","preventDefault","console","log","adminStatus","adminName","adminPassword","state","showState","target","value","token","mapStateToProps","admin"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { signIn, setAdminName, verifyUser, password,signOut, setPassword, error, submitting, setSubmitting } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport events from \"../../APIS/events\";\r\n\r\nconst Login = (props) => {\r\n\r\n  const formSubmitHandler = e => {\r\n    e.preventDefault()\r\n    console.log(\"formSubmit triggered\")\r\n    console.log(props)\r\n    console.log(props.adminStatus.adminName)\r\n    props.signIn(props.adminStatus.adminName, props.adminStatus.adminPassword)\r\n    console.log(\"state is: \")\r\n    console.log(props.state)\r\n  }\r\n\r\n  const showState = () => {\r\n    console.log(\"state is:\")\r\n    console.log(props.state)\r\n  }\r\n  // const verifyUser = useCallback(() => {\r\n  //   API.post(\"/refreshToken\")\r\n  //   .then(async response => {\r\n  //     if (response.ok) {\r\n  //       const data = await response.data\r\n  //       setUserContext(oldValues => {\r\n  //         return { ...oldValues, token: data.token }\r\n  //       })\r\n  //     } else {\r\n  //       setUserContext(oldValues => {\r\n  //         return { ...oldValues, token: null }\r\n  //       })\r\n  //     }\r\n  //     // call refreshToken every 5 minutes to renew the authentication token.\r\n  //     setTimeout(verifyUser, 5 * 60 * 1000)\r\n  //   })\r\n  // }, [setUserContext])\r\n  \r\n  // useEffect(() => {\r\n  //   verifyUser()\r\n  // }, [verifyUser])\r\n\r\n  // const verifyUser = () => {\r\n  //   console.log(\"hit verify user\")\r\n  //   events.post(\"/refreshToken\", {}, { withCredentials: true })\r\n  //   .then(async response => {\r\n  //     if (response.ok) {\r\n  //       const data = await response.data\r\n  //       console.log(\"data is:\")\r\n  //       console.log(data)\r\n  //     } else {\r\n  //       console.log(\"something went wrong!\")\r\n  //       // setUserContext(oldValues => {\r\n  //       //   return { ...oldValues, token: null }\r\n  //       //})\r\n  //     }\r\n  //     // call refreshToken every 5 minutes to renew the authentication token.\r\n  //     setTimeout(verifyUser, 5 * 60 * 1000)\r\n  //   })\r\n  // }\r\n  // , [setUserContext])\r\n  // }\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <form onSubmit={formSubmitHandler}>\r\n  //       <div className=\"form-group\">\r\n  //         <input\r\n  //           id=\"userName\"\r\n  //           placeholder=\"user name\"\r\n  //           type=\"text\"\r\n  //           value=\"email\"\r\n  //         >\r\n            \r\n  //         </input>\r\n  //       </div>\r\n  //       <div className=\"form-group\">\r\n  //         <input\r\n  //           id=\"password\"\r\n  //           placeholder=\"password\"\r\n  //           type=\"password\"\r\n  //           value=\"password\"\r\n  //         >\r\n  //         </input>\r\n          \r\n  //       </div>\r\n\r\n  //     </form>\r\n  //   </div>\r\n  // )\r\n  // const renderError = ({ error, touched }) => {\r\n  //   if (touched && error) {\r\n  //     return (\r\n  //       <div>error</div>\r\n  //     )\r\n  //   }\r\n  // }\r\n\r\n  // const renderInput = ({ input, label, meta }) => {\r\n  //   const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\r\n  //   return (\r\n  //     <div className={className}>\r\n  //       <label>{label}</label>\r\n  //       <input {...input} autoComplete=\"off\" />\r\n  //       {renderError(meta)}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  // // const onSubmit = (formValues) => {\r\n  // //   props.onSubmit(formValues);\r\n  // // };\r\n\r\n  //   return (\r\n  //   <Form \r\n  //     initialValues={props.initialValues}\r\n  //     // onSubmit={onSubmit}\r\n  //     onSubmit = {signIn}\r\n  //     validate={(formValues) => {\r\n  //       const errors = {};\r\n\r\n  //       if (!formValues.userName) {\r\n  //         errors.userName = \"You must enter a userName\";\r\n  //       }\r\n\r\n  //       if (!formValues.password) {\r\n  //         errors.password = \"You must enter a valid password\";\r\n  //       }\r\n\r\n  //       return errors;\r\n  //     }}\r\n  //     render={({ handleSubmit }) => (\r\n  //       <form onSubmit={signIn} className=\"ui form error\">\r\n  //         <Field name=\"userName\" component={renderInput} label=\"Enter User Name\" />\r\n  //         <Field\r\n  //           name=\"password\"\r\n  //           component={renderInput}\r\n  //           label=\"Enter password\"\r\n  //         />\r\n  //         <button className=\"ui button primary\">Submit</button>\r\n  //       </form>\r\n  //     )}\r\n    \r\n  //   />\r\n  //   )\r\n\r\n  // return (\r\n  //   <Form \r\n  //     initialValues={props.initialValues}\r\n  //     onSubmit={onSubmit}\r\n  //     validate={(formValues) => {\r\n  //       const errors = {};\r\n\r\n  //       if (!formValues.userName) {\r\n  //         errors.userName = \"You must enter a userName\";\r\n  //       }\r\n\r\n  //       if (!formValues.password) {\r\n  //         errors.password = \"You must enter a valid password\";\r\n  //       }\r\n\r\n  //       return errors;\r\n  //     }}\r\n  //     render={({ handleSubmit }) => (\r\n  //       <form onSubmit={handleSubmit} className=\"ui form error\">\r\n  //         <Field name=\"userName\" component={renderInput} label=\"Enter User Name\" />\r\n  //         <Field\r\n  //           name=\"passwrod\"\r\n  //           component={renderInput}\r\n  //           label=\"Enter password\"\r\n  //         />\r\n  //         <button className=\"ui button primary\">Submit</button>\r\n  //       </form>\r\n  //     )}\r\n    \r\n  //   />\r\n  //   )\r\n  return (\r\n    <div>\r\n      <p>hello from login</p>\r\n      <form className=\"auth-form\" onSubmit={formSubmitHandler}>\r\n        <div class=\"form-group\" FormGroup label=\"User\" labelFor=\"userName\">\r\n          <input class=\"form-control\"\r\n            id=\"userName\"\r\n            name=\"userName\"\r\n            placeholder=\"User Name\"\r\n            type=\"text\"\r\n            value = { props.adminStatus.adminName }\r\n            onChange={e => props.setAdminName(e.target.value)}\r\n          >\r\n          </input>\r\n        </div>\r\n        <div class=\"form-group\" label=\"Password\" labelFor=\"password\">\r\n          <input class=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={props.adminStatus.adminPassword}\r\n            onChange={e => props.setPassword(e.target.value)}\r\n          >\r\n          </input>\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\" >Sign In</button>\r\n      </form>\r\n\r\n      <button className=\"btn btn-primary btn-block\" onClick={props.verifyUser}>verifyUser</button>\r\n      <button className=\"btn btn-primary btn-block\" onClick={showState}>show state</button>\r\n      <button className=\"btn btn-primary btn-block\" onClick={() => props.signOut(props.adminStatus.token)}>Log Out</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      // adminStatus: { adminName: state.admin.adminName, adminPassword: state.admin.adminPassword, token: state.admin.token },\r\n      adminStatus: { ...state.admin },\r\n      state\r\n  }\r\n}\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   { \r\n//       fetchCurrEvents, \r\n//       fetchPastEvents \r\n//   }\r\n// )(Events);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut, setAdminName, setPassword, verifyUser }\r\n)(Login);\r\n\r\n// export default Login"]},"metadata":{},"sourceType":"module"}